
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model coligacao
 * 
 */
export type coligacao = $Result.DefaultSelection<Prisma.$coligacaoPayload>
/**
 * Model Candidato
 * 
 */
export type Candidato = $Result.DefaultSelection<Prisma.$CandidatoPayload>
/**
 * Model ContatoCandidato
 * 
 */
export type ContatoCandidato = $Result.DefaultSelection<Prisma.$ContatoCandidatoPayload>
/**
 * Model tipoAtendimento
 * 
 */
export type tipoAtendimento = $Result.DefaultSelection<Prisma.$tipoAtendimentoPayload>
/**
 * Model atendimento
 * 
 */
export type atendimento = $Result.DefaultSelection<Prisma.$atendimentoPayload>
/**
 * Model Eleitor
 * 
 */
export type Eleitor = $Result.DefaultSelection<Prisma.$EleitorPayload>
/**
 * Model contatoEleitor
 * 
 */
export type contatoEleitor = $Result.DefaultSelection<Prisma.$contatoEleitorPayload>
/**
 * Model MidiasSociaisEleitor
 * 
 */
export type MidiasSociaisEleitor = $Result.DefaultSelection<Prisma.$MidiasSociaisEleitorPayload>
/**
 * Model EnderecoEleitor
 * 
 */
export type EnderecoEleitor = $Result.DefaultSelection<Prisma.$EnderecoEleitorPayload>
/**
 * Model DadosPessoaisEleitor
 * 
 */
export type DadosPessoaisEleitor = $Result.DefaultSelection<Prisma.$DadosPessoaisEleitorPayload>
/**
 * Model PlanejamentoLocalVotacao
 * 
 */
export type PlanejamentoLocalVotacao = $Result.DefaultSelection<Prisma.$PlanejamentoLocalVotacaoPayload>
/**
 * Model Expectativa
 * 
 */
export type Expectativa = $Result.DefaultSelection<Prisma.$ExpectativaPayload>
/**
 * Model LocalVotacao
 * 
 */
export type LocalVotacao = $Result.DefaultSelection<Prisma.$LocalVotacaoPayload>
/**
 * Model Eleicoes
 * 
 */
export type Eleicoes = $Result.DefaultSelection<Prisma.$EleicoesPayload>
/**
 * Model UF
 * 
 */
export type UF = $Result.DefaultSelection<Prisma.$UFPayload>
/**
 * Model Municipio
 * 
 */
export type Municipio = $Result.DefaultSelection<Prisma.$MunicipioPayload>
/**
 * Model CandidatosEleicao
 * 
 */
export type CandidatosEleicao = $Result.DefaultSelection<Prisma.$CandidatosEleicaoPayload>
/**
 * Model LocalVotacao_has_candidatoEleicao
 * 
 */
export type LocalVotacao_has_candidatoEleicao = $Result.DefaultSelection<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
/**
 * Model quantidade_votos_eleicao
 * 
 */
export type quantidade_votos_eleicao = $Result.DefaultSelection<Prisma.$quantidade_votos_eleicaoPayload>
/**
 * Model SessoesEleitorais
 * 
 */
export type SessoesEleitorais = $Result.DefaultSelection<Prisma.$SessoesEleitoraisPayload>
/**
 * Model EnderecoLocalVotacao
 * 
 */
export type EnderecoLocalVotacao = $Result.DefaultSelection<Prisma.$EnderecoLocalVotacaoPayload>
/**
 * Model perfilUso
 * 
 */
export type perfilUso = $Result.DefaultSelection<Prisma.$perfilUsoPayload>
/**
 * Model classificacao
 * 
 */
export type classificacao = $Result.DefaultSelection<Prisma.$classificacaoPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model DadosContatoUsuario
 * 
 */
export type DadosContatoUsuario = $Result.DefaultSelection<Prisma.$DadosContatoUsuarioPayload>
/**
 * Model EnderecoUsuario
 * 
 */
export type EnderecoUsuario = $Result.DefaultSelection<Prisma.$EnderecoUsuarioPayload>
/**
 * Model login
 * 
 */
export type login = $Result.DefaultSelection<Prisma.$loginPayload>
/**
 * Model blacklist
 * 
 */
export type blacklist = $Result.DefaultSelection<Prisma.$blacklistPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Coligacaos
 * const coligacaos = await prisma.coligacao.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Coligacaos
   * const coligacaos = await prisma.coligacao.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.coligacao`: Exposes CRUD operations for the **coligacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Coligacaos
    * const coligacaos = await prisma.coligacao.findMany()
    * ```
    */
  get coligacao(): Prisma.coligacaoDelegate<ExtArgs>;

  /**
   * `prisma.candidato`: Exposes CRUD operations for the **Candidato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Candidatoes
    * const candidatoes = await prisma.candidato.findMany()
    * ```
    */
  get candidato(): Prisma.CandidatoDelegate<ExtArgs>;

  /**
   * `prisma.contatoCandidato`: Exposes CRUD operations for the **ContatoCandidato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ContatoCandidatoes
    * const contatoCandidatoes = await prisma.contatoCandidato.findMany()
    * ```
    */
  get contatoCandidato(): Prisma.ContatoCandidatoDelegate<ExtArgs>;

  /**
   * `prisma.tipoAtendimento`: Exposes CRUD operations for the **tipoAtendimento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoAtendimentos
    * const tipoAtendimentos = await prisma.tipoAtendimento.findMany()
    * ```
    */
  get tipoAtendimento(): Prisma.tipoAtendimentoDelegate<ExtArgs>;

  /**
   * `prisma.atendimento`: Exposes CRUD operations for the **atendimento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Atendimentos
    * const atendimentos = await prisma.atendimento.findMany()
    * ```
    */
  get atendimento(): Prisma.atendimentoDelegate<ExtArgs>;

  /**
   * `prisma.eleitor`: Exposes CRUD operations for the **Eleitor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eleitors
    * const eleitors = await prisma.eleitor.findMany()
    * ```
    */
  get eleitor(): Prisma.EleitorDelegate<ExtArgs>;

  /**
   * `prisma.contatoEleitor`: Exposes CRUD operations for the **contatoEleitor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ContatoEleitors
    * const contatoEleitors = await prisma.contatoEleitor.findMany()
    * ```
    */
  get contatoEleitor(): Prisma.contatoEleitorDelegate<ExtArgs>;

  /**
   * `prisma.midiasSociaisEleitor`: Exposes CRUD operations for the **MidiasSociaisEleitor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MidiasSociaisEleitors
    * const midiasSociaisEleitors = await prisma.midiasSociaisEleitor.findMany()
    * ```
    */
  get midiasSociaisEleitor(): Prisma.MidiasSociaisEleitorDelegate<ExtArgs>;

  /**
   * `prisma.enderecoEleitor`: Exposes CRUD operations for the **EnderecoEleitor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EnderecoEleitors
    * const enderecoEleitors = await prisma.enderecoEleitor.findMany()
    * ```
    */
  get enderecoEleitor(): Prisma.EnderecoEleitorDelegate<ExtArgs>;

  /**
   * `prisma.dadosPessoaisEleitor`: Exposes CRUD operations for the **DadosPessoaisEleitor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DadosPessoaisEleitors
    * const dadosPessoaisEleitors = await prisma.dadosPessoaisEleitor.findMany()
    * ```
    */
  get dadosPessoaisEleitor(): Prisma.DadosPessoaisEleitorDelegate<ExtArgs>;

  /**
   * `prisma.planejamentoLocalVotacao`: Exposes CRUD operations for the **PlanejamentoLocalVotacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PlanejamentoLocalVotacaos
    * const planejamentoLocalVotacaos = await prisma.planejamentoLocalVotacao.findMany()
    * ```
    */
  get planejamentoLocalVotacao(): Prisma.PlanejamentoLocalVotacaoDelegate<ExtArgs>;

  /**
   * `prisma.expectativa`: Exposes CRUD operations for the **Expectativa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Expectativas
    * const expectativas = await prisma.expectativa.findMany()
    * ```
    */
  get expectativa(): Prisma.ExpectativaDelegate<ExtArgs>;

  /**
   * `prisma.localVotacao`: Exposes CRUD operations for the **LocalVotacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LocalVotacaos
    * const localVotacaos = await prisma.localVotacao.findMany()
    * ```
    */
  get localVotacao(): Prisma.LocalVotacaoDelegate<ExtArgs>;

  /**
   * `prisma.eleicoes`: Exposes CRUD operations for the **Eleicoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eleicoes
    * const eleicoes = await prisma.eleicoes.findMany()
    * ```
    */
  get eleicoes(): Prisma.EleicoesDelegate<ExtArgs>;

  /**
   * `prisma.uF`: Exposes CRUD operations for the **UF** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UFS
    * const uFS = await prisma.uF.findMany()
    * ```
    */
  get uF(): Prisma.UFDelegate<ExtArgs>;

  /**
   * `prisma.municipio`: Exposes CRUD operations for the **Municipio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Municipios
    * const municipios = await prisma.municipio.findMany()
    * ```
    */
  get municipio(): Prisma.MunicipioDelegate<ExtArgs>;

  /**
   * `prisma.candidatosEleicao`: Exposes CRUD operations for the **CandidatosEleicao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CandidatosEleicaos
    * const candidatosEleicaos = await prisma.candidatosEleicao.findMany()
    * ```
    */
  get candidatosEleicao(): Prisma.CandidatosEleicaoDelegate<ExtArgs>;

  /**
   * `prisma.localVotacao_has_candidatoEleicao`: Exposes CRUD operations for the **LocalVotacao_has_candidatoEleicao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LocalVotacao_has_candidatoEleicaos
    * const localVotacao_has_candidatoEleicaos = await prisma.localVotacao_has_candidatoEleicao.findMany()
    * ```
    */
  get localVotacao_has_candidatoEleicao(): Prisma.LocalVotacao_has_candidatoEleicaoDelegate<ExtArgs>;

  /**
   * `prisma.quantidade_votos_eleicao`: Exposes CRUD operations for the **quantidade_votos_eleicao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Quantidade_votos_eleicaos
    * const quantidade_votos_eleicaos = await prisma.quantidade_votos_eleicao.findMany()
    * ```
    */
  get quantidade_votos_eleicao(): Prisma.quantidade_votos_eleicaoDelegate<ExtArgs>;

  /**
   * `prisma.sessoesEleitorais`: Exposes CRUD operations for the **SessoesEleitorais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SessoesEleitorais
    * const sessoesEleitorais = await prisma.sessoesEleitorais.findMany()
    * ```
    */
  get sessoesEleitorais(): Prisma.SessoesEleitoraisDelegate<ExtArgs>;

  /**
   * `prisma.enderecoLocalVotacao`: Exposes CRUD operations for the **EnderecoLocalVotacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EnderecoLocalVotacaos
    * const enderecoLocalVotacaos = await prisma.enderecoLocalVotacao.findMany()
    * ```
    */
  get enderecoLocalVotacao(): Prisma.EnderecoLocalVotacaoDelegate<ExtArgs>;

  /**
   * `prisma.perfilUso`: Exposes CRUD operations for the **perfilUso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PerfilUsos
    * const perfilUsos = await prisma.perfilUso.findMany()
    * ```
    */
  get perfilUso(): Prisma.perfilUsoDelegate<ExtArgs>;

  /**
   * `prisma.classificacao`: Exposes CRUD operations for the **classificacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Classificacaos
    * const classificacaos = await prisma.classificacao.findMany()
    * ```
    */
  get classificacao(): Prisma.classificacaoDelegate<ExtArgs>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.dadosContatoUsuario`: Exposes CRUD operations for the **DadosContatoUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DadosContatoUsuarios
    * const dadosContatoUsuarios = await prisma.dadosContatoUsuario.findMany()
    * ```
    */
  get dadosContatoUsuario(): Prisma.DadosContatoUsuarioDelegate<ExtArgs>;

  /**
   * `prisma.enderecoUsuario`: Exposes CRUD operations for the **EnderecoUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EnderecoUsuarios
    * const enderecoUsuarios = await prisma.enderecoUsuario.findMany()
    * ```
    */
  get enderecoUsuario(): Prisma.EnderecoUsuarioDelegate<ExtArgs>;

  /**
   * `prisma.login`: Exposes CRUD operations for the **login** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Logins
    * const logins = await prisma.login.findMany()
    * ```
    */
  get login(): Prisma.loginDelegate<ExtArgs>;

  /**
   * `prisma.blacklist`: Exposes CRUD operations for the **blacklist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Blacklists
    * const blacklists = await prisma.blacklist.findMany()
    * ```
    */
  get blacklist(): Prisma.blacklistDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.19.1
   * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    coligacao: 'coligacao',
    Candidato: 'Candidato',
    ContatoCandidato: 'ContatoCandidato',
    tipoAtendimento: 'tipoAtendimento',
    atendimento: 'atendimento',
    Eleitor: 'Eleitor',
    contatoEleitor: 'contatoEleitor',
    MidiasSociaisEleitor: 'MidiasSociaisEleitor',
    EnderecoEleitor: 'EnderecoEleitor',
    DadosPessoaisEleitor: 'DadosPessoaisEleitor',
    PlanejamentoLocalVotacao: 'PlanejamentoLocalVotacao',
    Expectativa: 'Expectativa',
    LocalVotacao: 'LocalVotacao',
    Eleicoes: 'Eleicoes',
    UF: 'UF',
    Municipio: 'Municipio',
    CandidatosEleicao: 'CandidatosEleicao',
    LocalVotacao_has_candidatoEleicao: 'LocalVotacao_has_candidatoEleicao',
    quantidade_votos_eleicao: 'quantidade_votos_eleicao',
    SessoesEleitorais: 'SessoesEleitorais',
    EnderecoLocalVotacao: 'EnderecoLocalVotacao',
    perfilUso: 'perfilUso',
    classificacao: 'classificacao',
    Usuario: 'Usuario',
    DadosContatoUsuario: 'DadosContatoUsuario',
    EnderecoUsuario: 'EnderecoUsuario',
    login: 'login',
    blacklist: 'blacklist'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "coligacao" | "candidato" | "contatoCandidato" | "tipoAtendimento" | "atendimento" | "eleitor" | "contatoEleitor" | "midiasSociaisEleitor" | "enderecoEleitor" | "dadosPessoaisEleitor" | "planejamentoLocalVotacao" | "expectativa" | "localVotacao" | "eleicoes" | "uF" | "municipio" | "candidatosEleicao" | "localVotacao_has_candidatoEleicao" | "quantidade_votos_eleicao" | "sessoesEleitorais" | "enderecoLocalVotacao" | "perfilUso" | "classificacao" | "usuario" | "dadosContatoUsuario" | "enderecoUsuario" | "login" | "blacklist"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      coligacao: {
        payload: Prisma.$coligacaoPayload<ExtArgs>
        fields: Prisma.coligacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.coligacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.coligacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>
          }
          findFirst: {
            args: Prisma.coligacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.coligacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>
          }
          findMany: {
            args: Prisma.coligacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>[]
          }
          create: {
            args: Prisma.coligacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>
          }
          createMany: {
            args: Prisma.coligacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.coligacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>[]
          }
          delete: {
            args: Prisma.coligacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>
          }
          update: {
            args: Prisma.coligacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>
          }
          deleteMany: {
            args: Prisma.coligacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.coligacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.coligacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coligacaoPayload>
          }
          aggregate: {
            args: Prisma.ColigacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateColigacao>
          }
          groupBy: {
            args: Prisma.coligacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ColigacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.coligacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ColigacaoCountAggregateOutputType> | number
          }
        }
      }
      Candidato: {
        payload: Prisma.$CandidatoPayload<ExtArgs>
        fields: Prisma.CandidatoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidatoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidatoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>
          }
          findFirst: {
            args: Prisma.CandidatoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidatoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>
          }
          findMany: {
            args: Prisma.CandidatoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>[]
          }
          create: {
            args: Prisma.CandidatoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>
          }
          createMany: {
            args: Prisma.CandidatoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CandidatoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>[]
          }
          delete: {
            args: Prisma.CandidatoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>
          }
          update: {
            args: Prisma.CandidatoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>
          }
          deleteMany: {
            args: Prisma.CandidatoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CandidatoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CandidatoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatoPayload>
          }
          aggregate: {
            args: Prisma.CandidatoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidato>
          }
          groupBy: {
            args: Prisma.CandidatoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidatoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidatoCountArgs<ExtArgs>
            result: $Utils.Optional<CandidatoCountAggregateOutputType> | number
          }
        }
      }
      ContatoCandidato: {
        payload: Prisma.$ContatoCandidatoPayload<ExtArgs>
        fields: Prisma.ContatoCandidatoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContatoCandidatoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContatoCandidatoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>
          }
          findFirst: {
            args: Prisma.ContatoCandidatoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContatoCandidatoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>
          }
          findMany: {
            args: Prisma.ContatoCandidatoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>[]
          }
          create: {
            args: Prisma.ContatoCandidatoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>
          }
          createMany: {
            args: Prisma.ContatoCandidatoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContatoCandidatoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>[]
          }
          delete: {
            args: Prisma.ContatoCandidatoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>
          }
          update: {
            args: Prisma.ContatoCandidatoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>
          }
          deleteMany: {
            args: Prisma.ContatoCandidatoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContatoCandidatoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ContatoCandidatoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContatoCandidatoPayload>
          }
          aggregate: {
            args: Prisma.ContatoCandidatoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContatoCandidato>
          }
          groupBy: {
            args: Prisma.ContatoCandidatoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContatoCandidatoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContatoCandidatoCountArgs<ExtArgs>
            result: $Utils.Optional<ContatoCandidatoCountAggregateOutputType> | number
          }
        }
      }
      tipoAtendimento: {
        payload: Prisma.$tipoAtendimentoPayload<ExtArgs>
        fields: Prisma.tipoAtendimentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipoAtendimentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipoAtendimentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>
          }
          findFirst: {
            args: Prisma.tipoAtendimentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipoAtendimentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>
          }
          findMany: {
            args: Prisma.tipoAtendimentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>[]
          }
          create: {
            args: Prisma.tipoAtendimentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>
          }
          createMany: {
            args: Prisma.tipoAtendimentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipoAtendimentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>[]
          }
          delete: {
            args: Prisma.tipoAtendimentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>
          }
          update: {
            args: Prisma.tipoAtendimentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>
          }
          deleteMany: {
            args: Prisma.tipoAtendimentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipoAtendimentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tipoAtendimentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoAtendimentoPayload>
          }
          aggregate: {
            args: Prisma.TipoAtendimentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoAtendimento>
          }
          groupBy: {
            args: Prisma.tipoAtendimentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoAtendimentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipoAtendimentoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoAtendimentoCountAggregateOutputType> | number
          }
        }
      }
      atendimento: {
        payload: Prisma.$atendimentoPayload<ExtArgs>
        fields: Prisma.atendimentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.atendimentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.atendimentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>
          }
          findFirst: {
            args: Prisma.atendimentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.atendimentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>
          }
          findMany: {
            args: Prisma.atendimentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>[]
          }
          create: {
            args: Prisma.atendimentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>
          }
          createMany: {
            args: Prisma.atendimentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.atendimentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>[]
          }
          delete: {
            args: Prisma.atendimentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>
          }
          update: {
            args: Prisma.atendimentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>
          }
          deleteMany: {
            args: Prisma.atendimentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.atendimentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.atendimentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$atendimentoPayload>
          }
          aggregate: {
            args: Prisma.AtendimentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAtendimento>
          }
          groupBy: {
            args: Prisma.atendimentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AtendimentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.atendimentoCountArgs<ExtArgs>
            result: $Utils.Optional<AtendimentoCountAggregateOutputType> | number
          }
        }
      }
      Eleitor: {
        payload: Prisma.$EleitorPayload<ExtArgs>
        fields: Prisma.EleitorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EleitorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EleitorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>
          }
          findFirst: {
            args: Prisma.EleitorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EleitorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>
          }
          findMany: {
            args: Prisma.EleitorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>[]
          }
          create: {
            args: Prisma.EleitorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>
          }
          createMany: {
            args: Prisma.EleitorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EleitorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>[]
          }
          delete: {
            args: Prisma.EleitorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>
          }
          update: {
            args: Prisma.EleitorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>
          }
          deleteMany: {
            args: Prisma.EleitorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EleitorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EleitorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleitorPayload>
          }
          aggregate: {
            args: Prisma.EleitorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEleitor>
          }
          groupBy: {
            args: Prisma.EleitorGroupByArgs<ExtArgs>
            result: $Utils.Optional<EleitorGroupByOutputType>[]
          }
          count: {
            args: Prisma.EleitorCountArgs<ExtArgs>
            result: $Utils.Optional<EleitorCountAggregateOutputType> | number
          }
        }
      }
      contatoEleitor: {
        payload: Prisma.$contatoEleitorPayload<ExtArgs>
        fields: Prisma.contatoEleitorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.contatoEleitorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.contatoEleitorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>
          }
          findFirst: {
            args: Prisma.contatoEleitorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.contatoEleitorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>
          }
          findMany: {
            args: Prisma.contatoEleitorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>[]
          }
          create: {
            args: Prisma.contatoEleitorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>
          }
          createMany: {
            args: Prisma.contatoEleitorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.contatoEleitorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>[]
          }
          delete: {
            args: Prisma.contatoEleitorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>
          }
          update: {
            args: Prisma.contatoEleitorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>
          }
          deleteMany: {
            args: Prisma.contatoEleitorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.contatoEleitorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.contatoEleitorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$contatoEleitorPayload>
          }
          aggregate: {
            args: Prisma.ContatoEleitorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContatoEleitor>
          }
          groupBy: {
            args: Prisma.contatoEleitorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContatoEleitorGroupByOutputType>[]
          }
          count: {
            args: Prisma.contatoEleitorCountArgs<ExtArgs>
            result: $Utils.Optional<ContatoEleitorCountAggregateOutputType> | number
          }
        }
      }
      MidiasSociaisEleitor: {
        payload: Prisma.$MidiasSociaisEleitorPayload<ExtArgs>
        fields: Prisma.MidiasSociaisEleitorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MidiasSociaisEleitorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MidiasSociaisEleitorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>
          }
          findFirst: {
            args: Prisma.MidiasSociaisEleitorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MidiasSociaisEleitorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>
          }
          findMany: {
            args: Prisma.MidiasSociaisEleitorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>[]
          }
          create: {
            args: Prisma.MidiasSociaisEleitorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>
          }
          createMany: {
            args: Prisma.MidiasSociaisEleitorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MidiasSociaisEleitorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>[]
          }
          delete: {
            args: Prisma.MidiasSociaisEleitorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>
          }
          update: {
            args: Prisma.MidiasSociaisEleitorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>
          }
          deleteMany: {
            args: Prisma.MidiasSociaisEleitorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MidiasSociaisEleitorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MidiasSociaisEleitorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MidiasSociaisEleitorPayload>
          }
          aggregate: {
            args: Prisma.MidiasSociaisEleitorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMidiasSociaisEleitor>
          }
          groupBy: {
            args: Prisma.MidiasSociaisEleitorGroupByArgs<ExtArgs>
            result: $Utils.Optional<MidiasSociaisEleitorGroupByOutputType>[]
          }
          count: {
            args: Prisma.MidiasSociaisEleitorCountArgs<ExtArgs>
            result: $Utils.Optional<MidiasSociaisEleitorCountAggregateOutputType> | number
          }
        }
      }
      EnderecoEleitor: {
        payload: Prisma.$EnderecoEleitorPayload<ExtArgs>
        fields: Prisma.EnderecoEleitorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnderecoEleitorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnderecoEleitorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>
          }
          findFirst: {
            args: Prisma.EnderecoEleitorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnderecoEleitorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>
          }
          findMany: {
            args: Prisma.EnderecoEleitorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>[]
          }
          create: {
            args: Prisma.EnderecoEleitorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>
          }
          createMany: {
            args: Prisma.EnderecoEleitorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnderecoEleitorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>[]
          }
          delete: {
            args: Prisma.EnderecoEleitorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>
          }
          update: {
            args: Prisma.EnderecoEleitorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>
          }
          deleteMany: {
            args: Prisma.EnderecoEleitorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnderecoEleitorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EnderecoEleitorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoEleitorPayload>
          }
          aggregate: {
            args: Prisma.EnderecoEleitorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEnderecoEleitor>
          }
          groupBy: {
            args: Prisma.EnderecoEleitorGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnderecoEleitorGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnderecoEleitorCountArgs<ExtArgs>
            result: $Utils.Optional<EnderecoEleitorCountAggregateOutputType> | number
          }
        }
      }
      DadosPessoaisEleitor: {
        payload: Prisma.$DadosPessoaisEleitorPayload<ExtArgs>
        fields: Prisma.DadosPessoaisEleitorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DadosPessoaisEleitorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DadosPessoaisEleitorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>
          }
          findFirst: {
            args: Prisma.DadosPessoaisEleitorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DadosPessoaisEleitorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>
          }
          findMany: {
            args: Prisma.DadosPessoaisEleitorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>[]
          }
          create: {
            args: Prisma.DadosPessoaisEleitorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>
          }
          createMany: {
            args: Prisma.DadosPessoaisEleitorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DadosPessoaisEleitorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>[]
          }
          delete: {
            args: Prisma.DadosPessoaisEleitorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>
          }
          update: {
            args: Prisma.DadosPessoaisEleitorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>
          }
          deleteMany: {
            args: Prisma.DadosPessoaisEleitorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DadosPessoaisEleitorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DadosPessoaisEleitorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPessoaisEleitorPayload>
          }
          aggregate: {
            args: Prisma.DadosPessoaisEleitorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDadosPessoaisEleitor>
          }
          groupBy: {
            args: Prisma.DadosPessoaisEleitorGroupByArgs<ExtArgs>
            result: $Utils.Optional<DadosPessoaisEleitorGroupByOutputType>[]
          }
          count: {
            args: Prisma.DadosPessoaisEleitorCountArgs<ExtArgs>
            result: $Utils.Optional<DadosPessoaisEleitorCountAggregateOutputType> | number
          }
        }
      }
      PlanejamentoLocalVotacao: {
        payload: Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>
        fields: Prisma.PlanejamentoLocalVotacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlanejamentoLocalVotacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlanejamentoLocalVotacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>
          }
          findFirst: {
            args: Prisma.PlanejamentoLocalVotacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlanejamentoLocalVotacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>
          }
          findMany: {
            args: Prisma.PlanejamentoLocalVotacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>[]
          }
          create: {
            args: Prisma.PlanejamentoLocalVotacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>
          }
          createMany: {
            args: Prisma.PlanejamentoLocalVotacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlanejamentoLocalVotacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>[]
          }
          delete: {
            args: Prisma.PlanejamentoLocalVotacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>
          }
          update: {
            args: Prisma.PlanejamentoLocalVotacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>
          }
          deleteMany: {
            args: Prisma.PlanejamentoLocalVotacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlanejamentoLocalVotacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PlanejamentoLocalVotacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanejamentoLocalVotacaoPayload>
          }
          aggregate: {
            args: Prisma.PlanejamentoLocalVotacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlanejamentoLocalVotacao>
          }
          groupBy: {
            args: Prisma.PlanejamentoLocalVotacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlanejamentoLocalVotacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlanejamentoLocalVotacaoCountArgs<ExtArgs>
            result: $Utils.Optional<PlanejamentoLocalVotacaoCountAggregateOutputType> | number
          }
        }
      }
      Expectativa: {
        payload: Prisma.$ExpectativaPayload<ExtArgs>
        fields: Prisma.ExpectativaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExpectativaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExpectativaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>
          }
          findFirst: {
            args: Prisma.ExpectativaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExpectativaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>
          }
          findMany: {
            args: Prisma.ExpectativaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>[]
          }
          create: {
            args: Prisma.ExpectativaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>
          }
          createMany: {
            args: Prisma.ExpectativaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExpectativaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>[]
          }
          delete: {
            args: Prisma.ExpectativaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>
          }
          update: {
            args: Prisma.ExpectativaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>
          }
          deleteMany: {
            args: Prisma.ExpectativaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExpectativaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ExpectativaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExpectativaPayload>
          }
          aggregate: {
            args: Prisma.ExpectativaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExpectativa>
          }
          groupBy: {
            args: Prisma.ExpectativaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExpectativaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExpectativaCountArgs<ExtArgs>
            result: $Utils.Optional<ExpectativaCountAggregateOutputType> | number
          }
        }
      }
      LocalVotacao: {
        payload: Prisma.$LocalVotacaoPayload<ExtArgs>
        fields: Prisma.LocalVotacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocalVotacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocalVotacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>
          }
          findFirst: {
            args: Prisma.LocalVotacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocalVotacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>
          }
          findMany: {
            args: Prisma.LocalVotacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>[]
          }
          create: {
            args: Prisma.LocalVotacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>
          }
          createMany: {
            args: Prisma.LocalVotacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocalVotacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>[]
          }
          delete: {
            args: Prisma.LocalVotacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>
          }
          update: {
            args: Prisma.LocalVotacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>
          }
          deleteMany: {
            args: Prisma.LocalVotacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocalVotacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LocalVotacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacaoPayload>
          }
          aggregate: {
            args: Prisma.LocalVotacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocalVotacao>
          }
          groupBy: {
            args: Prisma.LocalVotacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocalVotacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocalVotacaoCountArgs<ExtArgs>
            result: $Utils.Optional<LocalVotacaoCountAggregateOutputType> | number
          }
        }
      }
      Eleicoes: {
        payload: Prisma.$EleicoesPayload<ExtArgs>
        fields: Prisma.EleicoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EleicoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EleicoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>
          }
          findFirst: {
            args: Prisma.EleicoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EleicoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>
          }
          findMany: {
            args: Prisma.EleicoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>[]
          }
          create: {
            args: Prisma.EleicoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>
          }
          createMany: {
            args: Prisma.EleicoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EleicoesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>[]
          }
          delete: {
            args: Prisma.EleicoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>
          }
          update: {
            args: Prisma.EleicoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>
          }
          deleteMany: {
            args: Prisma.EleicoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EleicoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EleicoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EleicoesPayload>
          }
          aggregate: {
            args: Prisma.EleicoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEleicoes>
          }
          groupBy: {
            args: Prisma.EleicoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<EleicoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.EleicoesCountArgs<ExtArgs>
            result: $Utils.Optional<EleicoesCountAggregateOutputType> | number
          }
        }
      }
      UF: {
        payload: Prisma.$UFPayload<ExtArgs>
        fields: Prisma.UFFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UFFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UFFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>
          }
          findFirst: {
            args: Prisma.UFFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UFFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>
          }
          findMany: {
            args: Prisma.UFFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>[]
          }
          create: {
            args: Prisma.UFCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>
          }
          createMany: {
            args: Prisma.UFCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UFCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>[]
          }
          delete: {
            args: Prisma.UFDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>
          }
          update: {
            args: Prisma.UFUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>
          }
          deleteMany: {
            args: Prisma.UFDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UFUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UFUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UFPayload>
          }
          aggregate: {
            args: Prisma.UFAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUF>
          }
          groupBy: {
            args: Prisma.UFGroupByArgs<ExtArgs>
            result: $Utils.Optional<UFGroupByOutputType>[]
          }
          count: {
            args: Prisma.UFCountArgs<ExtArgs>
            result: $Utils.Optional<UFCountAggregateOutputType> | number
          }
        }
      }
      Municipio: {
        payload: Prisma.$MunicipioPayload<ExtArgs>
        fields: Prisma.MunicipioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MunicipioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MunicipioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          findFirst: {
            args: Prisma.MunicipioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MunicipioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          findMany: {
            args: Prisma.MunicipioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>[]
          }
          create: {
            args: Prisma.MunicipioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          createMany: {
            args: Prisma.MunicipioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MunicipioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>[]
          }
          delete: {
            args: Prisma.MunicipioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          update: {
            args: Prisma.MunicipioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          deleteMany: {
            args: Prisma.MunicipioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MunicipioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MunicipioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          aggregate: {
            args: Prisma.MunicipioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMunicipio>
          }
          groupBy: {
            args: Prisma.MunicipioGroupByArgs<ExtArgs>
            result: $Utils.Optional<MunicipioGroupByOutputType>[]
          }
          count: {
            args: Prisma.MunicipioCountArgs<ExtArgs>
            result: $Utils.Optional<MunicipioCountAggregateOutputType> | number
          }
        }
      }
      CandidatosEleicao: {
        payload: Prisma.$CandidatosEleicaoPayload<ExtArgs>
        fields: Prisma.CandidatosEleicaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CandidatosEleicaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CandidatosEleicaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>
          }
          findFirst: {
            args: Prisma.CandidatosEleicaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CandidatosEleicaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>
          }
          findMany: {
            args: Prisma.CandidatosEleicaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>[]
          }
          create: {
            args: Prisma.CandidatosEleicaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>
          }
          createMany: {
            args: Prisma.CandidatosEleicaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CandidatosEleicaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>[]
          }
          delete: {
            args: Prisma.CandidatosEleicaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>
          }
          update: {
            args: Prisma.CandidatosEleicaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>
          }
          deleteMany: {
            args: Prisma.CandidatosEleicaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CandidatosEleicaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CandidatosEleicaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CandidatosEleicaoPayload>
          }
          aggregate: {
            args: Prisma.CandidatosEleicaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCandidatosEleicao>
          }
          groupBy: {
            args: Prisma.CandidatosEleicaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CandidatosEleicaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CandidatosEleicaoCountArgs<ExtArgs>
            result: $Utils.Optional<CandidatosEleicaoCountAggregateOutputType> | number
          }
        }
      }
      LocalVotacao_has_candidatoEleicao: {
        payload: Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>
        fields: Prisma.LocalVotacao_has_candidatoEleicaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
          }
          findFirst: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
          }
          findMany: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>[]
          }
          create: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
          }
          createMany: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>[]
          }
          delete: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
          }
          update: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
          }
          deleteMany: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload>
          }
          aggregate: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocalVotacao_has_candidatoEleicao>
          }
          groupBy: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocalVotacao_has_candidatoEleicaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocalVotacao_has_candidatoEleicaoCountArgs<ExtArgs>
            result: $Utils.Optional<LocalVotacao_has_candidatoEleicaoCountAggregateOutputType> | number
          }
        }
      }
      quantidade_votos_eleicao: {
        payload: Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>
        fields: Prisma.quantidade_votos_eleicaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.quantidade_votos_eleicaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.quantidade_votos_eleicaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>
          }
          findFirst: {
            args: Prisma.quantidade_votos_eleicaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.quantidade_votos_eleicaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>
          }
          findMany: {
            args: Prisma.quantidade_votos_eleicaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>[]
          }
          create: {
            args: Prisma.quantidade_votos_eleicaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>
          }
          createMany: {
            args: Prisma.quantidade_votos_eleicaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.quantidade_votos_eleicaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>[]
          }
          delete: {
            args: Prisma.quantidade_votos_eleicaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>
          }
          update: {
            args: Prisma.quantidade_votos_eleicaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>
          }
          deleteMany: {
            args: Prisma.quantidade_votos_eleicaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.quantidade_votos_eleicaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.quantidade_votos_eleicaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$quantidade_votos_eleicaoPayload>
          }
          aggregate: {
            args: Prisma.Quantidade_votos_eleicaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuantidade_votos_eleicao>
          }
          groupBy: {
            args: Prisma.quantidade_votos_eleicaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Quantidade_votos_eleicaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.quantidade_votos_eleicaoCountArgs<ExtArgs>
            result: $Utils.Optional<Quantidade_votos_eleicaoCountAggregateOutputType> | number
          }
        }
      }
      SessoesEleitorais: {
        payload: Prisma.$SessoesEleitoraisPayload<ExtArgs>
        fields: Prisma.SessoesEleitoraisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessoesEleitoraisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessoesEleitoraisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>
          }
          findFirst: {
            args: Prisma.SessoesEleitoraisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessoesEleitoraisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>
          }
          findMany: {
            args: Prisma.SessoesEleitoraisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>[]
          }
          create: {
            args: Prisma.SessoesEleitoraisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>
          }
          createMany: {
            args: Prisma.SessoesEleitoraisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessoesEleitoraisCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>[]
          }
          delete: {
            args: Prisma.SessoesEleitoraisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>
          }
          update: {
            args: Prisma.SessoesEleitoraisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>
          }
          deleteMany: {
            args: Prisma.SessoesEleitoraisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessoesEleitoraisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessoesEleitoraisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessoesEleitoraisPayload>
          }
          aggregate: {
            args: Prisma.SessoesEleitoraisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSessoesEleitorais>
          }
          groupBy: {
            args: Prisma.SessoesEleitoraisGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessoesEleitoraisGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessoesEleitoraisCountArgs<ExtArgs>
            result: $Utils.Optional<SessoesEleitoraisCountAggregateOutputType> | number
          }
        }
      }
      EnderecoLocalVotacao: {
        payload: Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>
        fields: Prisma.EnderecoLocalVotacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnderecoLocalVotacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnderecoLocalVotacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>
          }
          findFirst: {
            args: Prisma.EnderecoLocalVotacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnderecoLocalVotacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>
          }
          findMany: {
            args: Prisma.EnderecoLocalVotacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>[]
          }
          create: {
            args: Prisma.EnderecoLocalVotacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>
          }
          createMany: {
            args: Prisma.EnderecoLocalVotacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnderecoLocalVotacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>[]
          }
          delete: {
            args: Prisma.EnderecoLocalVotacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>
          }
          update: {
            args: Prisma.EnderecoLocalVotacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>
          }
          deleteMany: {
            args: Prisma.EnderecoLocalVotacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnderecoLocalVotacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EnderecoLocalVotacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoLocalVotacaoPayload>
          }
          aggregate: {
            args: Prisma.EnderecoLocalVotacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEnderecoLocalVotacao>
          }
          groupBy: {
            args: Prisma.EnderecoLocalVotacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnderecoLocalVotacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnderecoLocalVotacaoCountArgs<ExtArgs>
            result: $Utils.Optional<EnderecoLocalVotacaoCountAggregateOutputType> | number
          }
        }
      }
      perfilUso: {
        payload: Prisma.$perfilUsoPayload<ExtArgs>
        fields: Prisma.perfilUsoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.perfilUsoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.perfilUsoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>
          }
          findFirst: {
            args: Prisma.perfilUsoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.perfilUsoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>
          }
          findMany: {
            args: Prisma.perfilUsoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>[]
          }
          create: {
            args: Prisma.perfilUsoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>
          }
          createMany: {
            args: Prisma.perfilUsoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.perfilUsoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>[]
          }
          delete: {
            args: Prisma.perfilUsoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>
          }
          update: {
            args: Prisma.perfilUsoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>
          }
          deleteMany: {
            args: Prisma.perfilUsoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.perfilUsoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.perfilUsoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$perfilUsoPayload>
          }
          aggregate: {
            args: Prisma.PerfilUsoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePerfilUso>
          }
          groupBy: {
            args: Prisma.perfilUsoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PerfilUsoGroupByOutputType>[]
          }
          count: {
            args: Prisma.perfilUsoCountArgs<ExtArgs>
            result: $Utils.Optional<PerfilUsoCountAggregateOutputType> | number
          }
        }
      }
      classificacao: {
        payload: Prisma.$classificacaoPayload<ExtArgs>
        fields: Prisma.classificacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.classificacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.classificacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>
          }
          findFirst: {
            args: Prisma.classificacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.classificacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>
          }
          findMany: {
            args: Prisma.classificacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>[]
          }
          create: {
            args: Prisma.classificacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>
          }
          createMany: {
            args: Prisma.classificacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.classificacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>[]
          }
          delete: {
            args: Prisma.classificacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>
          }
          update: {
            args: Prisma.classificacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>
          }
          deleteMany: {
            args: Prisma.classificacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.classificacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.classificacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$classificacaoPayload>
          }
          aggregate: {
            args: Prisma.ClassificacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClassificacao>
          }
          groupBy: {
            args: Prisma.classificacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClassificacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.classificacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ClassificacaoCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      DadosContatoUsuario: {
        payload: Prisma.$DadosContatoUsuarioPayload<ExtArgs>
        fields: Prisma.DadosContatoUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DadosContatoUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DadosContatoUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>
          }
          findFirst: {
            args: Prisma.DadosContatoUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DadosContatoUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>
          }
          findMany: {
            args: Prisma.DadosContatoUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>[]
          }
          create: {
            args: Prisma.DadosContatoUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>
          }
          createMany: {
            args: Prisma.DadosContatoUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DadosContatoUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>[]
          }
          delete: {
            args: Prisma.DadosContatoUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>
          }
          update: {
            args: Prisma.DadosContatoUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.DadosContatoUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DadosContatoUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DadosContatoUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosContatoUsuarioPayload>
          }
          aggregate: {
            args: Prisma.DadosContatoUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDadosContatoUsuario>
          }
          groupBy: {
            args: Prisma.DadosContatoUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<DadosContatoUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.DadosContatoUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<DadosContatoUsuarioCountAggregateOutputType> | number
          }
        }
      }
      EnderecoUsuario: {
        payload: Prisma.$EnderecoUsuarioPayload<ExtArgs>
        fields: Prisma.EnderecoUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnderecoUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnderecoUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>
          }
          findFirst: {
            args: Prisma.EnderecoUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnderecoUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>
          }
          findMany: {
            args: Prisma.EnderecoUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>[]
          }
          create: {
            args: Prisma.EnderecoUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>
          }
          createMany: {
            args: Prisma.EnderecoUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnderecoUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>[]
          }
          delete: {
            args: Prisma.EnderecoUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>
          }
          update: {
            args: Prisma.EnderecoUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.EnderecoUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnderecoUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EnderecoUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoUsuarioPayload>
          }
          aggregate: {
            args: Prisma.EnderecoUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEnderecoUsuario>
          }
          groupBy: {
            args: Prisma.EnderecoUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnderecoUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnderecoUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<EnderecoUsuarioCountAggregateOutputType> | number
          }
        }
      }
      login: {
        payload: Prisma.$loginPayload<ExtArgs>
        fields: Prisma.loginFieldRefs
        operations: {
          findUnique: {
            args: Prisma.loginFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.loginFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>
          }
          findFirst: {
            args: Prisma.loginFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.loginFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>
          }
          findMany: {
            args: Prisma.loginFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>[]
          }
          create: {
            args: Prisma.loginCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>
          }
          createMany: {
            args: Prisma.loginCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.loginCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>[]
          }
          delete: {
            args: Prisma.loginDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>
          }
          update: {
            args: Prisma.loginUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>
          }
          deleteMany: {
            args: Prisma.loginDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.loginUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.loginUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$loginPayload>
          }
          aggregate: {
            args: Prisma.LoginAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLogin>
          }
          groupBy: {
            args: Prisma.loginGroupByArgs<ExtArgs>
            result: $Utils.Optional<LoginGroupByOutputType>[]
          }
          count: {
            args: Prisma.loginCountArgs<ExtArgs>
            result: $Utils.Optional<LoginCountAggregateOutputType> | number
          }
        }
      }
      blacklist: {
        payload: Prisma.$blacklistPayload<ExtArgs>
        fields: Prisma.blacklistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.blacklistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.blacklistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>
          }
          findFirst: {
            args: Prisma.blacklistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.blacklistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>
          }
          findMany: {
            args: Prisma.blacklistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>[]
          }
          create: {
            args: Prisma.blacklistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>
          }
          createMany: {
            args: Prisma.blacklistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.blacklistCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>[]
          }
          delete: {
            args: Prisma.blacklistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>
          }
          update: {
            args: Prisma.blacklistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>
          }
          deleteMany: {
            args: Prisma.blacklistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.blacklistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.blacklistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$blacklistPayload>
          }
          aggregate: {
            args: Prisma.BlacklistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlacklist>
          }
          groupBy: {
            args: Prisma.blacklistGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlacklistGroupByOutputType>[]
          }
          count: {
            args: Prisma.blacklistCountArgs<ExtArgs>
            result: $Utils.Optional<BlacklistCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ColigacaoCountOutputType
   */

  export type ColigacaoCountOutputType = {
    Candidatos: number
    Eleitores: number
  }

  export type ColigacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Candidatos?: boolean | ColigacaoCountOutputTypeCountCandidatosArgs
    Eleitores?: boolean | ColigacaoCountOutputTypeCountEleitoresArgs
  }

  // Custom InputTypes
  /**
   * ColigacaoCountOutputType without action
   */
  export type ColigacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ColigacaoCountOutputType
     */
    select?: ColigacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ColigacaoCountOutputType without action
   */
  export type ColigacaoCountOutputTypeCountCandidatosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidatoWhereInput
  }

  /**
   * ColigacaoCountOutputType without action
   */
  export type ColigacaoCountOutputTypeCountEleitoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
  }


  /**
   * Count Type CandidatoCountOutputType
   */

  export type CandidatoCountOutputType = {
    Usuario: number
    contato: number
    Eleitor: number
    localdevotacao_has_candidato: number
  }

  export type CandidatoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | CandidatoCountOutputTypeCountUsuarioArgs
    contato?: boolean | CandidatoCountOutputTypeCountContatoArgs
    Eleitor?: boolean | CandidatoCountOutputTypeCountEleitorArgs
    localdevotacao_has_candidato?: boolean | CandidatoCountOutputTypeCountLocaldevotacao_has_candidatoArgs
  }

  // Custom InputTypes
  /**
   * CandidatoCountOutputType without action
   */
  export type CandidatoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatoCountOutputType
     */
    select?: CandidatoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CandidatoCountOutputType without action
   */
  export type CandidatoCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * CandidatoCountOutputType without action
   */
  export type CandidatoCountOutputTypeCountContatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContatoCandidatoWhereInput
  }

  /**
   * CandidatoCountOutputType without action
   */
  export type CandidatoCountOutputTypeCountEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
  }

  /**
   * CandidatoCountOutputType without action
   */
  export type CandidatoCountOutputTypeCountLocaldevotacao_has_candidatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlanejamentoLocalVotacaoWhereInput
  }


  /**
   * Count Type TipoAtendimentoCountOutputType
   */

  export type TipoAtendimentoCountOutputType = {
    atendimento: number
  }

  export type TipoAtendimentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    atendimento?: boolean | TipoAtendimentoCountOutputTypeCountAtendimentoArgs
  }

  // Custom InputTypes
  /**
   * TipoAtendimentoCountOutputType without action
   */
  export type TipoAtendimentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAtendimentoCountOutputType
     */
    select?: TipoAtendimentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoAtendimentoCountOutputType without action
   */
  export type TipoAtendimentoCountOutputTypeCountAtendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: atendimentoWhereInput
  }


  /**
   * Count Type EleitorCountOutputType
   */

  export type EleitorCountOutputType = {
    Indicacoes: number
    contatoEleitor: number
    MidiasSociaisEleitor: number
    DadosPessoaisEleitor: number
    EnderecoEleitor: number
    atendimento: number
  }

  export type EleitorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Indicacoes?: boolean | EleitorCountOutputTypeCountIndicacoesArgs
    contatoEleitor?: boolean | EleitorCountOutputTypeCountContatoEleitorArgs
    MidiasSociaisEleitor?: boolean | EleitorCountOutputTypeCountMidiasSociaisEleitorArgs
    DadosPessoaisEleitor?: boolean | EleitorCountOutputTypeCountDadosPessoaisEleitorArgs
    EnderecoEleitor?: boolean | EleitorCountOutputTypeCountEnderecoEleitorArgs
    atendimento?: boolean | EleitorCountOutputTypeCountAtendimentoArgs
  }

  // Custom InputTypes
  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EleitorCountOutputType
     */
    select?: EleitorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeCountIndicacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
  }

  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeCountContatoEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contatoEleitorWhereInput
  }

  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeCountMidiasSociaisEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MidiasSociaisEleitorWhereInput
  }

  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeCountDadosPessoaisEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DadosPessoaisEleitorWhereInput
  }

  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeCountEnderecoEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoEleitorWhereInput
  }

  /**
   * EleitorCountOutputType without action
   */
  export type EleitorCountOutputTypeCountAtendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: atendimentoWhereInput
  }


  /**
   * Count Type PlanejamentoLocalVotacaoCountOutputType
   */

  export type PlanejamentoLocalVotacaoCountOutputType = {
    Expectativa: number
  }

  export type PlanejamentoLocalVotacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Expectativa?: boolean | PlanejamentoLocalVotacaoCountOutputTypeCountExpectativaArgs
  }

  // Custom InputTypes
  /**
   * PlanejamentoLocalVotacaoCountOutputType without action
   */
  export type PlanejamentoLocalVotacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacaoCountOutputType
     */
    select?: PlanejamentoLocalVotacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PlanejamentoLocalVotacaoCountOutputType without action
   */
  export type PlanejamentoLocalVotacaoCountOutputTypeCountExpectativaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpectativaWhereInput
  }


  /**
   * Count Type LocalVotacaoCountOutputType
   */

  export type LocalVotacaoCountOutputType = {
    endereco: number
    sessoesEleitorais: number
    Eleitor: number
    localdevotacao_has_candidato: number
    LocalVotacao_has_candidatoEleicao: number
  }

  export type LocalVotacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    endereco?: boolean | LocalVotacaoCountOutputTypeCountEnderecoArgs
    sessoesEleitorais?: boolean | LocalVotacaoCountOutputTypeCountSessoesEleitoraisArgs
    Eleitor?: boolean | LocalVotacaoCountOutputTypeCountEleitorArgs
    localdevotacao_has_candidato?: boolean | LocalVotacaoCountOutputTypeCountLocaldevotacao_has_candidatoArgs
    LocalVotacao_has_candidatoEleicao?: boolean | LocalVotacaoCountOutputTypeCountLocalVotacao_has_candidatoEleicaoArgs
  }

  // Custom InputTypes
  /**
   * LocalVotacaoCountOutputType without action
   */
  export type LocalVotacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacaoCountOutputType
     */
    select?: LocalVotacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocalVotacaoCountOutputType without action
   */
  export type LocalVotacaoCountOutputTypeCountEnderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoLocalVotacaoWhereInput
  }

  /**
   * LocalVotacaoCountOutputType without action
   */
  export type LocalVotacaoCountOutputTypeCountSessoesEleitoraisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessoesEleitoraisWhereInput
  }

  /**
   * LocalVotacaoCountOutputType without action
   */
  export type LocalVotacaoCountOutputTypeCountEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
  }

  /**
   * LocalVotacaoCountOutputType without action
   */
  export type LocalVotacaoCountOutputTypeCountLocaldevotacao_has_candidatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlanejamentoLocalVotacaoWhereInput
  }

  /**
   * LocalVotacaoCountOutputType without action
   */
  export type LocalVotacaoCountOutputTypeCountLocalVotacao_has_candidatoEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
  }


  /**
   * Count Type EleicoesCountOutputType
   */

  export type EleicoesCountOutputType = {
    CandidatosEleicao: number
  }

  export type EleicoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CandidatosEleicao?: boolean | EleicoesCountOutputTypeCountCandidatosEleicaoArgs
  }

  // Custom InputTypes
  /**
   * EleicoesCountOutputType without action
   */
  export type EleicoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EleicoesCountOutputType
     */
    select?: EleicoesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EleicoesCountOutputType without action
   */
  export type EleicoesCountOutputTypeCountCandidatosEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidatosEleicaoWhereInput
  }


  /**
   * Count Type UFCountOutputType
   */

  export type UFCountOutputType = {
    municipio: number
  }

  export type UFCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    municipio?: boolean | UFCountOutputTypeCountMunicipioArgs
  }

  // Custom InputTypes
  /**
   * UFCountOutputType without action
   */
  export type UFCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UFCountOutputType
     */
    select?: UFCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UFCountOutputType without action
   */
  export type UFCountOutputTypeCountMunicipioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipioWhereInput
  }


  /**
   * Count Type MunicipioCountOutputType
   */

  export type MunicipioCountOutputType = {
    CandidatosEleicao: number
  }

  export type MunicipioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CandidatosEleicao?: boolean | MunicipioCountOutputTypeCountCandidatosEleicaoArgs
  }

  // Custom InputTypes
  /**
   * MunicipioCountOutputType without action
   */
  export type MunicipioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MunicipioCountOutputType
     */
    select?: MunicipioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MunicipioCountOutputType without action
   */
  export type MunicipioCountOutputTypeCountCandidatosEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidatosEleicaoWhereInput
  }


  /**
   * Count Type CandidatosEleicaoCountOutputType
   */

  export type CandidatosEleicaoCountOutputType = {
    LocalVotacao_has_candidatoEleicao: number
  }

  export type CandidatosEleicaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LocalVotacao_has_candidatoEleicao?: boolean | CandidatosEleicaoCountOutputTypeCountLocalVotacao_has_candidatoEleicaoArgs
  }

  // Custom InputTypes
  /**
   * CandidatosEleicaoCountOutputType without action
   */
  export type CandidatosEleicaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicaoCountOutputType
     */
    select?: CandidatosEleicaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CandidatosEleicaoCountOutputType without action
   */
  export type CandidatosEleicaoCountOutputTypeCountLocalVotacao_has_candidatoEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
  }


  /**
   * Count Type LocalVotacao_has_candidatoEleicaoCountOutputType
   */

  export type LocalVotacao_has_candidatoEleicaoCountOutputType = {
    quantidade_votos_eleicao: number
  }

  export type LocalVotacao_has_candidatoEleicaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    quantidade_votos_eleicao?: boolean | LocalVotacao_has_candidatoEleicaoCountOutputTypeCountQuantidade_votos_eleicaoArgs
  }

  // Custom InputTypes
  /**
   * LocalVotacao_has_candidatoEleicaoCountOutputType without action
   */
  export type LocalVotacao_has_candidatoEleicaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicaoCountOutputType
     */
    select?: LocalVotacao_has_candidatoEleicaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocalVotacao_has_candidatoEleicaoCountOutputType without action
   */
  export type LocalVotacao_has_candidatoEleicaoCountOutputTypeCountQuantidade_votos_eleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: quantidade_votos_eleicaoWhereInput
  }


  /**
   * Count Type PerfilUsoCountOutputType
   */

  export type PerfilUsoCountOutputType = {
    Usuario: number
  }

  export type PerfilUsoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | PerfilUsoCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * PerfilUsoCountOutputType without action
   */
  export type PerfilUsoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PerfilUsoCountOutputType
     */
    select?: PerfilUsoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PerfilUsoCountOutputType without action
   */
  export type PerfilUsoCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type ClassificacaoCountOutputType
   */

  export type ClassificacaoCountOutputType = {
    eleitor: number
  }

  export type ClassificacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eleitor?: boolean | ClassificacaoCountOutputTypeCountEleitorArgs
  }

  // Custom InputTypes
  /**
   * ClassificacaoCountOutputType without action
   */
  export type ClassificacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClassificacaoCountOutputType
     */
    select?: ClassificacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClassificacaoCountOutputType without action
   */
  export type ClassificacaoCountOutputTypeCountEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    login: number
    Eleitor: number
    coligacao: number
    atendimentoCriado: number
    atendimento: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    login?: boolean | UsuarioCountOutputTypeCountLoginArgs
    Eleitor?: boolean | UsuarioCountOutputTypeCountEleitorArgs
    coligacao?: boolean | UsuarioCountOutputTypeCountColigacaoArgs
    atendimentoCriado?: boolean | UsuarioCountOutputTypeCountAtendimentoCriadoArgs
    atendimento?: boolean | UsuarioCountOutputTypeCountAtendimentoArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountLoginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: loginWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountColigacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coligacaoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAtendimentoCriadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: atendimentoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAtendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: atendimentoWhereInput
  }


  /**
   * Count Type DadosContatoUsuarioCountOutputType
   */

  export type DadosContatoUsuarioCountOutputType = {
    Usuario: number
  }

  export type DadosContatoUsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | DadosContatoUsuarioCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * DadosContatoUsuarioCountOutputType without action
   */
  export type DadosContatoUsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuarioCountOutputType
     */
    select?: DadosContatoUsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DadosContatoUsuarioCountOutputType without action
   */
  export type DadosContatoUsuarioCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type EnderecoUsuarioCountOutputType
   */

  export type EnderecoUsuarioCountOutputType = {
    Usuario: number
  }

  export type EnderecoUsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | EnderecoUsuarioCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * EnderecoUsuarioCountOutputType without action
   */
  export type EnderecoUsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuarioCountOutputType
     */
    select?: EnderecoUsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EnderecoUsuarioCountOutputType without action
   */
  export type EnderecoUsuarioCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Models
   */

  /**
   * Model coligacao
   */

  export type AggregateColigacao = {
    _count: ColigacaoCountAggregateOutputType | null
    _avg: ColigacaoAvgAggregateOutputType | null
    _sum: ColigacaoSumAggregateOutputType | null
    _min: ColigacaoMinAggregateOutputType | null
    _max: ColigacaoMaxAggregateOutputType | null
  }

  export type ColigacaoAvgAggregateOutputType = {
    ano: number | null
  }

  export type ColigacaoSumAggregateOutputType = {
    ano: number | null
  }

  export type ColigacaoMinAggregateOutputType = {
    uuid: string | null
    usuarioUuid: string | null
    ano: number | null
  }

  export type ColigacaoMaxAggregateOutputType = {
    uuid: string | null
    usuarioUuid: string | null
    ano: number | null
  }

  export type ColigacaoCountAggregateOutputType = {
    uuid: number
    usuarioUuid: number
    ano: number
    _all: number
  }


  export type ColigacaoAvgAggregateInputType = {
    ano?: true
  }

  export type ColigacaoSumAggregateInputType = {
    ano?: true
  }

  export type ColigacaoMinAggregateInputType = {
    uuid?: true
    usuarioUuid?: true
    ano?: true
  }

  export type ColigacaoMaxAggregateInputType = {
    uuid?: true
    usuarioUuid?: true
    ano?: true
  }

  export type ColigacaoCountAggregateInputType = {
    uuid?: true
    usuarioUuid?: true
    ano?: true
    _all?: true
  }

  export type ColigacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which coligacao to aggregate.
     */
    where?: coligacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coligacaos to fetch.
     */
    orderBy?: coligacaoOrderByWithRelationInput | coligacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: coligacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coligacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coligacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned coligacaos
    **/
    _count?: true | ColigacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ColigacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ColigacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ColigacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ColigacaoMaxAggregateInputType
  }

  export type GetColigacaoAggregateType<T extends ColigacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateColigacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateColigacao[P]>
      : GetScalarType<T[P], AggregateColigacao[P]>
  }




  export type coligacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coligacaoWhereInput
    orderBy?: coligacaoOrderByWithAggregationInput | coligacaoOrderByWithAggregationInput[]
    by: ColigacaoScalarFieldEnum[] | ColigacaoScalarFieldEnum
    having?: coligacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ColigacaoCountAggregateInputType | true
    _avg?: ColigacaoAvgAggregateInputType
    _sum?: ColigacaoSumAggregateInputType
    _min?: ColigacaoMinAggregateInputType
    _max?: ColigacaoMaxAggregateInputType
  }

  export type ColigacaoGroupByOutputType = {
    uuid: string
    usuarioUuid: string
    ano: number
    _count: ColigacaoCountAggregateOutputType | null
    _avg: ColigacaoAvgAggregateOutputType | null
    _sum: ColigacaoSumAggregateOutputType | null
    _min: ColigacaoMinAggregateOutputType | null
    _max: ColigacaoMaxAggregateOutputType | null
  }

  type GetColigacaoGroupByPayload<T extends coligacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ColigacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ColigacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ColigacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ColigacaoGroupByOutputType[P]>
        }
      >
    >


  export type coligacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    usuarioUuid?: boolean
    ano?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Candidatos?: boolean | coligacao$CandidatosArgs<ExtArgs>
    Eleitores?: boolean | coligacao$EleitoresArgs<ExtArgs>
    _count?: boolean | ColigacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coligacao"]>

  export type coligacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    usuarioUuid?: boolean
    ano?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coligacao"]>

  export type coligacaoSelectScalar = {
    uuid?: boolean
    usuarioUuid?: boolean
    ano?: boolean
  }

  export type coligacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Candidatos?: boolean | coligacao$CandidatosArgs<ExtArgs>
    Eleitores?: boolean | coligacao$EleitoresArgs<ExtArgs>
    _count?: boolean | ColigacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type coligacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $coligacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "coligacao"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>
      Candidatos: Prisma.$CandidatoPayload<ExtArgs>[]
      Eleitores: Prisma.$EleitorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      usuarioUuid: string
      ano: number
    }, ExtArgs["result"]["coligacao"]>
    composites: {}
  }

  type coligacaoGetPayload<S extends boolean | null | undefined | coligacaoDefaultArgs> = $Result.GetResult<Prisma.$coligacaoPayload, S>

  type coligacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<coligacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ColigacaoCountAggregateInputType | true
    }

  export interface coligacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['coligacao'], meta: { name: 'coligacao' } }
    /**
     * Find zero or one Coligacao that matches the filter.
     * @param {coligacaoFindUniqueArgs} args - Arguments to find a Coligacao
     * @example
     * // Get one Coligacao
     * const coligacao = await prisma.coligacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends coligacaoFindUniqueArgs>(args: SelectSubset<T, coligacaoFindUniqueArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Coligacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {coligacaoFindUniqueOrThrowArgs} args - Arguments to find a Coligacao
     * @example
     * // Get one Coligacao
     * const coligacao = await prisma.coligacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends coligacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, coligacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Coligacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coligacaoFindFirstArgs} args - Arguments to find a Coligacao
     * @example
     * // Get one Coligacao
     * const coligacao = await prisma.coligacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends coligacaoFindFirstArgs>(args?: SelectSubset<T, coligacaoFindFirstArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Coligacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coligacaoFindFirstOrThrowArgs} args - Arguments to find a Coligacao
     * @example
     * // Get one Coligacao
     * const coligacao = await prisma.coligacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends coligacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, coligacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Coligacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coligacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Coligacaos
     * const coligacaos = await prisma.coligacao.findMany()
     * 
     * // Get first 10 Coligacaos
     * const coligacaos = await prisma.coligacao.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const coligacaoWithUuidOnly = await prisma.coligacao.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends coligacaoFindManyArgs>(args?: SelectSubset<T, coligacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Coligacao.
     * @param {coligacaoCreateArgs} args - Arguments to create a Coligacao.
     * @example
     * // Create one Coligacao
     * const Coligacao = await prisma.coligacao.create({
     *   data: {
     *     // ... data to create a Coligacao
     *   }
     * })
     * 
     */
    create<T extends coligacaoCreateArgs>(args: SelectSubset<T, coligacaoCreateArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Coligacaos.
     * @param {coligacaoCreateManyArgs} args - Arguments to create many Coligacaos.
     * @example
     * // Create many Coligacaos
     * const coligacao = await prisma.coligacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends coligacaoCreateManyArgs>(args?: SelectSubset<T, coligacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Coligacaos and returns the data saved in the database.
     * @param {coligacaoCreateManyAndReturnArgs} args - Arguments to create many Coligacaos.
     * @example
     * // Create many Coligacaos
     * const coligacao = await prisma.coligacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Coligacaos and only return the `uuid`
     * const coligacaoWithUuidOnly = await prisma.coligacao.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends coligacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, coligacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Coligacao.
     * @param {coligacaoDeleteArgs} args - Arguments to delete one Coligacao.
     * @example
     * // Delete one Coligacao
     * const Coligacao = await prisma.coligacao.delete({
     *   where: {
     *     // ... filter to delete one Coligacao
     *   }
     * })
     * 
     */
    delete<T extends coligacaoDeleteArgs>(args: SelectSubset<T, coligacaoDeleteArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Coligacao.
     * @param {coligacaoUpdateArgs} args - Arguments to update one Coligacao.
     * @example
     * // Update one Coligacao
     * const coligacao = await prisma.coligacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends coligacaoUpdateArgs>(args: SelectSubset<T, coligacaoUpdateArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Coligacaos.
     * @param {coligacaoDeleteManyArgs} args - Arguments to filter Coligacaos to delete.
     * @example
     * // Delete a few Coligacaos
     * const { count } = await prisma.coligacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends coligacaoDeleteManyArgs>(args?: SelectSubset<T, coligacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Coligacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coligacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Coligacaos
     * const coligacao = await prisma.coligacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends coligacaoUpdateManyArgs>(args: SelectSubset<T, coligacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Coligacao.
     * @param {coligacaoUpsertArgs} args - Arguments to update or create a Coligacao.
     * @example
     * // Update or create a Coligacao
     * const coligacao = await prisma.coligacao.upsert({
     *   create: {
     *     // ... data to create a Coligacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Coligacao we want to update
     *   }
     * })
     */
    upsert<T extends coligacaoUpsertArgs>(args: SelectSubset<T, coligacaoUpsertArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Coligacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coligacaoCountArgs} args - Arguments to filter Coligacaos to count.
     * @example
     * // Count the number of Coligacaos
     * const count = await prisma.coligacao.count({
     *   where: {
     *     // ... the filter for the Coligacaos we want to count
     *   }
     * })
    **/
    count<T extends coligacaoCountArgs>(
      args?: Subset<T, coligacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ColigacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Coligacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColigacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ColigacaoAggregateArgs>(args: Subset<T, ColigacaoAggregateArgs>): Prisma.PrismaPromise<GetColigacaoAggregateType<T>>

    /**
     * Group by Coligacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coligacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends coligacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: coligacaoGroupByArgs['orderBy'] }
        : { orderBy?: coligacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, coligacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetColigacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the coligacao model
   */
  readonly fields: coligacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for coligacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__coligacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Candidatos<T extends coligacao$CandidatosArgs<ExtArgs> = {}>(args?: Subset<T, coligacao$CandidatosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findMany"> | Null>
    Eleitores<T extends coligacao$EleitoresArgs<ExtArgs> = {}>(args?: Subset<T, coligacao$EleitoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the coligacao model
   */ 
  interface coligacaoFieldRefs {
    readonly uuid: FieldRef<"coligacao", 'String'>
    readonly usuarioUuid: FieldRef<"coligacao", 'String'>
    readonly ano: FieldRef<"coligacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * coligacao findUnique
   */
  export type coligacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * Filter, which coligacao to fetch.
     */
    where: coligacaoWhereUniqueInput
  }

  /**
   * coligacao findUniqueOrThrow
   */
  export type coligacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * Filter, which coligacao to fetch.
     */
    where: coligacaoWhereUniqueInput
  }

  /**
   * coligacao findFirst
   */
  export type coligacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * Filter, which coligacao to fetch.
     */
    where?: coligacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coligacaos to fetch.
     */
    orderBy?: coligacaoOrderByWithRelationInput | coligacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for coligacaos.
     */
    cursor?: coligacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coligacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coligacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of coligacaos.
     */
    distinct?: ColigacaoScalarFieldEnum | ColigacaoScalarFieldEnum[]
  }

  /**
   * coligacao findFirstOrThrow
   */
  export type coligacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * Filter, which coligacao to fetch.
     */
    where?: coligacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coligacaos to fetch.
     */
    orderBy?: coligacaoOrderByWithRelationInput | coligacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for coligacaos.
     */
    cursor?: coligacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coligacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coligacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of coligacaos.
     */
    distinct?: ColigacaoScalarFieldEnum | ColigacaoScalarFieldEnum[]
  }

  /**
   * coligacao findMany
   */
  export type coligacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * Filter, which coligacaos to fetch.
     */
    where?: coligacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of coligacaos to fetch.
     */
    orderBy?: coligacaoOrderByWithRelationInput | coligacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing coligacaos.
     */
    cursor?: coligacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` coligacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` coligacaos.
     */
    skip?: number
    distinct?: ColigacaoScalarFieldEnum | ColigacaoScalarFieldEnum[]
  }

  /**
   * coligacao create
   */
  export type coligacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a coligacao.
     */
    data: XOR<coligacaoCreateInput, coligacaoUncheckedCreateInput>
  }

  /**
   * coligacao createMany
   */
  export type coligacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many coligacaos.
     */
    data: coligacaoCreateManyInput | coligacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * coligacao createManyAndReturn
   */
  export type coligacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many coligacaos.
     */
    data: coligacaoCreateManyInput | coligacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * coligacao update
   */
  export type coligacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a coligacao.
     */
    data: XOR<coligacaoUpdateInput, coligacaoUncheckedUpdateInput>
    /**
     * Choose, which coligacao to update.
     */
    where: coligacaoWhereUniqueInput
  }

  /**
   * coligacao updateMany
   */
  export type coligacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update coligacaos.
     */
    data: XOR<coligacaoUpdateManyMutationInput, coligacaoUncheckedUpdateManyInput>
    /**
     * Filter which coligacaos to update
     */
    where?: coligacaoWhereInput
  }

  /**
   * coligacao upsert
   */
  export type coligacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the coligacao to update in case it exists.
     */
    where: coligacaoWhereUniqueInput
    /**
     * In case the coligacao found by the `where` argument doesn't exist, create a new coligacao with this data.
     */
    create: XOR<coligacaoCreateInput, coligacaoUncheckedCreateInput>
    /**
     * In case the coligacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<coligacaoUpdateInput, coligacaoUncheckedUpdateInput>
  }

  /**
   * coligacao delete
   */
  export type coligacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    /**
     * Filter which coligacao to delete.
     */
    where: coligacaoWhereUniqueInput
  }

  /**
   * coligacao deleteMany
   */
  export type coligacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which coligacaos to delete
     */
    where?: coligacaoWhereInput
  }

  /**
   * coligacao.Candidatos
   */
  export type coligacao$CandidatosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    where?: CandidatoWhereInput
    orderBy?: CandidatoOrderByWithRelationInput | CandidatoOrderByWithRelationInput[]
    cursor?: CandidatoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidatoScalarFieldEnum | CandidatoScalarFieldEnum[]
  }

  /**
   * coligacao.Eleitores
   */
  export type coligacao$EleitoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    cursor?: EleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * coligacao without action
   */
  export type coligacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
  }


  /**
   * Model Candidato
   */

  export type AggregateCandidato = {
    _count: CandidatoCountAggregateOutputType | null
    _min: CandidatoMinAggregateOutputType | null
    _max: CandidatoMaxAggregateOutputType | null
  }

  export type CandidatoMinAggregateOutputType = {
    uuid: string | null
    nomeCandidato: string | null
    nomeUrna: string | null
    partido: string | null
    coligacaoUuid: string | null
    created_at: Date | null
  }

  export type CandidatoMaxAggregateOutputType = {
    uuid: string | null
    nomeCandidato: string | null
    nomeUrna: string | null
    partido: string | null
    coligacaoUuid: string | null
    created_at: Date | null
  }

  export type CandidatoCountAggregateOutputType = {
    uuid: number
    nomeCandidato: number
    nomeUrna: number
    partido: number
    coligacaoUuid: number
    created_at: number
    _all: number
  }


  export type CandidatoMinAggregateInputType = {
    uuid?: true
    nomeCandidato?: true
    nomeUrna?: true
    partido?: true
    coligacaoUuid?: true
    created_at?: true
  }

  export type CandidatoMaxAggregateInputType = {
    uuid?: true
    nomeCandidato?: true
    nomeUrna?: true
    partido?: true
    coligacaoUuid?: true
    created_at?: true
  }

  export type CandidatoCountAggregateInputType = {
    uuid?: true
    nomeCandidato?: true
    nomeUrna?: true
    partido?: true
    coligacaoUuid?: true
    created_at?: true
    _all?: true
  }

  export type CandidatoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidato to aggregate.
     */
    where?: CandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidatoes to fetch.
     */
    orderBy?: CandidatoOrderByWithRelationInput | CandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Candidatoes
    **/
    _count?: true | CandidatoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidatoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidatoMaxAggregateInputType
  }

  export type GetCandidatoAggregateType<T extends CandidatoAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidato[P]>
      : GetScalarType<T[P], AggregateCandidato[P]>
  }




  export type CandidatoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidatoWhereInput
    orderBy?: CandidatoOrderByWithAggregationInput | CandidatoOrderByWithAggregationInput[]
    by: CandidatoScalarFieldEnum[] | CandidatoScalarFieldEnum
    having?: CandidatoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidatoCountAggregateInputType | true
    _min?: CandidatoMinAggregateInputType
    _max?: CandidatoMaxAggregateInputType
  }

  export type CandidatoGroupByOutputType = {
    uuid: string
    nomeCandidato: string
    nomeUrna: string | null
    partido: string | null
    coligacaoUuid: string | null
    created_at: Date
    _count: CandidatoCountAggregateOutputType | null
    _min: CandidatoMinAggregateOutputType | null
    _max: CandidatoMaxAggregateOutputType | null
  }

  type GetCandidatoGroupByPayload<T extends CandidatoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidatoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidatoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidatoGroupByOutputType[P]>
            : GetScalarType<T[P], CandidatoGroupByOutputType[P]>
        }
      >
    >


  export type CandidatoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    nomeCandidato?: boolean
    nomeUrna?: boolean
    partido?: boolean
    coligacaoUuid?: boolean
    created_at?: boolean
    Usuario?: boolean | Candidato$UsuarioArgs<ExtArgs>
    contato?: boolean | Candidato$contatoArgs<ExtArgs>
    Eleitor?: boolean | Candidato$EleitorArgs<ExtArgs>
    coligacao?: boolean | Candidato$coligacaoArgs<ExtArgs>
    localdevotacao_has_candidato?: boolean | Candidato$localdevotacao_has_candidatoArgs<ExtArgs>
    _count?: boolean | CandidatoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidato"]>

  export type CandidatoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    nomeCandidato?: boolean
    nomeUrna?: boolean
    partido?: boolean
    coligacaoUuid?: boolean
    created_at?: boolean
    coligacao?: boolean | Candidato$coligacaoArgs<ExtArgs>
  }, ExtArgs["result"]["candidato"]>

  export type CandidatoSelectScalar = {
    uuid?: boolean
    nomeCandidato?: boolean
    nomeUrna?: boolean
    partido?: boolean
    coligacaoUuid?: boolean
    created_at?: boolean
  }

  export type CandidatoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | Candidato$UsuarioArgs<ExtArgs>
    contato?: boolean | Candidato$contatoArgs<ExtArgs>
    Eleitor?: boolean | Candidato$EleitorArgs<ExtArgs>
    coligacao?: boolean | Candidato$coligacaoArgs<ExtArgs>
    localdevotacao_has_candidato?: boolean | Candidato$localdevotacao_has_candidatoArgs<ExtArgs>
    _count?: boolean | CandidatoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CandidatoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    coligacao?: boolean | Candidato$coligacaoArgs<ExtArgs>
  }

  export type $CandidatoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Candidato"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>[]
      contato: Prisma.$ContatoCandidatoPayload<ExtArgs>[]
      Eleitor: Prisma.$EleitorPayload<ExtArgs>[]
      coligacao: Prisma.$coligacaoPayload<ExtArgs> | null
      localdevotacao_has_candidato: Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      nomeCandidato: string
      nomeUrna: string | null
      partido: string | null
      coligacaoUuid: string | null
      created_at: Date
    }, ExtArgs["result"]["candidato"]>
    composites: {}
  }

  type CandidatoGetPayload<S extends boolean | null | undefined | CandidatoDefaultArgs> = $Result.GetResult<Prisma.$CandidatoPayload, S>

  type CandidatoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CandidatoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CandidatoCountAggregateInputType | true
    }

  export interface CandidatoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Candidato'], meta: { name: 'Candidato' } }
    /**
     * Find zero or one Candidato that matches the filter.
     * @param {CandidatoFindUniqueArgs} args - Arguments to find a Candidato
     * @example
     * // Get one Candidato
     * const candidato = await prisma.candidato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CandidatoFindUniqueArgs>(args: SelectSubset<T, CandidatoFindUniqueArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Candidato that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CandidatoFindUniqueOrThrowArgs} args - Arguments to find a Candidato
     * @example
     * // Get one Candidato
     * const candidato = await prisma.candidato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CandidatoFindUniqueOrThrowArgs>(args: SelectSubset<T, CandidatoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Candidato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoFindFirstArgs} args - Arguments to find a Candidato
     * @example
     * // Get one Candidato
     * const candidato = await prisma.candidato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CandidatoFindFirstArgs>(args?: SelectSubset<T, CandidatoFindFirstArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Candidato that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoFindFirstOrThrowArgs} args - Arguments to find a Candidato
     * @example
     * // Get one Candidato
     * const candidato = await prisma.candidato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CandidatoFindFirstOrThrowArgs>(args?: SelectSubset<T, CandidatoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Candidatoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Candidatoes
     * const candidatoes = await prisma.candidato.findMany()
     * 
     * // Get first 10 Candidatoes
     * const candidatoes = await prisma.candidato.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const candidatoWithUuidOnly = await prisma.candidato.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends CandidatoFindManyArgs>(args?: SelectSubset<T, CandidatoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Candidato.
     * @param {CandidatoCreateArgs} args - Arguments to create a Candidato.
     * @example
     * // Create one Candidato
     * const Candidato = await prisma.candidato.create({
     *   data: {
     *     // ... data to create a Candidato
     *   }
     * })
     * 
     */
    create<T extends CandidatoCreateArgs>(args: SelectSubset<T, CandidatoCreateArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Candidatoes.
     * @param {CandidatoCreateManyArgs} args - Arguments to create many Candidatoes.
     * @example
     * // Create many Candidatoes
     * const candidato = await prisma.candidato.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CandidatoCreateManyArgs>(args?: SelectSubset<T, CandidatoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Candidatoes and returns the data saved in the database.
     * @param {CandidatoCreateManyAndReturnArgs} args - Arguments to create many Candidatoes.
     * @example
     * // Create many Candidatoes
     * const candidato = await prisma.candidato.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Candidatoes and only return the `uuid`
     * const candidatoWithUuidOnly = await prisma.candidato.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CandidatoCreateManyAndReturnArgs>(args?: SelectSubset<T, CandidatoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Candidato.
     * @param {CandidatoDeleteArgs} args - Arguments to delete one Candidato.
     * @example
     * // Delete one Candidato
     * const Candidato = await prisma.candidato.delete({
     *   where: {
     *     // ... filter to delete one Candidato
     *   }
     * })
     * 
     */
    delete<T extends CandidatoDeleteArgs>(args: SelectSubset<T, CandidatoDeleteArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Candidato.
     * @param {CandidatoUpdateArgs} args - Arguments to update one Candidato.
     * @example
     * // Update one Candidato
     * const candidato = await prisma.candidato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CandidatoUpdateArgs>(args: SelectSubset<T, CandidatoUpdateArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Candidatoes.
     * @param {CandidatoDeleteManyArgs} args - Arguments to filter Candidatoes to delete.
     * @example
     * // Delete a few Candidatoes
     * const { count } = await prisma.candidato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CandidatoDeleteManyArgs>(args?: SelectSubset<T, CandidatoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Candidatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Candidatoes
     * const candidato = await prisma.candidato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CandidatoUpdateManyArgs>(args: SelectSubset<T, CandidatoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Candidato.
     * @param {CandidatoUpsertArgs} args - Arguments to update or create a Candidato.
     * @example
     * // Update or create a Candidato
     * const candidato = await prisma.candidato.upsert({
     *   create: {
     *     // ... data to create a Candidato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Candidato we want to update
     *   }
     * })
     */
    upsert<T extends CandidatoUpsertArgs>(args: SelectSubset<T, CandidatoUpsertArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Candidatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoCountArgs} args - Arguments to filter Candidatoes to count.
     * @example
     * // Count the number of Candidatoes
     * const count = await prisma.candidato.count({
     *   where: {
     *     // ... the filter for the Candidatoes we want to count
     *   }
     * })
    **/
    count<T extends CandidatoCountArgs>(
      args?: Subset<T, CandidatoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidatoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Candidato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidatoAggregateArgs>(args: Subset<T, CandidatoAggregateArgs>): Prisma.PrismaPromise<GetCandidatoAggregateType<T>>

    /**
     * Group by Candidato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidatoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidatoGroupByArgs['orderBy'] }
        : { orderBy?: CandidatoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidatoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidatoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Candidato model
   */
  readonly fields: CandidatoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Candidato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidatoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends Candidato$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Candidato$UsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    contato<T extends Candidato$contatoArgs<ExtArgs> = {}>(args?: Subset<T, Candidato$contatoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "findMany"> | Null>
    Eleitor<T extends Candidato$EleitorArgs<ExtArgs> = {}>(args?: Subset<T, Candidato$EleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany"> | Null>
    coligacao<T extends Candidato$coligacaoArgs<ExtArgs> = {}>(args?: Subset<T, Candidato$coligacaoArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    localdevotacao_has_candidato<T extends Candidato$localdevotacao_has_candidatoArgs<ExtArgs> = {}>(args?: Subset<T, Candidato$localdevotacao_has_candidatoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Candidato model
   */ 
  interface CandidatoFieldRefs {
    readonly uuid: FieldRef<"Candidato", 'String'>
    readonly nomeCandidato: FieldRef<"Candidato", 'String'>
    readonly nomeUrna: FieldRef<"Candidato", 'String'>
    readonly partido: FieldRef<"Candidato", 'String'>
    readonly coligacaoUuid: FieldRef<"Candidato", 'String'>
    readonly created_at: FieldRef<"Candidato", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Candidato findUnique
   */
  export type CandidatoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * Filter, which Candidato to fetch.
     */
    where: CandidatoWhereUniqueInput
  }

  /**
   * Candidato findUniqueOrThrow
   */
  export type CandidatoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * Filter, which Candidato to fetch.
     */
    where: CandidatoWhereUniqueInput
  }

  /**
   * Candidato findFirst
   */
  export type CandidatoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * Filter, which Candidato to fetch.
     */
    where?: CandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidatoes to fetch.
     */
    orderBy?: CandidatoOrderByWithRelationInput | CandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidatoes.
     */
    cursor?: CandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidatoes.
     */
    distinct?: CandidatoScalarFieldEnum | CandidatoScalarFieldEnum[]
  }

  /**
   * Candidato findFirstOrThrow
   */
  export type CandidatoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * Filter, which Candidato to fetch.
     */
    where?: CandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidatoes to fetch.
     */
    orderBy?: CandidatoOrderByWithRelationInput | CandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Candidatoes.
     */
    cursor?: CandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Candidatoes.
     */
    distinct?: CandidatoScalarFieldEnum | CandidatoScalarFieldEnum[]
  }

  /**
   * Candidato findMany
   */
  export type CandidatoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * Filter, which Candidatoes to fetch.
     */
    where?: CandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Candidatoes to fetch.
     */
    orderBy?: CandidatoOrderByWithRelationInput | CandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Candidatoes.
     */
    cursor?: CandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Candidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Candidatoes.
     */
    skip?: number
    distinct?: CandidatoScalarFieldEnum | CandidatoScalarFieldEnum[]
  }

  /**
   * Candidato create
   */
  export type CandidatoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * The data needed to create a Candidato.
     */
    data: XOR<CandidatoCreateInput, CandidatoUncheckedCreateInput>
  }

  /**
   * Candidato createMany
   */
  export type CandidatoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Candidatoes.
     */
    data: CandidatoCreateManyInput | CandidatoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Candidato createManyAndReturn
   */
  export type CandidatoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Candidatoes.
     */
    data: CandidatoCreateManyInput | CandidatoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Candidato update
   */
  export type CandidatoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * The data needed to update a Candidato.
     */
    data: XOR<CandidatoUpdateInput, CandidatoUncheckedUpdateInput>
    /**
     * Choose, which Candidato to update.
     */
    where: CandidatoWhereUniqueInput
  }

  /**
   * Candidato updateMany
   */
  export type CandidatoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Candidatoes.
     */
    data: XOR<CandidatoUpdateManyMutationInput, CandidatoUncheckedUpdateManyInput>
    /**
     * Filter which Candidatoes to update
     */
    where?: CandidatoWhereInput
  }

  /**
   * Candidato upsert
   */
  export type CandidatoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * The filter to search for the Candidato to update in case it exists.
     */
    where: CandidatoWhereUniqueInput
    /**
     * In case the Candidato found by the `where` argument doesn't exist, create a new Candidato with this data.
     */
    create: XOR<CandidatoCreateInput, CandidatoUncheckedCreateInput>
    /**
     * In case the Candidato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidatoUpdateInput, CandidatoUncheckedUpdateInput>
  }

  /**
   * Candidato delete
   */
  export type CandidatoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
    /**
     * Filter which Candidato to delete.
     */
    where: CandidatoWhereUniqueInput
  }

  /**
   * Candidato deleteMany
   */
  export type CandidatoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Candidatoes to delete
     */
    where?: CandidatoWhereInput
  }

  /**
   * Candidato.Usuario
   */
  export type Candidato$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Candidato.contato
   */
  export type Candidato$contatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    where?: ContatoCandidatoWhereInput
    orderBy?: ContatoCandidatoOrderByWithRelationInput | ContatoCandidatoOrderByWithRelationInput[]
    cursor?: ContatoCandidatoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContatoCandidatoScalarFieldEnum | ContatoCandidatoScalarFieldEnum[]
  }

  /**
   * Candidato.Eleitor
   */
  export type Candidato$EleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    cursor?: EleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * Candidato.coligacao
   */
  export type Candidato$coligacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    where?: coligacaoWhereInput
  }

  /**
   * Candidato.localdevotacao_has_candidato
   */
  export type Candidato$localdevotacao_has_candidatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    where?: PlanejamentoLocalVotacaoWhereInput
    orderBy?: PlanejamentoLocalVotacaoOrderByWithRelationInput | PlanejamentoLocalVotacaoOrderByWithRelationInput[]
    cursor?: PlanejamentoLocalVotacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlanejamentoLocalVotacaoScalarFieldEnum | PlanejamentoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * Candidato without action
   */
  export type CandidatoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Candidato
     */
    select?: CandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatoInclude<ExtArgs> | null
  }


  /**
   * Model ContatoCandidato
   */

  export type AggregateContatoCandidato = {
    _count: ContatoCandidatoCountAggregateOutputType | null
    _min: ContatoCandidatoMinAggregateOutputType | null
    _max: ContatoCandidatoMaxAggregateOutputType | null
  }

  export type ContatoCandidatoMinAggregateOutputType = {
    uuidContato: string | null
    uuidEmpresa: string | null
    nomeContato: string | null
    cargo: string | null
    telefone: string | null
    whatsapp: string | null
    email: string | null
  }

  export type ContatoCandidatoMaxAggregateOutputType = {
    uuidContato: string | null
    uuidEmpresa: string | null
    nomeContato: string | null
    cargo: string | null
    telefone: string | null
    whatsapp: string | null
    email: string | null
  }

  export type ContatoCandidatoCountAggregateOutputType = {
    uuidContato: number
    uuidEmpresa: number
    nomeContato: number
    cargo: number
    telefone: number
    whatsapp: number
    email: number
    _all: number
  }


  export type ContatoCandidatoMinAggregateInputType = {
    uuidContato?: true
    uuidEmpresa?: true
    nomeContato?: true
    cargo?: true
    telefone?: true
    whatsapp?: true
    email?: true
  }

  export type ContatoCandidatoMaxAggregateInputType = {
    uuidContato?: true
    uuidEmpresa?: true
    nomeContato?: true
    cargo?: true
    telefone?: true
    whatsapp?: true
    email?: true
  }

  export type ContatoCandidatoCountAggregateInputType = {
    uuidContato?: true
    uuidEmpresa?: true
    nomeContato?: true
    cargo?: true
    telefone?: true
    whatsapp?: true
    email?: true
    _all?: true
  }

  export type ContatoCandidatoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ContatoCandidato to aggregate.
     */
    where?: ContatoCandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContatoCandidatoes to fetch.
     */
    orderBy?: ContatoCandidatoOrderByWithRelationInput | ContatoCandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContatoCandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContatoCandidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContatoCandidatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ContatoCandidatoes
    **/
    _count?: true | ContatoCandidatoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContatoCandidatoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContatoCandidatoMaxAggregateInputType
  }

  export type GetContatoCandidatoAggregateType<T extends ContatoCandidatoAggregateArgs> = {
        [P in keyof T & keyof AggregateContatoCandidato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContatoCandidato[P]>
      : GetScalarType<T[P], AggregateContatoCandidato[P]>
  }




  export type ContatoCandidatoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContatoCandidatoWhereInput
    orderBy?: ContatoCandidatoOrderByWithAggregationInput | ContatoCandidatoOrderByWithAggregationInput[]
    by: ContatoCandidatoScalarFieldEnum[] | ContatoCandidatoScalarFieldEnum
    having?: ContatoCandidatoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContatoCandidatoCountAggregateInputType | true
    _min?: ContatoCandidatoMinAggregateInputType
    _max?: ContatoCandidatoMaxAggregateInputType
  }

  export type ContatoCandidatoGroupByOutputType = {
    uuidContato: string
    uuidEmpresa: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp: string | null
    email: string
    _count: ContatoCandidatoCountAggregateOutputType | null
    _min: ContatoCandidatoMinAggregateOutputType | null
    _max: ContatoCandidatoMaxAggregateOutputType | null
  }

  type GetContatoCandidatoGroupByPayload<T extends ContatoCandidatoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContatoCandidatoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContatoCandidatoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContatoCandidatoGroupByOutputType[P]>
            : GetScalarType<T[P], ContatoCandidatoGroupByOutputType[P]>
        }
      >
    >


  export type ContatoCandidatoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuidContato?: boolean
    uuidEmpresa?: boolean
    nomeContato?: boolean
    cargo?: boolean
    telefone?: boolean
    whatsapp?: boolean
    email?: boolean
    Candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contatoCandidato"]>

  export type ContatoCandidatoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuidContato?: boolean
    uuidEmpresa?: boolean
    nomeContato?: boolean
    cargo?: boolean
    telefone?: boolean
    whatsapp?: boolean
    email?: boolean
    Candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contatoCandidato"]>

  export type ContatoCandidatoSelectScalar = {
    uuidContato?: boolean
    uuidEmpresa?: boolean
    nomeContato?: boolean
    cargo?: boolean
    telefone?: boolean
    whatsapp?: boolean
    email?: boolean
  }

  export type ContatoCandidatoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
  }
  export type ContatoCandidatoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
  }

  export type $ContatoCandidatoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ContatoCandidato"
    objects: {
      Candidato: Prisma.$CandidatoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuidContato: string
      uuidEmpresa: string
      nomeContato: string
      cargo: string
      telefone: string
      whatsapp: string | null
      email: string
    }, ExtArgs["result"]["contatoCandidato"]>
    composites: {}
  }

  type ContatoCandidatoGetPayload<S extends boolean | null | undefined | ContatoCandidatoDefaultArgs> = $Result.GetResult<Prisma.$ContatoCandidatoPayload, S>

  type ContatoCandidatoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ContatoCandidatoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContatoCandidatoCountAggregateInputType | true
    }

  export interface ContatoCandidatoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ContatoCandidato'], meta: { name: 'ContatoCandidato' } }
    /**
     * Find zero or one ContatoCandidato that matches the filter.
     * @param {ContatoCandidatoFindUniqueArgs} args - Arguments to find a ContatoCandidato
     * @example
     * // Get one ContatoCandidato
     * const contatoCandidato = await prisma.contatoCandidato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContatoCandidatoFindUniqueArgs>(args: SelectSubset<T, ContatoCandidatoFindUniqueArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ContatoCandidato that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ContatoCandidatoFindUniqueOrThrowArgs} args - Arguments to find a ContatoCandidato
     * @example
     * // Get one ContatoCandidato
     * const contatoCandidato = await prisma.contatoCandidato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContatoCandidatoFindUniqueOrThrowArgs>(args: SelectSubset<T, ContatoCandidatoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ContatoCandidato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoFindFirstArgs} args - Arguments to find a ContatoCandidato
     * @example
     * // Get one ContatoCandidato
     * const contatoCandidato = await prisma.contatoCandidato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContatoCandidatoFindFirstArgs>(args?: SelectSubset<T, ContatoCandidatoFindFirstArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ContatoCandidato that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoFindFirstOrThrowArgs} args - Arguments to find a ContatoCandidato
     * @example
     * // Get one ContatoCandidato
     * const contatoCandidato = await prisma.contatoCandidato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContatoCandidatoFindFirstOrThrowArgs>(args?: SelectSubset<T, ContatoCandidatoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ContatoCandidatoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ContatoCandidatoes
     * const contatoCandidatoes = await prisma.contatoCandidato.findMany()
     * 
     * // Get first 10 ContatoCandidatoes
     * const contatoCandidatoes = await prisma.contatoCandidato.findMany({ take: 10 })
     * 
     * // Only select the `uuidContato`
     * const contatoCandidatoWithUuidContatoOnly = await prisma.contatoCandidato.findMany({ select: { uuidContato: true } })
     * 
     */
    findMany<T extends ContatoCandidatoFindManyArgs>(args?: SelectSubset<T, ContatoCandidatoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ContatoCandidato.
     * @param {ContatoCandidatoCreateArgs} args - Arguments to create a ContatoCandidato.
     * @example
     * // Create one ContatoCandidato
     * const ContatoCandidato = await prisma.contatoCandidato.create({
     *   data: {
     *     // ... data to create a ContatoCandidato
     *   }
     * })
     * 
     */
    create<T extends ContatoCandidatoCreateArgs>(args: SelectSubset<T, ContatoCandidatoCreateArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ContatoCandidatoes.
     * @param {ContatoCandidatoCreateManyArgs} args - Arguments to create many ContatoCandidatoes.
     * @example
     * // Create many ContatoCandidatoes
     * const contatoCandidato = await prisma.contatoCandidato.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContatoCandidatoCreateManyArgs>(args?: SelectSubset<T, ContatoCandidatoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ContatoCandidatoes and returns the data saved in the database.
     * @param {ContatoCandidatoCreateManyAndReturnArgs} args - Arguments to create many ContatoCandidatoes.
     * @example
     * // Create many ContatoCandidatoes
     * const contatoCandidato = await prisma.contatoCandidato.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ContatoCandidatoes and only return the `uuidContato`
     * const contatoCandidatoWithUuidContatoOnly = await prisma.contatoCandidato.createManyAndReturn({ 
     *   select: { uuidContato: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContatoCandidatoCreateManyAndReturnArgs>(args?: SelectSubset<T, ContatoCandidatoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ContatoCandidato.
     * @param {ContatoCandidatoDeleteArgs} args - Arguments to delete one ContatoCandidato.
     * @example
     * // Delete one ContatoCandidato
     * const ContatoCandidato = await prisma.contatoCandidato.delete({
     *   where: {
     *     // ... filter to delete one ContatoCandidato
     *   }
     * })
     * 
     */
    delete<T extends ContatoCandidatoDeleteArgs>(args: SelectSubset<T, ContatoCandidatoDeleteArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ContatoCandidato.
     * @param {ContatoCandidatoUpdateArgs} args - Arguments to update one ContatoCandidato.
     * @example
     * // Update one ContatoCandidato
     * const contatoCandidato = await prisma.contatoCandidato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContatoCandidatoUpdateArgs>(args: SelectSubset<T, ContatoCandidatoUpdateArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ContatoCandidatoes.
     * @param {ContatoCandidatoDeleteManyArgs} args - Arguments to filter ContatoCandidatoes to delete.
     * @example
     * // Delete a few ContatoCandidatoes
     * const { count } = await prisma.contatoCandidato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContatoCandidatoDeleteManyArgs>(args?: SelectSubset<T, ContatoCandidatoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ContatoCandidatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ContatoCandidatoes
     * const contatoCandidato = await prisma.contatoCandidato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContatoCandidatoUpdateManyArgs>(args: SelectSubset<T, ContatoCandidatoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ContatoCandidato.
     * @param {ContatoCandidatoUpsertArgs} args - Arguments to update or create a ContatoCandidato.
     * @example
     * // Update or create a ContatoCandidato
     * const contatoCandidato = await prisma.contatoCandidato.upsert({
     *   create: {
     *     // ... data to create a ContatoCandidato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ContatoCandidato we want to update
     *   }
     * })
     */
    upsert<T extends ContatoCandidatoUpsertArgs>(args: SelectSubset<T, ContatoCandidatoUpsertArgs<ExtArgs>>): Prisma__ContatoCandidatoClient<$Result.GetResult<Prisma.$ContatoCandidatoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ContatoCandidatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoCountArgs} args - Arguments to filter ContatoCandidatoes to count.
     * @example
     * // Count the number of ContatoCandidatoes
     * const count = await prisma.contatoCandidato.count({
     *   where: {
     *     // ... the filter for the ContatoCandidatoes we want to count
     *   }
     * })
    **/
    count<T extends ContatoCandidatoCountArgs>(
      args?: Subset<T, ContatoCandidatoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContatoCandidatoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ContatoCandidato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContatoCandidatoAggregateArgs>(args: Subset<T, ContatoCandidatoAggregateArgs>): Prisma.PrismaPromise<GetContatoCandidatoAggregateType<T>>

    /**
     * Group by ContatoCandidato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoCandidatoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContatoCandidatoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContatoCandidatoGroupByArgs['orderBy'] }
        : { orderBy?: ContatoCandidatoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContatoCandidatoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContatoCandidatoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ContatoCandidato model
   */
  readonly fields: ContatoCandidatoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ContatoCandidato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContatoCandidatoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Candidato<T extends CandidatoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidatoDefaultArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ContatoCandidato model
   */ 
  interface ContatoCandidatoFieldRefs {
    readonly uuidContato: FieldRef<"ContatoCandidato", 'String'>
    readonly uuidEmpresa: FieldRef<"ContatoCandidato", 'String'>
    readonly nomeContato: FieldRef<"ContatoCandidato", 'String'>
    readonly cargo: FieldRef<"ContatoCandidato", 'String'>
    readonly telefone: FieldRef<"ContatoCandidato", 'String'>
    readonly whatsapp: FieldRef<"ContatoCandidato", 'String'>
    readonly email: FieldRef<"ContatoCandidato", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ContatoCandidato findUnique
   */
  export type ContatoCandidatoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * Filter, which ContatoCandidato to fetch.
     */
    where: ContatoCandidatoWhereUniqueInput
  }

  /**
   * ContatoCandidato findUniqueOrThrow
   */
  export type ContatoCandidatoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * Filter, which ContatoCandidato to fetch.
     */
    where: ContatoCandidatoWhereUniqueInput
  }

  /**
   * ContatoCandidato findFirst
   */
  export type ContatoCandidatoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * Filter, which ContatoCandidato to fetch.
     */
    where?: ContatoCandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContatoCandidatoes to fetch.
     */
    orderBy?: ContatoCandidatoOrderByWithRelationInput | ContatoCandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ContatoCandidatoes.
     */
    cursor?: ContatoCandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContatoCandidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContatoCandidatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ContatoCandidatoes.
     */
    distinct?: ContatoCandidatoScalarFieldEnum | ContatoCandidatoScalarFieldEnum[]
  }

  /**
   * ContatoCandidato findFirstOrThrow
   */
  export type ContatoCandidatoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * Filter, which ContatoCandidato to fetch.
     */
    where?: ContatoCandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContatoCandidatoes to fetch.
     */
    orderBy?: ContatoCandidatoOrderByWithRelationInput | ContatoCandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ContatoCandidatoes.
     */
    cursor?: ContatoCandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContatoCandidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContatoCandidatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ContatoCandidatoes.
     */
    distinct?: ContatoCandidatoScalarFieldEnum | ContatoCandidatoScalarFieldEnum[]
  }

  /**
   * ContatoCandidato findMany
   */
  export type ContatoCandidatoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * Filter, which ContatoCandidatoes to fetch.
     */
    where?: ContatoCandidatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ContatoCandidatoes to fetch.
     */
    orderBy?: ContatoCandidatoOrderByWithRelationInput | ContatoCandidatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ContatoCandidatoes.
     */
    cursor?: ContatoCandidatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ContatoCandidatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ContatoCandidatoes.
     */
    skip?: number
    distinct?: ContatoCandidatoScalarFieldEnum | ContatoCandidatoScalarFieldEnum[]
  }

  /**
   * ContatoCandidato create
   */
  export type ContatoCandidatoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * The data needed to create a ContatoCandidato.
     */
    data: XOR<ContatoCandidatoCreateInput, ContatoCandidatoUncheckedCreateInput>
  }

  /**
   * ContatoCandidato createMany
   */
  export type ContatoCandidatoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ContatoCandidatoes.
     */
    data: ContatoCandidatoCreateManyInput | ContatoCandidatoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ContatoCandidato createManyAndReturn
   */
  export type ContatoCandidatoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ContatoCandidatoes.
     */
    data: ContatoCandidatoCreateManyInput | ContatoCandidatoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ContatoCandidato update
   */
  export type ContatoCandidatoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * The data needed to update a ContatoCandidato.
     */
    data: XOR<ContatoCandidatoUpdateInput, ContatoCandidatoUncheckedUpdateInput>
    /**
     * Choose, which ContatoCandidato to update.
     */
    where: ContatoCandidatoWhereUniqueInput
  }

  /**
   * ContatoCandidato updateMany
   */
  export type ContatoCandidatoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ContatoCandidatoes.
     */
    data: XOR<ContatoCandidatoUpdateManyMutationInput, ContatoCandidatoUncheckedUpdateManyInput>
    /**
     * Filter which ContatoCandidatoes to update
     */
    where?: ContatoCandidatoWhereInput
  }

  /**
   * ContatoCandidato upsert
   */
  export type ContatoCandidatoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * The filter to search for the ContatoCandidato to update in case it exists.
     */
    where: ContatoCandidatoWhereUniqueInput
    /**
     * In case the ContatoCandidato found by the `where` argument doesn't exist, create a new ContatoCandidato with this data.
     */
    create: XOR<ContatoCandidatoCreateInput, ContatoCandidatoUncheckedCreateInput>
    /**
     * In case the ContatoCandidato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContatoCandidatoUpdateInput, ContatoCandidatoUncheckedUpdateInput>
  }

  /**
   * ContatoCandidato delete
   */
  export type ContatoCandidatoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
    /**
     * Filter which ContatoCandidato to delete.
     */
    where: ContatoCandidatoWhereUniqueInput
  }

  /**
   * ContatoCandidato deleteMany
   */
  export type ContatoCandidatoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ContatoCandidatoes to delete
     */
    where?: ContatoCandidatoWhereInput
  }

  /**
   * ContatoCandidato without action
   */
  export type ContatoCandidatoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContatoCandidato
     */
    select?: ContatoCandidatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContatoCandidatoInclude<ExtArgs> | null
  }


  /**
   * Model tipoAtendimento
   */

  export type AggregateTipoAtendimento = {
    _count: TipoAtendimentoCountAggregateOutputType | null
    _avg: TipoAtendimentoAvgAggregateOutputType | null
    _sum: TipoAtendimentoSumAggregateOutputType | null
    _min: TipoAtendimentoMinAggregateOutputType | null
    _max: TipoAtendimentoMaxAggregateOutputType | null
  }

  export type TipoAtendimentoAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoAtendimentoSumAggregateOutputType = {
    id: number | null
  }

  export type TipoAtendimentoMinAggregateOutputType = {
    id: number | null
    descricao: string | null
  }

  export type TipoAtendimentoMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
  }

  export type TipoAtendimentoCountAggregateOutputType = {
    id: number
    descricao: number
    _all: number
  }


  export type TipoAtendimentoAvgAggregateInputType = {
    id?: true
  }

  export type TipoAtendimentoSumAggregateInputType = {
    id?: true
  }

  export type TipoAtendimentoMinAggregateInputType = {
    id?: true
    descricao?: true
  }

  export type TipoAtendimentoMaxAggregateInputType = {
    id?: true
    descricao?: true
  }

  export type TipoAtendimentoCountAggregateInputType = {
    id?: true
    descricao?: true
    _all?: true
  }

  export type TipoAtendimentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipoAtendimento to aggregate.
     */
    where?: tipoAtendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoAtendimentos to fetch.
     */
    orderBy?: tipoAtendimentoOrderByWithRelationInput | tipoAtendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipoAtendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoAtendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoAtendimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipoAtendimentos
    **/
    _count?: true | TipoAtendimentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoAtendimentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoAtendimentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoAtendimentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoAtendimentoMaxAggregateInputType
  }

  export type GetTipoAtendimentoAggregateType<T extends TipoAtendimentoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoAtendimento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoAtendimento[P]>
      : GetScalarType<T[P], AggregateTipoAtendimento[P]>
  }




  export type tipoAtendimentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipoAtendimentoWhereInput
    orderBy?: tipoAtendimentoOrderByWithAggregationInput | tipoAtendimentoOrderByWithAggregationInput[]
    by: TipoAtendimentoScalarFieldEnum[] | TipoAtendimentoScalarFieldEnum
    having?: tipoAtendimentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoAtendimentoCountAggregateInputType | true
    _avg?: TipoAtendimentoAvgAggregateInputType
    _sum?: TipoAtendimentoSumAggregateInputType
    _min?: TipoAtendimentoMinAggregateInputType
    _max?: TipoAtendimentoMaxAggregateInputType
  }

  export type TipoAtendimentoGroupByOutputType = {
    id: number
    descricao: string
    _count: TipoAtendimentoCountAggregateOutputType | null
    _avg: TipoAtendimentoAvgAggregateOutputType | null
    _sum: TipoAtendimentoSumAggregateOutputType | null
    _min: TipoAtendimentoMinAggregateOutputType | null
    _max: TipoAtendimentoMaxAggregateOutputType | null
  }

  type GetTipoAtendimentoGroupByPayload<T extends tipoAtendimentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoAtendimentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoAtendimentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoAtendimentoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoAtendimentoGroupByOutputType[P]>
        }
      >
    >


  export type tipoAtendimentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    atendimento?: boolean | tipoAtendimento$atendimentoArgs<ExtArgs>
    _count?: boolean | TipoAtendimentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoAtendimento"]>

  export type tipoAtendimentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["tipoAtendimento"]>

  export type tipoAtendimentoSelectScalar = {
    id?: boolean
    descricao?: boolean
  }

  export type tipoAtendimentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    atendimento?: boolean | tipoAtendimento$atendimentoArgs<ExtArgs>
    _count?: boolean | TipoAtendimentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipoAtendimentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipoAtendimentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipoAtendimento"
    objects: {
      atendimento: Prisma.$atendimentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string
    }, ExtArgs["result"]["tipoAtendimento"]>
    composites: {}
  }

  type tipoAtendimentoGetPayload<S extends boolean | null | undefined | tipoAtendimentoDefaultArgs> = $Result.GetResult<Prisma.$tipoAtendimentoPayload, S>

  type tipoAtendimentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tipoAtendimentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TipoAtendimentoCountAggregateInputType | true
    }

  export interface tipoAtendimentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipoAtendimento'], meta: { name: 'tipoAtendimento' } }
    /**
     * Find zero or one TipoAtendimento that matches the filter.
     * @param {tipoAtendimentoFindUniqueArgs} args - Arguments to find a TipoAtendimento
     * @example
     * // Get one TipoAtendimento
     * const tipoAtendimento = await prisma.tipoAtendimento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipoAtendimentoFindUniqueArgs>(args: SelectSubset<T, tipoAtendimentoFindUniqueArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TipoAtendimento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tipoAtendimentoFindUniqueOrThrowArgs} args - Arguments to find a TipoAtendimento
     * @example
     * // Get one TipoAtendimento
     * const tipoAtendimento = await prisma.tipoAtendimento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipoAtendimentoFindUniqueOrThrowArgs>(args: SelectSubset<T, tipoAtendimentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TipoAtendimento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoAtendimentoFindFirstArgs} args - Arguments to find a TipoAtendimento
     * @example
     * // Get one TipoAtendimento
     * const tipoAtendimento = await prisma.tipoAtendimento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipoAtendimentoFindFirstArgs>(args?: SelectSubset<T, tipoAtendimentoFindFirstArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TipoAtendimento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoAtendimentoFindFirstOrThrowArgs} args - Arguments to find a TipoAtendimento
     * @example
     * // Get one TipoAtendimento
     * const tipoAtendimento = await prisma.tipoAtendimento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipoAtendimentoFindFirstOrThrowArgs>(args?: SelectSubset<T, tipoAtendimentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TipoAtendimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoAtendimentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoAtendimentos
     * const tipoAtendimentos = await prisma.tipoAtendimento.findMany()
     * 
     * // Get first 10 TipoAtendimentos
     * const tipoAtendimentos = await prisma.tipoAtendimento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoAtendimentoWithIdOnly = await prisma.tipoAtendimento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tipoAtendimentoFindManyArgs>(args?: SelectSubset<T, tipoAtendimentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TipoAtendimento.
     * @param {tipoAtendimentoCreateArgs} args - Arguments to create a TipoAtendimento.
     * @example
     * // Create one TipoAtendimento
     * const TipoAtendimento = await prisma.tipoAtendimento.create({
     *   data: {
     *     // ... data to create a TipoAtendimento
     *   }
     * })
     * 
     */
    create<T extends tipoAtendimentoCreateArgs>(args: SelectSubset<T, tipoAtendimentoCreateArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TipoAtendimentos.
     * @param {tipoAtendimentoCreateManyArgs} args - Arguments to create many TipoAtendimentos.
     * @example
     * // Create many TipoAtendimentos
     * const tipoAtendimento = await prisma.tipoAtendimento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipoAtendimentoCreateManyArgs>(args?: SelectSubset<T, tipoAtendimentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoAtendimentos and returns the data saved in the database.
     * @param {tipoAtendimentoCreateManyAndReturnArgs} args - Arguments to create many TipoAtendimentos.
     * @example
     * // Create many TipoAtendimentos
     * const tipoAtendimento = await prisma.tipoAtendimento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoAtendimentos and only return the `id`
     * const tipoAtendimentoWithIdOnly = await prisma.tipoAtendimento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipoAtendimentoCreateManyAndReturnArgs>(args?: SelectSubset<T, tipoAtendimentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TipoAtendimento.
     * @param {tipoAtendimentoDeleteArgs} args - Arguments to delete one TipoAtendimento.
     * @example
     * // Delete one TipoAtendimento
     * const TipoAtendimento = await prisma.tipoAtendimento.delete({
     *   where: {
     *     // ... filter to delete one TipoAtendimento
     *   }
     * })
     * 
     */
    delete<T extends tipoAtendimentoDeleteArgs>(args: SelectSubset<T, tipoAtendimentoDeleteArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TipoAtendimento.
     * @param {tipoAtendimentoUpdateArgs} args - Arguments to update one TipoAtendimento.
     * @example
     * // Update one TipoAtendimento
     * const tipoAtendimento = await prisma.tipoAtendimento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipoAtendimentoUpdateArgs>(args: SelectSubset<T, tipoAtendimentoUpdateArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TipoAtendimentos.
     * @param {tipoAtendimentoDeleteManyArgs} args - Arguments to filter TipoAtendimentos to delete.
     * @example
     * // Delete a few TipoAtendimentos
     * const { count } = await prisma.tipoAtendimento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipoAtendimentoDeleteManyArgs>(args?: SelectSubset<T, tipoAtendimentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoAtendimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoAtendimentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoAtendimentos
     * const tipoAtendimento = await prisma.tipoAtendimento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipoAtendimentoUpdateManyArgs>(args: SelectSubset<T, tipoAtendimentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoAtendimento.
     * @param {tipoAtendimentoUpsertArgs} args - Arguments to update or create a TipoAtendimento.
     * @example
     * // Update or create a TipoAtendimento
     * const tipoAtendimento = await prisma.tipoAtendimento.upsert({
     *   create: {
     *     // ... data to create a TipoAtendimento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoAtendimento we want to update
     *   }
     * })
     */
    upsert<T extends tipoAtendimentoUpsertArgs>(args: SelectSubset<T, tipoAtendimentoUpsertArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TipoAtendimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoAtendimentoCountArgs} args - Arguments to filter TipoAtendimentos to count.
     * @example
     * // Count the number of TipoAtendimentos
     * const count = await prisma.tipoAtendimento.count({
     *   where: {
     *     // ... the filter for the TipoAtendimentos we want to count
     *   }
     * })
    **/
    count<T extends tipoAtendimentoCountArgs>(
      args?: Subset<T, tipoAtendimentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoAtendimentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoAtendimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAtendimentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoAtendimentoAggregateArgs>(args: Subset<T, TipoAtendimentoAggregateArgs>): Prisma.PrismaPromise<GetTipoAtendimentoAggregateType<T>>

    /**
     * Group by TipoAtendimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoAtendimentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipoAtendimentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipoAtendimentoGroupByArgs['orderBy'] }
        : { orderBy?: tipoAtendimentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipoAtendimentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoAtendimentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipoAtendimento model
   */
  readonly fields: tipoAtendimentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipoAtendimento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipoAtendimentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    atendimento<T extends tipoAtendimento$atendimentoArgs<ExtArgs> = {}>(args?: Subset<T, tipoAtendimento$atendimentoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipoAtendimento model
   */ 
  interface tipoAtendimentoFieldRefs {
    readonly id: FieldRef<"tipoAtendimento", 'Int'>
    readonly descricao: FieldRef<"tipoAtendimento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipoAtendimento findUnique
   */
  export type tipoAtendimentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * Filter, which tipoAtendimento to fetch.
     */
    where: tipoAtendimentoWhereUniqueInput
  }

  /**
   * tipoAtendimento findUniqueOrThrow
   */
  export type tipoAtendimentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * Filter, which tipoAtendimento to fetch.
     */
    where: tipoAtendimentoWhereUniqueInput
  }

  /**
   * tipoAtendimento findFirst
   */
  export type tipoAtendimentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * Filter, which tipoAtendimento to fetch.
     */
    where?: tipoAtendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoAtendimentos to fetch.
     */
    orderBy?: tipoAtendimentoOrderByWithRelationInput | tipoAtendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoAtendimentos.
     */
    cursor?: tipoAtendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoAtendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoAtendimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoAtendimentos.
     */
    distinct?: TipoAtendimentoScalarFieldEnum | TipoAtendimentoScalarFieldEnum[]
  }

  /**
   * tipoAtendimento findFirstOrThrow
   */
  export type tipoAtendimentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * Filter, which tipoAtendimento to fetch.
     */
    where?: tipoAtendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoAtendimentos to fetch.
     */
    orderBy?: tipoAtendimentoOrderByWithRelationInput | tipoAtendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoAtendimentos.
     */
    cursor?: tipoAtendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoAtendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoAtendimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoAtendimentos.
     */
    distinct?: TipoAtendimentoScalarFieldEnum | TipoAtendimentoScalarFieldEnum[]
  }

  /**
   * tipoAtendimento findMany
   */
  export type tipoAtendimentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * Filter, which tipoAtendimentos to fetch.
     */
    where?: tipoAtendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoAtendimentos to fetch.
     */
    orderBy?: tipoAtendimentoOrderByWithRelationInput | tipoAtendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipoAtendimentos.
     */
    cursor?: tipoAtendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoAtendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoAtendimentos.
     */
    skip?: number
    distinct?: TipoAtendimentoScalarFieldEnum | TipoAtendimentoScalarFieldEnum[]
  }

  /**
   * tipoAtendimento create
   */
  export type tipoAtendimentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * The data needed to create a tipoAtendimento.
     */
    data: XOR<tipoAtendimentoCreateInput, tipoAtendimentoUncheckedCreateInput>
  }

  /**
   * tipoAtendimento createMany
   */
  export type tipoAtendimentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipoAtendimentos.
     */
    data: tipoAtendimentoCreateManyInput | tipoAtendimentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipoAtendimento createManyAndReturn
   */
  export type tipoAtendimentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many tipoAtendimentos.
     */
    data: tipoAtendimentoCreateManyInput | tipoAtendimentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipoAtendimento update
   */
  export type tipoAtendimentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * The data needed to update a tipoAtendimento.
     */
    data: XOR<tipoAtendimentoUpdateInput, tipoAtendimentoUncheckedUpdateInput>
    /**
     * Choose, which tipoAtendimento to update.
     */
    where: tipoAtendimentoWhereUniqueInput
  }

  /**
   * tipoAtendimento updateMany
   */
  export type tipoAtendimentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipoAtendimentos.
     */
    data: XOR<tipoAtendimentoUpdateManyMutationInput, tipoAtendimentoUncheckedUpdateManyInput>
    /**
     * Filter which tipoAtendimentos to update
     */
    where?: tipoAtendimentoWhereInput
  }

  /**
   * tipoAtendimento upsert
   */
  export type tipoAtendimentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * The filter to search for the tipoAtendimento to update in case it exists.
     */
    where: tipoAtendimentoWhereUniqueInput
    /**
     * In case the tipoAtendimento found by the `where` argument doesn't exist, create a new tipoAtendimento with this data.
     */
    create: XOR<tipoAtendimentoCreateInput, tipoAtendimentoUncheckedCreateInput>
    /**
     * In case the tipoAtendimento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipoAtendimentoUpdateInput, tipoAtendimentoUncheckedUpdateInput>
  }

  /**
   * tipoAtendimento delete
   */
  export type tipoAtendimentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    /**
     * Filter which tipoAtendimento to delete.
     */
    where: tipoAtendimentoWhereUniqueInput
  }

  /**
   * tipoAtendimento deleteMany
   */
  export type tipoAtendimentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipoAtendimentos to delete
     */
    where?: tipoAtendimentoWhereInput
  }

  /**
   * tipoAtendimento.atendimento
   */
  export type tipoAtendimento$atendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    where?: atendimentoWhereInput
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    cursor?: atendimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * tipoAtendimento without action
   */
  export type tipoAtendimentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
  }


  /**
   * Model atendimento
   */

  export type AggregateAtendimento = {
    _count: AtendimentoCountAggregateOutputType | null
    _avg: AtendimentoAvgAggregateOutputType | null
    _sum: AtendimentoSumAggregateOutputType | null
    _min: AtendimentoMinAggregateOutputType | null
    _max: AtendimentoMaxAggregateOutputType | null
  }

  export type AtendimentoAvgAggregateOutputType = {
    custo: number | null
    tipoAtendimento: number | null
  }

  export type AtendimentoSumAggregateOutputType = {
    custo: number | null
    tipoAtendimento: number | null
  }

  export type AtendimentoMinAggregateOutputType = {
    uuid: string | null
    eleitorUuid: string | null
    usuarioUuid: string | null
    responsavelUuid: string | null
    custo: number | null
    dataatendimento: Date | null
    created_at: Date | null
    updated_at: Date | null
    tipoAtendimento: number | null
    descricao: string | null
  }

  export type AtendimentoMaxAggregateOutputType = {
    uuid: string | null
    eleitorUuid: string | null
    usuarioUuid: string | null
    responsavelUuid: string | null
    custo: number | null
    dataatendimento: Date | null
    created_at: Date | null
    updated_at: Date | null
    tipoAtendimento: number | null
    descricao: string | null
  }

  export type AtendimentoCountAggregateOutputType = {
    uuid: number
    eleitorUuid: number
    usuarioUuid: number
    responsavelUuid: number
    custo: number
    dataatendimento: number
    created_at: number
    updated_at: number
    tipoAtendimento: number
    descricao: number
    _all: number
  }


  export type AtendimentoAvgAggregateInputType = {
    custo?: true
    tipoAtendimento?: true
  }

  export type AtendimentoSumAggregateInputType = {
    custo?: true
    tipoAtendimento?: true
  }

  export type AtendimentoMinAggregateInputType = {
    uuid?: true
    eleitorUuid?: true
    usuarioUuid?: true
    responsavelUuid?: true
    custo?: true
    dataatendimento?: true
    created_at?: true
    updated_at?: true
    tipoAtendimento?: true
    descricao?: true
  }

  export type AtendimentoMaxAggregateInputType = {
    uuid?: true
    eleitorUuid?: true
    usuarioUuid?: true
    responsavelUuid?: true
    custo?: true
    dataatendimento?: true
    created_at?: true
    updated_at?: true
    tipoAtendimento?: true
    descricao?: true
  }

  export type AtendimentoCountAggregateInputType = {
    uuid?: true
    eleitorUuid?: true
    usuarioUuid?: true
    responsavelUuid?: true
    custo?: true
    dataatendimento?: true
    created_at?: true
    updated_at?: true
    tipoAtendimento?: true
    descricao?: true
    _all?: true
  }

  export type AtendimentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which atendimento to aggregate.
     */
    where?: atendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of atendimentos to fetch.
     */
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: atendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` atendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` atendimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned atendimentos
    **/
    _count?: true | AtendimentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AtendimentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AtendimentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AtendimentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AtendimentoMaxAggregateInputType
  }

  export type GetAtendimentoAggregateType<T extends AtendimentoAggregateArgs> = {
        [P in keyof T & keyof AggregateAtendimento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAtendimento[P]>
      : GetScalarType<T[P], AggregateAtendimento[P]>
  }




  export type atendimentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: atendimentoWhereInput
    orderBy?: atendimentoOrderByWithAggregationInput | atendimentoOrderByWithAggregationInput[]
    by: AtendimentoScalarFieldEnum[] | AtendimentoScalarFieldEnum
    having?: atendimentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AtendimentoCountAggregateInputType | true
    _avg?: AtendimentoAvgAggregateInputType
    _sum?: AtendimentoSumAggregateInputType
    _min?: AtendimentoMinAggregateInputType
    _max?: AtendimentoMaxAggregateInputType
  }

  export type AtendimentoGroupByOutputType = {
    uuid: string
    eleitorUuid: string
    usuarioUuid: string
    responsavelUuid: string
    custo: number
    dataatendimento: Date
    created_at: Date
    updated_at: Date | null
    tipoAtendimento: number | null
    descricao: string | null
    _count: AtendimentoCountAggregateOutputType | null
    _avg: AtendimentoAvgAggregateOutputType | null
    _sum: AtendimentoSumAggregateOutputType | null
    _min: AtendimentoMinAggregateOutputType | null
    _max: AtendimentoMaxAggregateOutputType | null
  }

  type GetAtendimentoGroupByPayload<T extends atendimentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AtendimentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AtendimentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AtendimentoGroupByOutputType[P]>
            : GetScalarType<T[P], AtendimentoGroupByOutputType[P]>
        }
      >
    >


  export type atendimentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    eleitorUuid?: boolean
    usuarioUuid?: boolean
    responsavelUuid?: boolean
    custo?: boolean
    dataatendimento?: boolean
    created_at?: boolean
    updated_at?: boolean
    tipoAtendimento?: boolean
    descricao?: boolean
    criado_por?: boolean | UsuarioDefaultArgs<ExtArgs>
    responsavel?: boolean | UsuarioDefaultArgs<ExtArgs>
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
    atendimento?: boolean | atendimento$atendimentoArgs<ExtArgs>
  }, ExtArgs["result"]["atendimento"]>

  export type atendimentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    eleitorUuid?: boolean
    usuarioUuid?: boolean
    responsavelUuid?: boolean
    custo?: boolean
    dataatendimento?: boolean
    created_at?: boolean
    updated_at?: boolean
    tipoAtendimento?: boolean
    descricao?: boolean
    criado_por?: boolean | UsuarioDefaultArgs<ExtArgs>
    responsavel?: boolean | UsuarioDefaultArgs<ExtArgs>
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
    atendimento?: boolean | atendimento$atendimentoArgs<ExtArgs>
  }, ExtArgs["result"]["atendimento"]>

  export type atendimentoSelectScalar = {
    uuid?: boolean
    eleitorUuid?: boolean
    usuarioUuid?: boolean
    responsavelUuid?: boolean
    custo?: boolean
    dataatendimento?: boolean
    created_at?: boolean
    updated_at?: boolean
    tipoAtendimento?: boolean
    descricao?: boolean
  }

  export type atendimentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    criado_por?: boolean | UsuarioDefaultArgs<ExtArgs>
    responsavel?: boolean | UsuarioDefaultArgs<ExtArgs>
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
    atendimento?: boolean | atendimento$atendimentoArgs<ExtArgs>
  }
  export type atendimentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    criado_por?: boolean | UsuarioDefaultArgs<ExtArgs>
    responsavel?: boolean | UsuarioDefaultArgs<ExtArgs>
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
    atendimento?: boolean | atendimento$atendimentoArgs<ExtArgs>
  }

  export type $atendimentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "atendimento"
    objects: {
      criado_por: Prisma.$UsuarioPayload<ExtArgs>
      responsavel: Prisma.$UsuarioPayload<ExtArgs>
      eleitor: Prisma.$EleitorPayload<ExtArgs>
      atendimento: Prisma.$tipoAtendimentoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      eleitorUuid: string
      usuarioUuid: string
      responsavelUuid: string
      custo: number
      dataatendimento: Date
      created_at: Date
      updated_at: Date | null
      tipoAtendimento: number | null
      descricao: string | null
    }, ExtArgs["result"]["atendimento"]>
    composites: {}
  }

  type atendimentoGetPayload<S extends boolean | null | undefined | atendimentoDefaultArgs> = $Result.GetResult<Prisma.$atendimentoPayload, S>

  type atendimentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<atendimentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AtendimentoCountAggregateInputType | true
    }

  export interface atendimentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['atendimento'], meta: { name: 'atendimento' } }
    /**
     * Find zero or one Atendimento that matches the filter.
     * @param {atendimentoFindUniqueArgs} args - Arguments to find a Atendimento
     * @example
     * // Get one Atendimento
     * const atendimento = await prisma.atendimento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends atendimentoFindUniqueArgs>(args: SelectSubset<T, atendimentoFindUniqueArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Atendimento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {atendimentoFindUniqueOrThrowArgs} args - Arguments to find a Atendimento
     * @example
     * // Get one Atendimento
     * const atendimento = await prisma.atendimento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends atendimentoFindUniqueOrThrowArgs>(args: SelectSubset<T, atendimentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Atendimento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {atendimentoFindFirstArgs} args - Arguments to find a Atendimento
     * @example
     * // Get one Atendimento
     * const atendimento = await prisma.atendimento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends atendimentoFindFirstArgs>(args?: SelectSubset<T, atendimentoFindFirstArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Atendimento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {atendimentoFindFirstOrThrowArgs} args - Arguments to find a Atendimento
     * @example
     * // Get one Atendimento
     * const atendimento = await prisma.atendimento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends atendimentoFindFirstOrThrowArgs>(args?: SelectSubset<T, atendimentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Atendimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {atendimentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Atendimentos
     * const atendimentos = await prisma.atendimento.findMany()
     * 
     * // Get first 10 Atendimentos
     * const atendimentos = await prisma.atendimento.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const atendimentoWithUuidOnly = await prisma.atendimento.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends atendimentoFindManyArgs>(args?: SelectSubset<T, atendimentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Atendimento.
     * @param {atendimentoCreateArgs} args - Arguments to create a Atendimento.
     * @example
     * // Create one Atendimento
     * const Atendimento = await prisma.atendimento.create({
     *   data: {
     *     // ... data to create a Atendimento
     *   }
     * })
     * 
     */
    create<T extends atendimentoCreateArgs>(args: SelectSubset<T, atendimentoCreateArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Atendimentos.
     * @param {atendimentoCreateManyArgs} args - Arguments to create many Atendimentos.
     * @example
     * // Create many Atendimentos
     * const atendimento = await prisma.atendimento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends atendimentoCreateManyArgs>(args?: SelectSubset<T, atendimentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Atendimentos and returns the data saved in the database.
     * @param {atendimentoCreateManyAndReturnArgs} args - Arguments to create many Atendimentos.
     * @example
     * // Create many Atendimentos
     * const atendimento = await prisma.atendimento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Atendimentos and only return the `uuid`
     * const atendimentoWithUuidOnly = await prisma.atendimento.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends atendimentoCreateManyAndReturnArgs>(args?: SelectSubset<T, atendimentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Atendimento.
     * @param {atendimentoDeleteArgs} args - Arguments to delete one Atendimento.
     * @example
     * // Delete one Atendimento
     * const Atendimento = await prisma.atendimento.delete({
     *   where: {
     *     // ... filter to delete one Atendimento
     *   }
     * })
     * 
     */
    delete<T extends atendimentoDeleteArgs>(args: SelectSubset<T, atendimentoDeleteArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Atendimento.
     * @param {atendimentoUpdateArgs} args - Arguments to update one Atendimento.
     * @example
     * // Update one Atendimento
     * const atendimento = await prisma.atendimento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends atendimentoUpdateArgs>(args: SelectSubset<T, atendimentoUpdateArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Atendimentos.
     * @param {atendimentoDeleteManyArgs} args - Arguments to filter Atendimentos to delete.
     * @example
     * // Delete a few Atendimentos
     * const { count } = await prisma.atendimento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends atendimentoDeleteManyArgs>(args?: SelectSubset<T, atendimentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Atendimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {atendimentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Atendimentos
     * const atendimento = await prisma.atendimento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends atendimentoUpdateManyArgs>(args: SelectSubset<T, atendimentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Atendimento.
     * @param {atendimentoUpsertArgs} args - Arguments to update or create a Atendimento.
     * @example
     * // Update or create a Atendimento
     * const atendimento = await prisma.atendimento.upsert({
     *   create: {
     *     // ... data to create a Atendimento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Atendimento we want to update
     *   }
     * })
     */
    upsert<T extends atendimentoUpsertArgs>(args: SelectSubset<T, atendimentoUpsertArgs<ExtArgs>>): Prisma__atendimentoClient<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Atendimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {atendimentoCountArgs} args - Arguments to filter Atendimentos to count.
     * @example
     * // Count the number of Atendimentos
     * const count = await prisma.atendimento.count({
     *   where: {
     *     // ... the filter for the Atendimentos we want to count
     *   }
     * })
    **/
    count<T extends atendimentoCountArgs>(
      args?: Subset<T, atendimentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AtendimentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Atendimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtendimentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AtendimentoAggregateArgs>(args: Subset<T, AtendimentoAggregateArgs>): Prisma.PrismaPromise<GetAtendimentoAggregateType<T>>

    /**
     * Group by Atendimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {atendimentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends atendimentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: atendimentoGroupByArgs['orderBy'] }
        : { orderBy?: atendimentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, atendimentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtendimentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the atendimento model
   */
  readonly fields: atendimentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for atendimento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__atendimentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    criado_por<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    responsavel<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    eleitor<T extends EleitorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EleitorDefaultArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    atendimento<T extends atendimento$atendimentoArgs<ExtArgs> = {}>(args?: Subset<T, atendimento$atendimentoArgs<ExtArgs>>): Prisma__tipoAtendimentoClient<$Result.GetResult<Prisma.$tipoAtendimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the atendimento model
   */ 
  interface atendimentoFieldRefs {
    readonly uuid: FieldRef<"atendimento", 'String'>
    readonly eleitorUuid: FieldRef<"atendimento", 'String'>
    readonly usuarioUuid: FieldRef<"atendimento", 'String'>
    readonly responsavelUuid: FieldRef<"atendimento", 'String'>
    readonly custo: FieldRef<"atendimento", 'Float'>
    readonly dataatendimento: FieldRef<"atendimento", 'DateTime'>
    readonly created_at: FieldRef<"atendimento", 'DateTime'>
    readonly updated_at: FieldRef<"atendimento", 'DateTime'>
    readonly tipoAtendimento: FieldRef<"atendimento", 'Int'>
    readonly descricao: FieldRef<"atendimento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * atendimento findUnique
   */
  export type atendimentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * Filter, which atendimento to fetch.
     */
    where: atendimentoWhereUniqueInput
  }

  /**
   * atendimento findUniqueOrThrow
   */
  export type atendimentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * Filter, which atendimento to fetch.
     */
    where: atendimentoWhereUniqueInput
  }

  /**
   * atendimento findFirst
   */
  export type atendimentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * Filter, which atendimento to fetch.
     */
    where?: atendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of atendimentos to fetch.
     */
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for atendimentos.
     */
    cursor?: atendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` atendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` atendimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of atendimentos.
     */
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * atendimento findFirstOrThrow
   */
  export type atendimentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * Filter, which atendimento to fetch.
     */
    where?: atendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of atendimentos to fetch.
     */
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for atendimentos.
     */
    cursor?: atendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` atendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` atendimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of atendimentos.
     */
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * atendimento findMany
   */
  export type atendimentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * Filter, which atendimentos to fetch.
     */
    where?: atendimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of atendimentos to fetch.
     */
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing atendimentos.
     */
    cursor?: atendimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` atendimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` atendimentos.
     */
    skip?: number
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * atendimento create
   */
  export type atendimentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * The data needed to create a atendimento.
     */
    data: XOR<atendimentoCreateInput, atendimentoUncheckedCreateInput>
  }

  /**
   * atendimento createMany
   */
  export type atendimentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many atendimentos.
     */
    data: atendimentoCreateManyInput | atendimentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * atendimento createManyAndReturn
   */
  export type atendimentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many atendimentos.
     */
    data: atendimentoCreateManyInput | atendimentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * atendimento update
   */
  export type atendimentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * The data needed to update a atendimento.
     */
    data: XOR<atendimentoUpdateInput, atendimentoUncheckedUpdateInput>
    /**
     * Choose, which atendimento to update.
     */
    where: atendimentoWhereUniqueInput
  }

  /**
   * atendimento updateMany
   */
  export type atendimentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update atendimentos.
     */
    data: XOR<atendimentoUpdateManyMutationInput, atendimentoUncheckedUpdateManyInput>
    /**
     * Filter which atendimentos to update
     */
    where?: atendimentoWhereInput
  }

  /**
   * atendimento upsert
   */
  export type atendimentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * The filter to search for the atendimento to update in case it exists.
     */
    where: atendimentoWhereUniqueInput
    /**
     * In case the atendimento found by the `where` argument doesn't exist, create a new atendimento with this data.
     */
    create: XOR<atendimentoCreateInput, atendimentoUncheckedCreateInput>
    /**
     * In case the atendimento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<atendimentoUpdateInput, atendimentoUncheckedUpdateInput>
  }

  /**
   * atendimento delete
   */
  export type atendimentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    /**
     * Filter which atendimento to delete.
     */
    where: atendimentoWhereUniqueInput
  }

  /**
   * atendimento deleteMany
   */
  export type atendimentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which atendimentos to delete
     */
    where?: atendimentoWhereInput
  }

  /**
   * atendimento.atendimento
   */
  export type atendimento$atendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoAtendimento
     */
    select?: tipoAtendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoAtendimentoInclude<ExtArgs> | null
    where?: tipoAtendimentoWhereInput
  }

  /**
   * atendimento without action
   */
  export type atendimentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
  }


  /**
   * Model Eleitor
   */

  export type AggregateEleitor = {
    _count: EleitorCountAggregateOutputType | null
    _avg: EleitorAvgAggregateOutputType | null
    _sum: EleitorSumAggregateOutputType | null
    _min: EleitorMinAggregateOutputType | null
    _max: EleitorMaxAggregateOutputType | null
  }

  export type EleitorAvgAggregateOutputType = {
    sessaoEleitoral: number | null
    classificacaoId: number | null
  }

  export type EleitorSumAggregateOutputType = {
    sessaoEleitoral: number | null
    classificacaoId: number | null
  }

  export type EleitorMinAggregateOutputType = {
    uuid: string | null
    nomeCompleto: string | null
    nomeMae: string | null
    sexo: string | null
    cpf: string | null
    rg: string | null
    coligacaoUuid: string | null
    dataNascimento: Date | null
    indicado_por: string | null
    candidatoUuid: string | null
    usuarioUuid: string | null
    sessaoEleitoral: number | null
    classificacaoId: number | null
    created_at: Date | null
  }

  export type EleitorMaxAggregateOutputType = {
    uuid: string | null
    nomeCompleto: string | null
    nomeMae: string | null
    sexo: string | null
    cpf: string | null
    rg: string | null
    coligacaoUuid: string | null
    dataNascimento: Date | null
    indicado_por: string | null
    candidatoUuid: string | null
    usuarioUuid: string | null
    sessaoEleitoral: number | null
    classificacaoId: number | null
    created_at: Date | null
  }

  export type EleitorCountAggregateOutputType = {
    uuid: number
    nomeCompleto: number
    nomeMae: number
    sexo: number
    cpf: number
    rg: number
    coligacaoUuid: number
    dataNascimento: number
    indicado_por: number
    candidatoUuid: number
    usuarioUuid: number
    sessaoEleitoral: number
    classificacaoId: number
    created_at: number
    _all: number
  }


  export type EleitorAvgAggregateInputType = {
    sessaoEleitoral?: true
    classificacaoId?: true
  }

  export type EleitorSumAggregateInputType = {
    sessaoEleitoral?: true
    classificacaoId?: true
  }

  export type EleitorMinAggregateInputType = {
    uuid?: true
    nomeCompleto?: true
    nomeMae?: true
    sexo?: true
    cpf?: true
    rg?: true
    coligacaoUuid?: true
    dataNascimento?: true
    indicado_por?: true
    candidatoUuid?: true
    usuarioUuid?: true
    sessaoEleitoral?: true
    classificacaoId?: true
    created_at?: true
  }

  export type EleitorMaxAggregateInputType = {
    uuid?: true
    nomeCompleto?: true
    nomeMae?: true
    sexo?: true
    cpf?: true
    rg?: true
    coligacaoUuid?: true
    dataNascimento?: true
    indicado_por?: true
    candidatoUuid?: true
    usuarioUuid?: true
    sessaoEleitoral?: true
    classificacaoId?: true
    created_at?: true
  }

  export type EleitorCountAggregateInputType = {
    uuid?: true
    nomeCompleto?: true
    nomeMae?: true
    sexo?: true
    cpf?: true
    rg?: true
    coligacaoUuid?: true
    dataNascimento?: true
    indicado_por?: true
    candidatoUuid?: true
    usuarioUuid?: true
    sessaoEleitoral?: true
    classificacaoId?: true
    created_at?: true
    _all?: true
  }

  export type EleitorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eleitor to aggregate.
     */
    where?: EleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleitors to fetch.
     */
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Eleitors
    **/
    _count?: true | EleitorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EleitorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EleitorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EleitorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EleitorMaxAggregateInputType
  }

  export type GetEleitorAggregateType<T extends EleitorAggregateArgs> = {
        [P in keyof T & keyof AggregateEleitor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEleitor[P]>
      : GetScalarType<T[P], AggregateEleitor[P]>
  }




  export type EleitorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithAggregationInput | EleitorOrderByWithAggregationInput[]
    by: EleitorScalarFieldEnum[] | EleitorScalarFieldEnum
    having?: EleitorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EleitorCountAggregateInputType | true
    _avg?: EleitorAvgAggregateInputType
    _sum?: EleitorSumAggregateInputType
    _min?: EleitorMinAggregateInputType
    _max?: EleitorMaxAggregateInputType
  }

  export type EleitorGroupByOutputType = {
    uuid: string
    nomeCompleto: string
    nomeMae: string
    sexo: string
    cpf: string
    rg: string
    coligacaoUuid: string | null
    dataNascimento: Date | null
    indicado_por: string | null
    candidatoUuid: string
    usuarioUuid: string | null
    sessaoEleitoral: number | null
    classificacaoId: number | null
    created_at: Date
    _count: EleitorCountAggregateOutputType | null
    _avg: EleitorAvgAggregateOutputType | null
    _sum: EleitorSumAggregateOutputType | null
    _min: EleitorMinAggregateOutputType | null
    _max: EleitorMaxAggregateOutputType | null
  }

  type GetEleitorGroupByPayload<T extends EleitorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EleitorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EleitorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EleitorGroupByOutputType[P]>
            : GetScalarType<T[P], EleitorGroupByOutputType[P]>
        }
      >
    >


  export type EleitorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    nomeCompleto?: boolean
    nomeMae?: boolean
    sexo?: boolean
    cpf?: boolean
    rg?: boolean
    coligacaoUuid?: boolean
    dataNascimento?: boolean
    indicado_por?: boolean
    candidatoUuid?: boolean
    usuarioUuid?: boolean
    sessaoEleitoral?: boolean
    classificacaoId?: boolean
    created_at?: boolean
    Formiguinha?: boolean | Eleitor$FormiguinhaArgs<ExtArgs>
    sessaoeleitoral?: boolean | Eleitor$sessaoeleitoralArgs<ExtArgs>
    criado_por?: boolean | Eleitor$criado_porArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    classificacao?: boolean | Eleitor$classificacaoArgs<ExtArgs>
    coligacao?: boolean | Eleitor$coligacaoArgs<ExtArgs>
    Indicacoes?: boolean | Eleitor$IndicacoesArgs<ExtArgs>
    contatoEleitor?: boolean | Eleitor$contatoEleitorArgs<ExtArgs>
    MidiasSociaisEleitor?: boolean | Eleitor$MidiasSociaisEleitorArgs<ExtArgs>
    DadosPessoaisEleitor?: boolean | Eleitor$DadosPessoaisEleitorArgs<ExtArgs>
    EnderecoEleitor?: boolean | Eleitor$EnderecoEleitorArgs<ExtArgs>
    atendimento?: boolean | Eleitor$atendimentoArgs<ExtArgs>
    _count?: boolean | EleitorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eleitor"]>

  export type EleitorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    nomeCompleto?: boolean
    nomeMae?: boolean
    sexo?: boolean
    cpf?: boolean
    rg?: boolean
    coligacaoUuid?: boolean
    dataNascimento?: boolean
    indicado_por?: boolean
    candidatoUuid?: boolean
    usuarioUuid?: boolean
    sessaoEleitoral?: boolean
    classificacaoId?: boolean
    created_at?: boolean
    Formiguinha?: boolean | Eleitor$FormiguinhaArgs<ExtArgs>
    sessaoeleitoral?: boolean | Eleitor$sessaoeleitoralArgs<ExtArgs>
    criado_por?: boolean | Eleitor$criado_porArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    classificacao?: boolean | Eleitor$classificacaoArgs<ExtArgs>
    coligacao?: boolean | Eleitor$coligacaoArgs<ExtArgs>
  }, ExtArgs["result"]["eleitor"]>

  export type EleitorSelectScalar = {
    uuid?: boolean
    nomeCompleto?: boolean
    nomeMae?: boolean
    sexo?: boolean
    cpf?: boolean
    rg?: boolean
    coligacaoUuid?: boolean
    dataNascimento?: boolean
    indicado_por?: boolean
    candidatoUuid?: boolean
    usuarioUuid?: boolean
    sessaoEleitoral?: boolean
    classificacaoId?: boolean
    created_at?: boolean
  }

  export type EleitorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Formiguinha?: boolean | Eleitor$FormiguinhaArgs<ExtArgs>
    sessaoeleitoral?: boolean | Eleitor$sessaoeleitoralArgs<ExtArgs>
    criado_por?: boolean | Eleitor$criado_porArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    classificacao?: boolean | Eleitor$classificacaoArgs<ExtArgs>
    coligacao?: boolean | Eleitor$coligacaoArgs<ExtArgs>
    Indicacoes?: boolean | Eleitor$IndicacoesArgs<ExtArgs>
    contatoEleitor?: boolean | Eleitor$contatoEleitorArgs<ExtArgs>
    MidiasSociaisEleitor?: boolean | Eleitor$MidiasSociaisEleitorArgs<ExtArgs>
    DadosPessoaisEleitor?: boolean | Eleitor$DadosPessoaisEleitorArgs<ExtArgs>
    EnderecoEleitor?: boolean | Eleitor$EnderecoEleitorArgs<ExtArgs>
    atendimento?: boolean | Eleitor$atendimentoArgs<ExtArgs>
    _count?: boolean | EleitorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EleitorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Formiguinha?: boolean | Eleitor$FormiguinhaArgs<ExtArgs>
    sessaoeleitoral?: boolean | Eleitor$sessaoeleitoralArgs<ExtArgs>
    criado_por?: boolean | Eleitor$criado_porArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    classificacao?: boolean | Eleitor$classificacaoArgs<ExtArgs>
    coligacao?: boolean | Eleitor$coligacaoArgs<ExtArgs>
  }

  export type $EleitorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Eleitor"
    objects: {
      Formiguinha: Prisma.$EleitorPayload<ExtArgs> | null
      sessaoeleitoral: Prisma.$LocalVotacaoPayload<ExtArgs> | null
      criado_por: Prisma.$UsuarioPayload<ExtArgs> | null
      candidato: Prisma.$CandidatoPayload<ExtArgs>
      classificacao: Prisma.$classificacaoPayload<ExtArgs> | null
      coligacao: Prisma.$coligacaoPayload<ExtArgs> | null
      Indicacoes: Prisma.$EleitorPayload<ExtArgs>[]
      contatoEleitor: Prisma.$contatoEleitorPayload<ExtArgs>[]
      MidiasSociaisEleitor: Prisma.$MidiasSociaisEleitorPayload<ExtArgs>[]
      DadosPessoaisEleitor: Prisma.$DadosPessoaisEleitorPayload<ExtArgs>[]
      EnderecoEleitor: Prisma.$EnderecoEleitorPayload<ExtArgs>[]
      atendimento: Prisma.$atendimentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      nomeCompleto: string
      nomeMae: string
      sexo: string
      cpf: string
      rg: string
      coligacaoUuid: string | null
      dataNascimento: Date | null
      indicado_por: string | null
      candidatoUuid: string
      usuarioUuid: string | null
      sessaoEleitoral: number | null
      classificacaoId: number | null
      created_at: Date
    }, ExtArgs["result"]["eleitor"]>
    composites: {}
  }

  type EleitorGetPayload<S extends boolean | null | undefined | EleitorDefaultArgs> = $Result.GetResult<Prisma.$EleitorPayload, S>

  type EleitorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EleitorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EleitorCountAggregateInputType | true
    }

  export interface EleitorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Eleitor'], meta: { name: 'Eleitor' } }
    /**
     * Find zero or one Eleitor that matches the filter.
     * @param {EleitorFindUniqueArgs} args - Arguments to find a Eleitor
     * @example
     * // Get one Eleitor
     * const eleitor = await prisma.eleitor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EleitorFindUniqueArgs>(args: SelectSubset<T, EleitorFindUniqueArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Eleitor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EleitorFindUniqueOrThrowArgs} args - Arguments to find a Eleitor
     * @example
     * // Get one Eleitor
     * const eleitor = await prisma.eleitor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EleitorFindUniqueOrThrowArgs>(args: SelectSubset<T, EleitorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Eleitor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorFindFirstArgs} args - Arguments to find a Eleitor
     * @example
     * // Get one Eleitor
     * const eleitor = await prisma.eleitor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EleitorFindFirstArgs>(args?: SelectSubset<T, EleitorFindFirstArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Eleitor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorFindFirstOrThrowArgs} args - Arguments to find a Eleitor
     * @example
     * // Get one Eleitor
     * const eleitor = await prisma.eleitor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EleitorFindFirstOrThrowArgs>(args?: SelectSubset<T, EleitorFindFirstOrThrowArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Eleitors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eleitors
     * const eleitors = await prisma.eleitor.findMany()
     * 
     * // Get first 10 Eleitors
     * const eleitors = await prisma.eleitor.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const eleitorWithUuidOnly = await prisma.eleitor.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends EleitorFindManyArgs>(args?: SelectSubset<T, EleitorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Eleitor.
     * @param {EleitorCreateArgs} args - Arguments to create a Eleitor.
     * @example
     * // Create one Eleitor
     * const Eleitor = await prisma.eleitor.create({
     *   data: {
     *     // ... data to create a Eleitor
     *   }
     * })
     * 
     */
    create<T extends EleitorCreateArgs>(args: SelectSubset<T, EleitorCreateArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Eleitors.
     * @param {EleitorCreateManyArgs} args - Arguments to create many Eleitors.
     * @example
     * // Create many Eleitors
     * const eleitor = await prisma.eleitor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EleitorCreateManyArgs>(args?: SelectSubset<T, EleitorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Eleitors and returns the data saved in the database.
     * @param {EleitorCreateManyAndReturnArgs} args - Arguments to create many Eleitors.
     * @example
     * // Create many Eleitors
     * const eleitor = await prisma.eleitor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Eleitors and only return the `uuid`
     * const eleitorWithUuidOnly = await prisma.eleitor.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EleitorCreateManyAndReturnArgs>(args?: SelectSubset<T, EleitorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Eleitor.
     * @param {EleitorDeleteArgs} args - Arguments to delete one Eleitor.
     * @example
     * // Delete one Eleitor
     * const Eleitor = await prisma.eleitor.delete({
     *   where: {
     *     // ... filter to delete one Eleitor
     *   }
     * })
     * 
     */
    delete<T extends EleitorDeleteArgs>(args: SelectSubset<T, EleitorDeleteArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Eleitor.
     * @param {EleitorUpdateArgs} args - Arguments to update one Eleitor.
     * @example
     * // Update one Eleitor
     * const eleitor = await prisma.eleitor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EleitorUpdateArgs>(args: SelectSubset<T, EleitorUpdateArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Eleitors.
     * @param {EleitorDeleteManyArgs} args - Arguments to filter Eleitors to delete.
     * @example
     * // Delete a few Eleitors
     * const { count } = await prisma.eleitor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EleitorDeleteManyArgs>(args?: SelectSubset<T, EleitorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eleitors
     * const eleitor = await prisma.eleitor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EleitorUpdateManyArgs>(args: SelectSubset<T, EleitorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Eleitor.
     * @param {EleitorUpsertArgs} args - Arguments to update or create a Eleitor.
     * @example
     * // Update or create a Eleitor
     * const eleitor = await prisma.eleitor.upsert({
     *   create: {
     *     // ... data to create a Eleitor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Eleitor we want to update
     *   }
     * })
     */
    upsert<T extends EleitorUpsertArgs>(args: SelectSubset<T, EleitorUpsertArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Eleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorCountArgs} args - Arguments to filter Eleitors to count.
     * @example
     * // Count the number of Eleitors
     * const count = await prisma.eleitor.count({
     *   where: {
     *     // ... the filter for the Eleitors we want to count
     *   }
     * })
    **/
    count<T extends EleitorCountArgs>(
      args?: Subset<T, EleitorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EleitorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Eleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EleitorAggregateArgs>(args: Subset<T, EleitorAggregateArgs>): Prisma.PrismaPromise<GetEleitorAggregateType<T>>

    /**
     * Group by Eleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleitorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EleitorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EleitorGroupByArgs['orderBy'] }
        : { orderBy?: EleitorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EleitorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEleitorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Eleitor model
   */
  readonly fields: EleitorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Eleitor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EleitorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Formiguinha<T extends Eleitor$FormiguinhaArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$FormiguinhaArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sessaoeleitoral<T extends Eleitor$sessaoeleitoralArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$sessaoeleitoralArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    criado_por<T extends Eleitor$criado_porArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$criado_porArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    candidato<T extends CandidatoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidatoDefaultArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    classificacao<T extends Eleitor$classificacaoArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$classificacaoArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    coligacao<T extends Eleitor$coligacaoArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$coligacaoArgs<ExtArgs>>): Prisma__coligacaoClient<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    Indicacoes<T extends Eleitor$IndicacoesArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$IndicacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany"> | Null>
    contatoEleitor<T extends Eleitor$contatoEleitorArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$contatoEleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "findMany"> | Null>
    MidiasSociaisEleitor<T extends Eleitor$MidiasSociaisEleitorArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$MidiasSociaisEleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "findMany"> | Null>
    DadosPessoaisEleitor<T extends Eleitor$DadosPessoaisEleitorArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$DadosPessoaisEleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "findMany"> | Null>
    EnderecoEleitor<T extends Eleitor$EnderecoEleitorArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$EnderecoEleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "findMany"> | Null>
    atendimento<T extends Eleitor$atendimentoArgs<ExtArgs> = {}>(args?: Subset<T, Eleitor$atendimentoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Eleitor model
   */ 
  interface EleitorFieldRefs {
    readonly uuid: FieldRef<"Eleitor", 'String'>
    readonly nomeCompleto: FieldRef<"Eleitor", 'String'>
    readonly nomeMae: FieldRef<"Eleitor", 'String'>
    readonly sexo: FieldRef<"Eleitor", 'String'>
    readonly cpf: FieldRef<"Eleitor", 'String'>
    readonly rg: FieldRef<"Eleitor", 'String'>
    readonly coligacaoUuid: FieldRef<"Eleitor", 'String'>
    readonly dataNascimento: FieldRef<"Eleitor", 'DateTime'>
    readonly indicado_por: FieldRef<"Eleitor", 'String'>
    readonly candidatoUuid: FieldRef<"Eleitor", 'String'>
    readonly usuarioUuid: FieldRef<"Eleitor", 'String'>
    readonly sessaoEleitoral: FieldRef<"Eleitor", 'Int'>
    readonly classificacaoId: FieldRef<"Eleitor", 'Int'>
    readonly created_at: FieldRef<"Eleitor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Eleitor findUnique
   */
  export type EleitorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * Filter, which Eleitor to fetch.
     */
    where: EleitorWhereUniqueInput
  }

  /**
   * Eleitor findUniqueOrThrow
   */
  export type EleitorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * Filter, which Eleitor to fetch.
     */
    where: EleitorWhereUniqueInput
  }

  /**
   * Eleitor findFirst
   */
  export type EleitorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * Filter, which Eleitor to fetch.
     */
    where?: EleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleitors to fetch.
     */
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eleitors.
     */
    cursor?: EleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eleitors.
     */
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * Eleitor findFirstOrThrow
   */
  export type EleitorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * Filter, which Eleitor to fetch.
     */
    where?: EleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleitors to fetch.
     */
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eleitors.
     */
    cursor?: EleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eleitors.
     */
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * Eleitor findMany
   */
  export type EleitorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * Filter, which Eleitors to fetch.
     */
    where?: EleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleitors to fetch.
     */
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Eleitors.
     */
    cursor?: EleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleitors.
     */
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * Eleitor create
   */
  export type EleitorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * The data needed to create a Eleitor.
     */
    data: XOR<EleitorCreateInput, EleitorUncheckedCreateInput>
  }

  /**
   * Eleitor createMany
   */
  export type EleitorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Eleitors.
     */
    data: EleitorCreateManyInput | EleitorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Eleitor createManyAndReturn
   */
  export type EleitorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Eleitors.
     */
    data: EleitorCreateManyInput | EleitorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Eleitor update
   */
  export type EleitorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * The data needed to update a Eleitor.
     */
    data: XOR<EleitorUpdateInput, EleitorUncheckedUpdateInput>
    /**
     * Choose, which Eleitor to update.
     */
    where: EleitorWhereUniqueInput
  }

  /**
   * Eleitor updateMany
   */
  export type EleitorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Eleitors.
     */
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyInput>
    /**
     * Filter which Eleitors to update
     */
    where?: EleitorWhereInput
  }

  /**
   * Eleitor upsert
   */
  export type EleitorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * The filter to search for the Eleitor to update in case it exists.
     */
    where: EleitorWhereUniqueInput
    /**
     * In case the Eleitor found by the `where` argument doesn't exist, create a new Eleitor with this data.
     */
    create: XOR<EleitorCreateInput, EleitorUncheckedCreateInput>
    /**
     * In case the Eleitor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EleitorUpdateInput, EleitorUncheckedUpdateInput>
  }

  /**
   * Eleitor delete
   */
  export type EleitorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    /**
     * Filter which Eleitor to delete.
     */
    where: EleitorWhereUniqueInput
  }

  /**
   * Eleitor deleteMany
   */
  export type EleitorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eleitors to delete
     */
    where?: EleitorWhereInput
  }

  /**
   * Eleitor.Formiguinha
   */
  export type Eleitor$FormiguinhaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
  }

  /**
   * Eleitor.sessaoeleitoral
   */
  export type Eleitor$sessaoeleitoralArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    where?: LocalVotacaoWhereInput
  }

  /**
   * Eleitor.criado_por
   */
  export type Eleitor$criado_porArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Eleitor.classificacao
   */
  export type Eleitor$classificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    where?: classificacaoWhereInput
  }

  /**
   * Eleitor.coligacao
   */
  export type Eleitor$coligacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    where?: coligacaoWhereInput
  }

  /**
   * Eleitor.Indicacoes
   */
  export type Eleitor$IndicacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    cursor?: EleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * Eleitor.contatoEleitor
   */
  export type Eleitor$contatoEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    where?: contatoEleitorWhereInput
    orderBy?: contatoEleitorOrderByWithRelationInput | contatoEleitorOrderByWithRelationInput[]
    cursor?: contatoEleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContatoEleitorScalarFieldEnum | ContatoEleitorScalarFieldEnum[]
  }

  /**
   * Eleitor.MidiasSociaisEleitor
   */
  export type Eleitor$MidiasSociaisEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    where?: MidiasSociaisEleitorWhereInput
    orderBy?: MidiasSociaisEleitorOrderByWithRelationInput | MidiasSociaisEleitorOrderByWithRelationInput[]
    cursor?: MidiasSociaisEleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MidiasSociaisEleitorScalarFieldEnum | MidiasSociaisEleitorScalarFieldEnum[]
  }

  /**
   * Eleitor.DadosPessoaisEleitor
   */
  export type Eleitor$DadosPessoaisEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    where?: DadosPessoaisEleitorWhereInput
    orderBy?: DadosPessoaisEleitorOrderByWithRelationInput | DadosPessoaisEleitorOrderByWithRelationInput[]
    cursor?: DadosPessoaisEleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DadosPessoaisEleitorScalarFieldEnum | DadosPessoaisEleitorScalarFieldEnum[]
  }

  /**
   * Eleitor.EnderecoEleitor
   */
  export type Eleitor$EnderecoEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    where?: EnderecoEleitorWhereInput
    orderBy?: EnderecoEleitorOrderByWithRelationInput | EnderecoEleitorOrderByWithRelationInput[]
    cursor?: EnderecoEleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnderecoEleitorScalarFieldEnum | EnderecoEleitorScalarFieldEnum[]
  }

  /**
   * Eleitor.atendimento
   */
  export type Eleitor$atendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    where?: atendimentoWhereInput
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    cursor?: atendimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * Eleitor without action
   */
  export type EleitorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
  }


  /**
   * Model contatoEleitor
   */

  export type AggregateContatoEleitor = {
    _count: ContatoEleitorCountAggregateOutputType | null
    _min: ContatoEleitorMinAggregateOutputType | null
    _max: ContatoEleitorMaxAggregateOutputType | null
  }

  export type ContatoEleitorMinAggregateOutputType = {
    uuid: string | null
    email: string | null
    celular: string | null
    eleitorUuid: string | null
  }

  export type ContatoEleitorMaxAggregateOutputType = {
    uuid: string | null
    email: string | null
    celular: string | null
    eleitorUuid: string | null
  }

  export type ContatoEleitorCountAggregateOutputType = {
    uuid: number
    email: number
    celular: number
    eleitorUuid: number
    _all: number
  }


  export type ContatoEleitorMinAggregateInputType = {
    uuid?: true
    email?: true
    celular?: true
    eleitorUuid?: true
  }

  export type ContatoEleitorMaxAggregateInputType = {
    uuid?: true
    email?: true
    celular?: true
    eleitorUuid?: true
  }

  export type ContatoEleitorCountAggregateInputType = {
    uuid?: true
    email?: true
    celular?: true
    eleitorUuid?: true
    _all?: true
  }

  export type ContatoEleitorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contatoEleitor to aggregate.
     */
    where?: contatoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contatoEleitors to fetch.
     */
    orderBy?: contatoEleitorOrderByWithRelationInput | contatoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: contatoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contatoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contatoEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned contatoEleitors
    **/
    _count?: true | ContatoEleitorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContatoEleitorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContatoEleitorMaxAggregateInputType
  }

  export type GetContatoEleitorAggregateType<T extends ContatoEleitorAggregateArgs> = {
        [P in keyof T & keyof AggregateContatoEleitor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContatoEleitor[P]>
      : GetScalarType<T[P], AggregateContatoEleitor[P]>
  }




  export type contatoEleitorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: contatoEleitorWhereInput
    orderBy?: contatoEleitorOrderByWithAggregationInput | contatoEleitorOrderByWithAggregationInput[]
    by: ContatoEleitorScalarFieldEnum[] | ContatoEleitorScalarFieldEnum
    having?: contatoEleitorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContatoEleitorCountAggregateInputType | true
    _min?: ContatoEleitorMinAggregateInputType
    _max?: ContatoEleitorMaxAggregateInputType
  }

  export type ContatoEleitorGroupByOutputType = {
    uuid: string
    email: string
    celular: string
    eleitorUuid: string
    _count: ContatoEleitorCountAggregateOutputType | null
    _min: ContatoEleitorMinAggregateOutputType | null
    _max: ContatoEleitorMaxAggregateOutputType | null
  }

  type GetContatoEleitorGroupByPayload<T extends contatoEleitorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContatoEleitorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContatoEleitorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContatoEleitorGroupByOutputType[P]>
            : GetScalarType<T[P], ContatoEleitorGroupByOutputType[P]>
        }
      >
    >


  export type contatoEleitorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    email?: boolean
    celular?: boolean
    eleitorUuid?: boolean
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contatoEleitor"]>

  export type contatoEleitorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    email?: boolean
    celular?: boolean
    eleitorUuid?: boolean
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contatoEleitor"]>

  export type contatoEleitorSelectScalar = {
    uuid?: boolean
    email?: boolean
    celular?: boolean
    eleitorUuid?: boolean
  }

  export type contatoEleitorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }
  export type contatoEleitorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }

  export type $contatoEleitorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "contatoEleitor"
    objects: {
      Eleitor: Prisma.$EleitorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      email: string
      celular: string
      eleitorUuid: string
    }, ExtArgs["result"]["contatoEleitor"]>
    composites: {}
  }

  type contatoEleitorGetPayload<S extends boolean | null | undefined | contatoEleitorDefaultArgs> = $Result.GetResult<Prisma.$contatoEleitorPayload, S>

  type contatoEleitorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<contatoEleitorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ContatoEleitorCountAggregateInputType | true
    }

  export interface contatoEleitorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['contatoEleitor'], meta: { name: 'contatoEleitor' } }
    /**
     * Find zero or one ContatoEleitor that matches the filter.
     * @param {contatoEleitorFindUniqueArgs} args - Arguments to find a ContatoEleitor
     * @example
     * // Get one ContatoEleitor
     * const contatoEleitor = await prisma.contatoEleitor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends contatoEleitorFindUniqueArgs>(args: SelectSubset<T, contatoEleitorFindUniqueArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ContatoEleitor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {contatoEleitorFindUniqueOrThrowArgs} args - Arguments to find a ContatoEleitor
     * @example
     * // Get one ContatoEleitor
     * const contatoEleitor = await prisma.contatoEleitor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends contatoEleitorFindUniqueOrThrowArgs>(args: SelectSubset<T, contatoEleitorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ContatoEleitor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contatoEleitorFindFirstArgs} args - Arguments to find a ContatoEleitor
     * @example
     * // Get one ContatoEleitor
     * const contatoEleitor = await prisma.contatoEleitor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends contatoEleitorFindFirstArgs>(args?: SelectSubset<T, contatoEleitorFindFirstArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ContatoEleitor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contatoEleitorFindFirstOrThrowArgs} args - Arguments to find a ContatoEleitor
     * @example
     * // Get one ContatoEleitor
     * const contatoEleitor = await prisma.contatoEleitor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends contatoEleitorFindFirstOrThrowArgs>(args?: SelectSubset<T, contatoEleitorFindFirstOrThrowArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ContatoEleitors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contatoEleitorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ContatoEleitors
     * const contatoEleitors = await prisma.contatoEleitor.findMany()
     * 
     * // Get first 10 ContatoEleitors
     * const contatoEleitors = await prisma.contatoEleitor.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const contatoEleitorWithUuidOnly = await prisma.contatoEleitor.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends contatoEleitorFindManyArgs>(args?: SelectSubset<T, contatoEleitorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ContatoEleitor.
     * @param {contatoEleitorCreateArgs} args - Arguments to create a ContatoEleitor.
     * @example
     * // Create one ContatoEleitor
     * const ContatoEleitor = await prisma.contatoEleitor.create({
     *   data: {
     *     // ... data to create a ContatoEleitor
     *   }
     * })
     * 
     */
    create<T extends contatoEleitorCreateArgs>(args: SelectSubset<T, contatoEleitorCreateArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ContatoEleitors.
     * @param {contatoEleitorCreateManyArgs} args - Arguments to create many ContatoEleitors.
     * @example
     * // Create many ContatoEleitors
     * const contatoEleitor = await prisma.contatoEleitor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends contatoEleitorCreateManyArgs>(args?: SelectSubset<T, contatoEleitorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ContatoEleitors and returns the data saved in the database.
     * @param {contatoEleitorCreateManyAndReturnArgs} args - Arguments to create many ContatoEleitors.
     * @example
     * // Create many ContatoEleitors
     * const contatoEleitor = await prisma.contatoEleitor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ContatoEleitors and only return the `uuid`
     * const contatoEleitorWithUuidOnly = await prisma.contatoEleitor.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends contatoEleitorCreateManyAndReturnArgs>(args?: SelectSubset<T, contatoEleitorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ContatoEleitor.
     * @param {contatoEleitorDeleteArgs} args - Arguments to delete one ContatoEleitor.
     * @example
     * // Delete one ContatoEleitor
     * const ContatoEleitor = await prisma.contatoEleitor.delete({
     *   where: {
     *     // ... filter to delete one ContatoEleitor
     *   }
     * })
     * 
     */
    delete<T extends contatoEleitorDeleteArgs>(args: SelectSubset<T, contatoEleitorDeleteArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ContatoEleitor.
     * @param {contatoEleitorUpdateArgs} args - Arguments to update one ContatoEleitor.
     * @example
     * // Update one ContatoEleitor
     * const contatoEleitor = await prisma.contatoEleitor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends contatoEleitorUpdateArgs>(args: SelectSubset<T, contatoEleitorUpdateArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ContatoEleitors.
     * @param {contatoEleitorDeleteManyArgs} args - Arguments to filter ContatoEleitors to delete.
     * @example
     * // Delete a few ContatoEleitors
     * const { count } = await prisma.contatoEleitor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends contatoEleitorDeleteManyArgs>(args?: SelectSubset<T, contatoEleitorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ContatoEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contatoEleitorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ContatoEleitors
     * const contatoEleitor = await prisma.contatoEleitor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends contatoEleitorUpdateManyArgs>(args: SelectSubset<T, contatoEleitorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ContatoEleitor.
     * @param {contatoEleitorUpsertArgs} args - Arguments to update or create a ContatoEleitor.
     * @example
     * // Update or create a ContatoEleitor
     * const contatoEleitor = await prisma.contatoEleitor.upsert({
     *   create: {
     *     // ... data to create a ContatoEleitor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ContatoEleitor we want to update
     *   }
     * })
     */
    upsert<T extends contatoEleitorUpsertArgs>(args: SelectSubset<T, contatoEleitorUpsertArgs<ExtArgs>>): Prisma__contatoEleitorClient<$Result.GetResult<Prisma.$contatoEleitorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ContatoEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contatoEleitorCountArgs} args - Arguments to filter ContatoEleitors to count.
     * @example
     * // Count the number of ContatoEleitors
     * const count = await prisma.contatoEleitor.count({
     *   where: {
     *     // ... the filter for the ContatoEleitors we want to count
     *   }
     * })
    **/
    count<T extends contatoEleitorCountArgs>(
      args?: Subset<T, contatoEleitorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContatoEleitorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ContatoEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContatoEleitorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContatoEleitorAggregateArgs>(args: Subset<T, ContatoEleitorAggregateArgs>): Prisma.PrismaPromise<GetContatoEleitorAggregateType<T>>

    /**
     * Group by ContatoEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {contatoEleitorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends contatoEleitorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: contatoEleitorGroupByArgs['orderBy'] }
        : { orderBy?: contatoEleitorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, contatoEleitorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContatoEleitorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the contatoEleitor model
   */
  readonly fields: contatoEleitorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for contatoEleitor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__contatoEleitorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Eleitor<T extends EleitorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EleitorDefaultArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the contatoEleitor model
   */ 
  interface contatoEleitorFieldRefs {
    readonly uuid: FieldRef<"contatoEleitor", 'String'>
    readonly email: FieldRef<"contatoEleitor", 'String'>
    readonly celular: FieldRef<"contatoEleitor", 'String'>
    readonly eleitorUuid: FieldRef<"contatoEleitor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * contatoEleitor findUnique
   */
  export type contatoEleitorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which contatoEleitor to fetch.
     */
    where: contatoEleitorWhereUniqueInput
  }

  /**
   * contatoEleitor findUniqueOrThrow
   */
  export type contatoEleitorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which contatoEleitor to fetch.
     */
    where: contatoEleitorWhereUniqueInput
  }

  /**
   * contatoEleitor findFirst
   */
  export type contatoEleitorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which contatoEleitor to fetch.
     */
    where?: contatoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contatoEleitors to fetch.
     */
    orderBy?: contatoEleitorOrderByWithRelationInput | contatoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contatoEleitors.
     */
    cursor?: contatoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contatoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contatoEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contatoEleitors.
     */
    distinct?: ContatoEleitorScalarFieldEnum | ContatoEleitorScalarFieldEnum[]
  }

  /**
   * contatoEleitor findFirstOrThrow
   */
  export type contatoEleitorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which contatoEleitor to fetch.
     */
    where?: contatoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contatoEleitors to fetch.
     */
    orderBy?: contatoEleitorOrderByWithRelationInput | contatoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for contatoEleitors.
     */
    cursor?: contatoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contatoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contatoEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of contatoEleitors.
     */
    distinct?: ContatoEleitorScalarFieldEnum | ContatoEleitorScalarFieldEnum[]
  }

  /**
   * contatoEleitor findMany
   */
  export type contatoEleitorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which contatoEleitors to fetch.
     */
    where?: contatoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of contatoEleitors to fetch.
     */
    orderBy?: contatoEleitorOrderByWithRelationInput | contatoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing contatoEleitors.
     */
    cursor?: contatoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` contatoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` contatoEleitors.
     */
    skip?: number
    distinct?: ContatoEleitorScalarFieldEnum | ContatoEleitorScalarFieldEnum[]
  }

  /**
   * contatoEleitor create
   */
  export type contatoEleitorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * The data needed to create a contatoEleitor.
     */
    data: XOR<contatoEleitorCreateInput, contatoEleitorUncheckedCreateInput>
  }

  /**
   * contatoEleitor createMany
   */
  export type contatoEleitorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many contatoEleitors.
     */
    data: contatoEleitorCreateManyInput | contatoEleitorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * contatoEleitor createManyAndReturn
   */
  export type contatoEleitorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many contatoEleitors.
     */
    data: contatoEleitorCreateManyInput | contatoEleitorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * contatoEleitor update
   */
  export type contatoEleitorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * The data needed to update a contatoEleitor.
     */
    data: XOR<contatoEleitorUpdateInput, contatoEleitorUncheckedUpdateInput>
    /**
     * Choose, which contatoEleitor to update.
     */
    where: contatoEleitorWhereUniqueInput
  }

  /**
   * contatoEleitor updateMany
   */
  export type contatoEleitorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update contatoEleitors.
     */
    data: XOR<contatoEleitorUpdateManyMutationInput, contatoEleitorUncheckedUpdateManyInput>
    /**
     * Filter which contatoEleitors to update
     */
    where?: contatoEleitorWhereInput
  }

  /**
   * contatoEleitor upsert
   */
  export type contatoEleitorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * The filter to search for the contatoEleitor to update in case it exists.
     */
    where: contatoEleitorWhereUniqueInput
    /**
     * In case the contatoEleitor found by the `where` argument doesn't exist, create a new contatoEleitor with this data.
     */
    create: XOR<contatoEleitorCreateInput, contatoEleitorUncheckedCreateInput>
    /**
     * In case the contatoEleitor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<contatoEleitorUpdateInput, contatoEleitorUncheckedUpdateInput>
  }

  /**
   * contatoEleitor delete
   */
  export type contatoEleitorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
    /**
     * Filter which contatoEleitor to delete.
     */
    where: contatoEleitorWhereUniqueInput
  }

  /**
   * contatoEleitor deleteMany
   */
  export type contatoEleitorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which contatoEleitors to delete
     */
    where?: contatoEleitorWhereInput
  }

  /**
   * contatoEleitor without action
   */
  export type contatoEleitorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the contatoEleitor
     */
    select?: contatoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: contatoEleitorInclude<ExtArgs> | null
  }


  /**
   * Model MidiasSociaisEleitor
   */

  export type AggregateMidiasSociaisEleitor = {
    _count: MidiasSociaisEleitorCountAggregateOutputType | null
    _min: MidiasSociaisEleitorMinAggregateOutputType | null
    _max: MidiasSociaisEleitorMaxAggregateOutputType | null
  }

  export type MidiasSociaisEleitorMinAggregateOutputType = {
    uuid: string | null
    instagram: string | null
    facebook: string | null
    twitter: string | null
    tiktok: string | null
    eleitorUuid: string | null
  }

  export type MidiasSociaisEleitorMaxAggregateOutputType = {
    uuid: string | null
    instagram: string | null
    facebook: string | null
    twitter: string | null
    tiktok: string | null
    eleitorUuid: string | null
  }

  export type MidiasSociaisEleitorCountAggregateOutputType = {
    uuid: number
    instagram: number
    facebook: number
    twitter: number
    tiktok: number
    eleitorUuid: number
    _all: number
  }


  export type MidiasSociaisEleitorMinAggregateInputType = {
    uuid?: true
    instagram?: true
    facebook?: true
    twitter?: true
    tiktok?: true
    eleitorUuid?: true
  }

  export type MidiasSociaisEleitorMaxAggregateInputType = {
    uuid?: true
    instagram?: true
    facebook?: true
    twitter?: true
    tiktok?: true
    eleitorUuid?: true
  }

  export type MidiasSociaisEleitorCountAggregateInputType = {
    uuid?: true
    instagram?: true
    facebook?: true
    twitter?: true
    tiktok?: true
    eleitorUuid?: true
    _all?: true
  }

  export type MidiasSociaisEleitorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MidiasSociaisEleitor to aggregate.
     */
    where?: MidiasSociaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MidiasSociaisEleitors to fetch.
     */
    orderBy?: MidiasSociaisEleitorOrderByWithRelationInput | MidiasSociaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MidiasSociaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MidiasSociaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MidiasSociaisEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MidiasSociaisEleitors
    **/
    _count?: true | MidiasSociaisEleitorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MidiasSociaisEleitorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MidiasSociaisEleitorMaxAggregateInputType
  }

  export type GetMidiasSociaisEleitorAggregateType<T extends MidiasSociaisEleitorAggregateArgs> = {
        [P in keyof T & keyof AggregateMidiasSociaisEleitor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMidiasSociaisEleitor[P]>
      : GetScalarType<T[P], AggregateMidiasSociaisEleitor[P]>
  }




  export type MidiasSociaisEleitorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MidiasSociaisEleitorWhereInput
    orderBy?: MidiasSociaisEleitorOrderByWithAggregationInput | MidiasSociaisEleitorOrderByWithAggregationInput[]
    by: MidiasSociaisEleitorScalarFieldEnum[] | MidiasSociaisEleitorScalarFieldEnum
    having?: MidiasSociaisEleitorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MidiasSociaisEleitorCountAggregateInputType | true
    _min?: MidiasSociaisEleitorMinAggregateInputType
    _max?: MidiasSociaisEleitorMaxAggregateInputType
  }

  export type MidiasSociaisEleitorGroupByOutputType = {
    uuid: string
    instagram: string | null
    facebook: string | null
    twitter: string | null
    tiktok: string | null
    eleitorUuid: string
    _count: MidiasSociaisEleitorCountAggregateOutputType | null
    _min: MidiasSociaisEleitorMinAggregateOutputType | null
    _max: MidiasSociaisEleitorMaxAggregateOutputType | null
  }

  type GetMidiasSociaisEleitorGroupByPayload<T extends MidiasSociaisEleitorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MidiasSociaisEleitorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MidiasSociaisEleitorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MidiasSociaisEleitorGroupByOutputType[P]>
            : GetScalarType<T[P], MidiasSociaisEleitorGroupByOutputType[P]>
        }
      >
    >


  export type MidiasSociaisEleitorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    instagram?: boolean
    facebook?: boolean
    twitter?: boolean
    tiktok?: boolean
    eleitorUuid?: boolean
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["midiasSociaisEleitor"]>

  export type MidiasSociaisEleitorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    instagram?: boolean
    facebook?: boolean
    twitter?: boolean
    tiktok?: boolean
    eleitorUuid?: boolean
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["midiasSociaisEleitor"]>

  export type MidiasSociaisEleitorSelectScalar = {
    uuid?: boolean
    instagram?: boolean
    facebook?: boolean
    twitter?: boolean
    tiktok?: boolean
    eleitorUuid?: boolean
  }

  export type MidiasSociaisEleitorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }
  export type MidiasSociaisEleitorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }

  export type $MidiasSociaisEleitorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MidiasSociaisEleitor"
    objects: {
      Eleitor: Prisma.$EleitorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      instagram: string | null
      facebook: string | null
      twitter: string | null
      tiktok: string | null
      eleitorUuid: string
    }, ExtArgs["result"]["midiasSociaisEleitor"]>
    composites: {}
  }

  type MidiasSociaisEleitorGetPayload<S extends boolean | null | undefined | MidiasSociaisEleitorDefaultArgs> = $Result.GetResult<Prisma.$MidiasSociaisEleitorPayload, S>

  type MidiasSociaisEleitorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MidiasSociaisEleitorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MidiasSociaisEleitorCountAggregateInputType | true
    }

  export interface MidiasSociaisEleitorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MidiasSociaisEleitor'], meta: { name: 'MidiasSociaisEleitor' } }
    /**
     * Find zero or one MidiasSociaisEleitor that matches the filter.
     * @param {MidiasSociaisEleitorFindUniqueArgs} args - Arguments to find a MidiasSociaisEleitor
     * @example
     * // Get one MidiasSociaisEleitor
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MidiasSociaisEleitorFindUniqueArgs>(args: SelectSubset<T, MidiasSociaisEleitorFindUniqueArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MidiasSociaisEleitor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MidiasSociaisEleitorFindUniqueOrThrowArgs} args - Arguments to find a MidiasSociaisEleitor
     * @example
     * // Get one MidiasSociaisEleitor
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MidiasSociaisEleitorFindUniqueOrThrowArgs>(args: SelectSubset<T, MidiasSociaisEleitorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MidiasSociaisEleitor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorFindFirstArgs} args - Arguments to find a MidiasSociaisEleitor
     * @example
     * // Get one MidiasSociaisEleitor
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MidiasSociaisEleitorFindFirstArgs>(args?: SelectSubset<T, MidiasSociaisEleitorFindFirstArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MidiasSociaisEleitor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorFindFirstOrThrowArgs} args - Arguments to find a MidiasSociaisEleitor
     * @example
     * // Get one MidiasSociaisEleitor
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MidiasSociaisEleitorFindFirstOrThrowArgs>(args?: SelectSubset<T, MidiasSociaisEleitorFindFirstOrThrowArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MidiasSociaisEleitors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MidiasSociaisEleitors
     * const midiasSociaisEleitors = await prisma.midiasSociaisEleitor.findMany()
     * 
     * // Get first 10 MidiasSociaisEleitors
     * const midiasSociaisEleitors = await prisma.midiasSociaisEleitor.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const midiasSociaisEleitorWithUuidOnly = await prisma.midiasSociaisEleitor.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends MidiasSociaisEleitorFindManyArgs>(args?: SelectSubset<T, MidiasSociaisEleitorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MidiasSociaisEleitor.
     * @param {MidiasSociaisEleitorCreateArgs} args - Arguments to create a MidiasSociaisEleitor.
     * @example
     * // Create one MidiasSociaisEleitor
     * const MidiasSociaisEleitor = await prisma.midiasSociaisEleitor.create({
     *   data: {
     *     // ... data to create a MidiasSociaisEleitor
     *   }
     * })
     * 
     */
    create<T extends MidiasSociaisEleitorCreateArgs>(args: SelectSubset<T, MidiasSociaisEleitorCreateArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MidiasSociaisEleitors.
     * @param {MidiasSociaisEleitorCreateManyArgs} args - Arguments to create many MidiasSociaisEleitors.
     * @example
     * // Create many MidiasSociaisEleitors
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MidiasSociaisEleitorCreateManyArgs>(args?: SelectSubset<T, MidiasSociaisEleitorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MidiasSociaisEleitors and returns the data saved in the database.
     * @param {MidiasSociaisEleitorCreateManyAndReturnArgs} args - Arguments to create many MidiasSociaisEleitors.
     * @example
     * // Create many MidiasSociaisEleitors
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MidiasSociaisEleitors and only return the `uuid`
     * const midiasSociaisEleitorWithUuidOnly = await prisma.midiasSociaisEleitor.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MidiasSociaisEleitorCreateManyAndReturnArgs>(args?: SelectSubset<T, MidiasSociaisEleitorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MidiasSociaisEleitor.
     * @param {MidiasSociaisEleitorDeleteArgs} args - Arguments to delete one MidiasSociaisEleitor.
     * @example
     * // Delete one MidiasSociaisEleitor
     * const MidiasSociaisEleitor = await prisma.midiasSociaisEleitor.delete({
     *   where: {
     *     // ... filter to delete one MidiasSociaisEleitor
     *   }
     * })
     * 
     */
    delete<T extends MidiasSociaisEleitorDeleteArgs>(args: SelectSubset<T, MidiasSociaisEleitorDeleteArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MidiasSociaisEleitor.
     * @param {MidiasSociaisEleitorUpdateArgs} args - Arguments to update one MidiasSociaisEleitor.
     * @example
     * // Update one MidiasSociaisEleitor
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MidiasSociaisEleitorUpdateArgs>(args: SelectSubset<T, MidiasSociaisEleitorUpdateArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MidiasSociaisEleitors.
     * @param {MidiasSociaisEleitorDeleteManyArgs} args - Arguments to filter MidiasSociaisEleitors to delete.
     * @example
     * // Delete a few MidiasSociaisEleitors
     * const { count } = await prisma.midiasSociaisEleitor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MidiasSociaisEleitorDeleteManyArgs>(args?: SelectSubset<T, MidiasSociaisEleitorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MidiasSociaisEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MidiasSociaisEleitors
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MidiasSociaisEleitorUpdateManyArgs>(args: SelectSubset<T, MidiasSociaisEleitorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MidiasSociaisEleitor.
     * @param {MidiasSociaisEleitorUpsertArgs} args - Arguments to update or create a MidiasSociaisEleitor.
     * @example
     * // Update or create a MidiasSociaisEleitor
     * const midiasSociaisEleitor = await prisma.midiasSociaisEleitor.upsert({
     *   create: {
     *     // ... data to create a MidiasSociaisEleitor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MidiasSociaisEleitor we want to update
     *   }
     * })
     */
    upsert<T extends MidiasSociaisEleitorUpsertArgs>(args: SelectSubset<T, MidiasSociaisEleitorUpsertArgs<ExtArgs>>): Prisma__MidiasSociaisEleitorClient<$Result.GetResult<Prisma.$MidiasSociaisEleitorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MidiasSociaisEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorCountArgs} args - Arguments to filter MidiasSociaisEleitors to count.
     * @example
     * // Count the number of MidiasSociaisEleitors
     * const count = await prisma.midiasSociaisEleitor.count({
     *   where: {
     *     // ... the filter for the MidiasSociaisEleitors we want to count
     *   }
     * })
    **/
    count<T extends MidiasSociaisEleitorCountArgs>(
      args?: Subset<T, MidiasSociaisEleitorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MidiasSociaisEleitorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MidiasSociaisEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MidiasSociaisEleitorAggregateArgs>(args: Subset<T, MidiasSociaisEleitorAggregateArgs>): Prisma.PrismaPromise<GetMidiasSociaisEleitorAggregateType<T>>

    /**
     * Group by MidiasSociaisEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MidiasSociaisEleitorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MidiasSociaisEleitorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MidiasSociaisEleitorGroupByArgs['orderBy'] }
        : { orderBy?: MidiasSociaisEleitorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MidiasSociaisEleitorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMidiasSociaisEleitorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MidiasSociaisEleitor model
   */
  readonly fields: MidiasSociaisEleitorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MidiasSociaisEleitor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MidiasSociaisEleitorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Eleitor<T extends EleitorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EleitorDefaultArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MidiasSociaisEleitor model
   */ 
  interface MidiasSociaisEleitorFieldRefs {
    readonly uuid: FieldRef<"MidiasSociaisEleitor", 'String'>
    readonly instagram: FieldRef<"MidiasSociaisEleitor", 'String'>
    readonly facebook: FieldRef<"MidiasSociaisEleitor", 'String'>
    readonly twitter: FieldRef<"MidiasSociaisEleitor", 'String'>
    readonly tiktok: FieldRef<"MidiasSociaisEleitor", 'String'>
    readonly eleitorUuid: FieldRef<"MidiasSociaisEleitor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MidiasSociaisEleitor findUnique
   */
  export type MidiasSociaisEleitorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which MidiasSociaisEleitor to fetch.
     */
    where: MidiasSociaisEleitorWhereUniqueInput
  }

  /**
   * MidiasSociaisEleitor findUniqueOrThrow
   */
  export type MidiasSociaisEleitorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which MidiasSociaisEleitor to fetch.
     */
    where: MidiasSociaisEleitorWhereUniqueInput
  }

  /**
   * MidiasSociaisEleitor findFirst
   */
  export type MidiasSociaisEleitorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which MidiasSociaisEleitor to fetch.
     */
    where?: MidiasSociaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MidiasSociaisEleitors to fetch.
     */
    orderBy?: MidiasSociaisEleitorOrderByWithRelationInput | MidiasSociaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MidiasSociaisEleitors.
     */
    cursor?: MidiasSociaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MidiasSociaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MidiasSociaisEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MidiasSociaisEleitors.
     */
    distinct?: MidiasSociaisEleitorScalarFieldEnum | MidiasSociaisEleitorScalarFieldEnum[]
  }

  /**
   * MidiasSociaisEleitor findFirstOrThrow
   */
  export type MidiasSociaisEleitorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which MidiasSociaisEleitor to fetch.
     */
    where?: MidiasSociaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MidiasSociaisEleitors to fetch.
     */
    orderBy?: MidiasSociaisEleitorOrderByWithRelationInput | MidiasSociaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MidiasSociaisEleitors.
     */
    cursor?: MidiasSociaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MidiasSociaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MidiasSociaisEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MidiasSociaisEleitors.
     */
    distinct?: MidiasSociaisEleitorScalarFieldEnum | MidiasSociaisEleitorScalarFieldEnum[]
  }

  /**
   * MidiasSociaisEleitor findMany
   */
  export type MidiasSociaisEleitorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which MidiasSociaisEleitors to fetch.
     */
    where?: MidiasSociaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MidiasSociaisEleitors to fetch.
     */
    orderBy?: MidiasSociaisEleitorOrderByWithRelationInput | MidiasSociaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MidiasSociaisEleitors.
     */
    cursor?: MidiasSociaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MidiasSociaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MidiasSociaisEleitors.
     */
    skip?: number
    distinct?: MidiasSociaisEleitorScalarFieldEnum | MidiasSociaisEleitorScalarFieldEnum[]
  }

  /**
   * MidiasSociaisEleitor create
   */
  export type MidiasSociaisEleitorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * The data needed to create a MidiasSociaisEleitor.
     */
    data: XOR<MidiasSociaisEleitorCreateInput, MidiasSociaisEleitorUncheckedCreateInput>
  }

  /**
   * MidiasSociaisEleitor createMany
   */
  export type MidiasSociaisEleitorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MidiasSociaisEleitors.
     */
    data: MidiasSociaisEleitorCreateManyInput | MidiasSociaisEleitorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MidiasSociaisEleitor createManyAndReturn
   */
  export type MidiasSociaisEleitorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MidiasSociaisEleitors.
     */
    data: MidiasSociaisEleitorCreateManyInput | MidiasSociaisEleitorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MidiasSociaisEleitor update
   */
  export type MidiasSociaisEleitorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * The data needed to update a MidiasSociaisEleitor.
     */
    data: XOR<MidiasSociaisEleitorUpdateInput, MidiasSociaisEleitorUncheckedUpdateInput>
    /**
     * Choose, which MidiasSociaisEleitor to update.
     */
    where: MidiasSociaisEleitorWhereUniqueInput
  }

  /**
   * MidiasSociaisEleitor updateMany
   */
  export type MidiasSociaisEleitorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MidiasSociaisEleitors.
     */
    data: XOR<MidiasSociaisEleitorUpdateManyMutationInput, MidiasSociaisEleitorUncheckedUpdateManyInput>
    /**
     * Filter which MidiasSociaisEleitors to update
     */
    where?: MidiasSociaisEleitorWhereInput
  }

  /**
   * MidiasSociaisEleitor upsert
   */
  export type MidiasSociaisEleitorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * The filter to search for the MidiasSociaisEleitor to update in case it exists.
     */
    where: MidiasSociaisEleitorWhereUniqueInput
    /**
     * In case the MidiasSociaisEleitor found by the `where` argument doesn't exist, create a new MidiasSociaisEleitor with this data.
     */
    create: XOR<MidiasSociaisEleitorCreateInput, MidiasSociaisEleitorUncheckedCreateInput>
    /**
     * In case the MidiasSociaisEleitor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MidiasSociaisEleitorUpdateInput, MidiasSociaisEleitorUncheckedUpdateInput>
  }

  /**
   * MidiasSociaisEleitor delete
   */
  export type MidiasSociaisEleitorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
    /**
     * Filter which MidiasSociaisEleitor to delete.
     */
    where: MidiasSociaisEleitorWhereUniqueInput
  }

  /**
   * MidiasSociaisEleitor deleteMany
   */
  export type MidiasSociaisEleitorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MidiasSociaisEleitors to delete
     */
    where?: MidiasSociaisEleitorWhereInput
  }

  /**
   * MidiasSociaisEleitor without action
   */
  export type MidiasSociaisEleitorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MidiasSociaisEleitor
     */
    select?: MidiasSociaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MidiasSociaisEleitorInclude<ExtArgs> | null
  }


  /**
   * Model EnderecoEleitor
   */

  export type AggregateEnderecoEleitor = {
    _count: EnderecoEleitorCountAggregateOutputType | null
    _avg: EnderecoEleitorAvgAggregateOutputType | null
    _sum: EnderecoEleitorSumAggregateOutputType | null
    _min: EnderecoEleitorMinAggregateOutputType | null
    _max: EnderecoEleitorMaxAggregateOutputType | null
  }

  export type EnderecoEleitorAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type EnderecoEleitorSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type EnderecoEleitorMinAggregateOutputType = {
    uuid: string | null
    latitude: number | null
    longitude: number | null
    endereco: string | null
    nCasa: string | null
    cep: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    codIbge: string | null
    uf: string | null
    pais: string | null
    eleitorUuid: string | null
  }

  export type EnderecoEleitorMaxAggregateOutputType = {
    uuid: string | null
    latitude: number | null
    longitude: number | null
    endereco: string | null
    nCasa: string | null
    cep: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    codIbge: string | null
    uf: string | null
    pais: string | null
    eleitorUuid: string | null
  }

  export type EnderecoEleitorCountAggregateOutputType = {
    uuid: number
    latitude: number
    longitude: number
    endereco: number
    nCasa: number
    cep: number
    complemento: number
    bairro: number
    cidade: number
    codIbge: number
    uf: number
    pais: number
    eleitorUuid: number
    _all: number
  }


  export type EnderecoEleitorAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type EnderecoEleitorSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type EnderecoEleitorMinAggregateInputType = {
    uuid?: true
    latitude?: true
    longitude?: true
    endereco?: true
    nCasa?: true
    cep?: true
    complemento?: true
    bairro?: true
    cidade?: true
    codIbge?: true
    uf?: true
    pais?: true
    eleitorUuid?: true
  }

  export type EnderecoEleitorMaxAggregateInputType = {
    uuid?: true
    latitude?: true
    longitude?: true
    endereco?: true
    nCasa?: true
    cep?: true
    complemento?: true
    bairro?: true
    cidade?: true
    codIbge?: true
    uf?: true
    pais?: true
    eleitorUuid?: true
  }

  export type EnderecoEleitorCountAggregateInputType = {
    uuid?: true
    latitude?: true
    longitude?: true
    endereco?: true
    nCasa?: true
    cep?: true
    complemento?: true
    bairro?: true
    cidade?: true
    codIbge?: true
    uf?: true
    pais?: true
    eleitorUuid?: true
    _all?: true
  }

  export type EnderecoEleitorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnderecoEleitor to aggregate.
     */
    where?: EnderecoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoEleitors to fetch.
     */
    orderBy?: EnderecoEleitorOrderByWithRelationInput | EnderecoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnderecoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EnderecoEleitors
    **/
    _count?: true | EnderecoEleitorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EnderecoEleitorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EnderecoEleitorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnderecoEleitorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnderecoEleitorMaxAggregateInputType
  }

  export type GetEnderecoEleitorAggregateType<T extends EnderecoEleitorAggregateArgs> = {
        [P in keyof T & keyof AggregateEnderecoEleitor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEnderecoEleitor[P]>
      : GetScalarType<T[P], AggregateEnderecoEleitor[P]>
  }




  export type EnderecoEleitorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoEleitorWhereInput
    orderBy?: EnderecoEleitorOrderByWithAggregationInput | EnderecoEleitorOrderByWithAggregationInput[]
    by: EnderecoEleitorScalarFieldEnum[] | EnderecoEleitorScalarFieldEnum
    having?: EnderecoEleitorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnderecoEleitorCountAggregateInputType | true
    _avg?: EnderecoEleitorAvgAggregateInputType
    _sum?: EnderecoEleitorSumAggregateInputType
    _min?: EnderecoEleitorMinAggregateInputType
    _max?: EnderecoEleitorMaxAggregateInputType
  }

  export type EnderecoEleitorGroupByOutputType = {
    uuid: string
    latitude: number
    longitude: number
    endereco: string | null
    nCasa: string | null
    cep: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    codIbge: string | null
    uf: string | null
    pais: string | null
    eleitorUuid: string | null
    _count: EnderecoEleitorCountAggregateOutputType | null
    _avg: EnderecoEleitorAvgAggregateOutputType | null
    _sum: EnderecoEleitorSumAggregateOutputType | null
    _min: EnderecoEleitorMinAggregateOutputType | null
    _max: EnderecoEleitorMaxAggregateOutputType | null
  }

  type GetEnderecoEleitorGroupByPayload<T extends EnderecoEleitorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnderecoEleitorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnderecoEleitorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnderecoEleitorGroupByOutputType[P]>
            : GetScalarType<T[P], EnderecoEleitorGroupByOutputType[P]>
        }
      >
    >


  export type EnderecoEleitorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    latitude?: boolean
    longitude?: boolean
    endereco?: boolean
    nCasa?: boolean
    cep?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    codIbge?: boolean
    uf?: boolean
    pais?: boolean
    eleitorUuid?: boolean
    Eleitor?: boolean | EnderecoEleitor$EleitorArgs<ExtArgs>
  }, ExtArgs["result"]["enderecoEleitor"]>

  export type EnderecoEleitorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    latitude?: boolean
    longitude?: boolean
    endereco?: boolean
    nCasa?: boolean
    cep?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    codIbge?: boolean
    uf?: boolean
    pais?: boolean
    eleitorUuid?: boolean
    Eleitor?: boolean | EnderecoEleitor$EleitorArgs<ExtArgs>
  }, ExtArgs["result"]["enderecoEleitor"]>

  export type EnderecoEleitorSelectScalar = {
    uuid?: boolean
    latitude?: boolean
    longitude?: boolean
    endereco?: boolean
    nCasa?: boolean
    cep?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    codIbge?: boolean
    uf?: boolean
    pais?: boolean
    eleitorUuid?: boolean
  }

  export type EnderecoEleitorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eleitor?: boolean | EnderecoEleitor$EleitorArgs<ExtArgs>
  }
  export type EnderecoEleitorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Eleitor?: boolean | EnderecoEleitor$EleitorArgs<ExtArgs>
  }

  export type $EnderecoEleitorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EnderecoEleitor"
    objects: {
      Eleitor: Prisma.$EleitorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      latitude: number
      longitude: number
      endereco: string | null
      nCasa: string | null
      cep: string | null
      complemento: string | null
      bairro: string | null
      cidade: string | null
      codIbge: string | null
      uf: string | null
      pais: string | null
      eleitorUuid: string | null
    }, ExtArgs["result"]["enderecoEleitor"]>
    composites: {}
  }

  type EnderecoEleitorGetPayload<S extends boolean | null | undefined | EnderecoEleitorDefaultArgs> = $Result.GetResult<Prisma.$EnderecoEleitorPayload, S>

  type EnderecoEleitorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EnderecoEleitorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EnderecoEleitorCountAggregateInputType | true
    }

  export interface EnderecoEleitorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EnderecoEleitor'], meta: { name: 'EnderecoEleitor' } }
    /**
     * Find zero or one EnderecoEleitor that matches the filter.
     * @param {EnderecoEleitorFindUniqueArgs} args - Arguments to find a EnderecoEleitor
     * @example
     * // Get one EnderecoEleitor
     * const enderecoEleitor = await prisma.enderecoEleitor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnderecoEleitorFindUniqueArgs>(args: SelectSubset<T, EnderecoEleitorFindUniqueArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EnderecoEleitor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EnderecoEleitorFindUniqueOrThrowArgs} args - Arguments to find a EnderecoEleitor
     * @example
     * // Get one EnderecoEleitor
     * const enderecoEleitor = await prisma.enderecoEleitor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnderecoEleitorFindUniqueOrThrowArgs>(args: SelectSubset<T, EnderecoEleitorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EnderecoEleitor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorFindFirstArgs} args - Arguments to find a EnderecoEleitor
     * @example
     * // Get one EnderecoEleitor
     * const enderecoEleitor = await prisma.enderecoEleitor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnderecoEleitorFindFirstArgs>(args?: SelectSubset<T, EnderecoEleitorFindFirstArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EnderecoEleitor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorFindFirstOrThrowArgs} args - Arguments to find a EnderecoEleitor
     * @example
     * // Get one EnderecoEleitor
     * const enderecoEleitor = await prisma.enderecoEleitor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnderecoEleitorFindFirstOrThrowArgs>(args?: SelectSubset<T, EnderecoEleitorFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EnderecoEleitors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EnderecoEleitors
     * const enderecoEleitors = await prisma.enderecoEleitor.findMany()
     * 
     * // Get first 10 EnderecoEleitors
     * const enderecoEleitors = await prisma.enderecoEleitor.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const enderecoEleitorWithUuidOnly = await prisma.enderecoEleitor.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends EnderecoEleitorFindManyArgs>(args?: SelectSubset<T, EnderecoEleitorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EnderecoEleitor.
     * @param {EnderecoEleitorCreateArgs} args - Arguments to create a EnderecoEleitor.
     * @example
     * // Create one EnderecoEleitor
     * const EnderecoEleitor = await prisma.enderecoEleitor.create({
     *   data: {
     *     // ... data to create a EnderecoEleitor
     *   }
     * })
     * 
     */
    create<T extends EnderecoEleitorCreateArgs>(args: SelectSubset<T, EnderecoEleitorCreateArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EnderecoEleitors.
     * @param {EnderecoEleitorCreateManyArgs} args - Arguments to create many EnderecoEleitors.
     * @example
     * // Create many EnderecoEleitors
     * const enderecoEleitor = await prisma.enderecoEleitor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnderecoEleitorCreateManyArgs>(args?: SelectSubset<T, EnderecoEleitorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EnderecoEleitors and returns the data saved in the database.
     * @param {EnderecoEleitorCreateManyAndReturnArgs} args - Arguments to create many EnderecoEleitors.
     * @example
     * // Create many EnderecoEleitors
     * const enderecoEleitor = await prisma.enderecoEleitor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EnderecoEleitors and only return the `uuid`
     * const enderecoEleitorWithUuidOnly = await prisma.enderecoEleitor.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnderecoEleitorCreateManyAndReturnArgs>(args?: SelectSubset<T, EnderecoEleitorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EnderecoEleitor.
     * @param {EnderecoEleitorDeleteArgs} args - Arguments to delete one EnderecoEleitor.
     * @example
     * // Delete one EnderecoEleitor
     * const EnderecoEleitor = await prisma.enderecoEleitor.delete({
     *   where: {
     *     // ... filter to delete one EnderecoEleitor
     *   }
     * })
     * 
     */
    delete<T extends EnderecoEleitorDeleteArgs>(args: SelectSubset<T, EnderecoEleitorDeleteArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EnderecoEleitor.
     * @param {EnderecoEleitorUpdateArgs} args - Arguments to update one EnderecoEleitor.
     * @example
     * // Update one EnderecoEleitor
     * const enderecoEleitor = await prisma.enderecoEleitor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnderecoEleitorUpdateArgs>(args: SelectSubset<T, EnderecoEleitorUpdateArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EnderecoEleitors.
     * @param {EnderecoEleitorDeleteManyArgs} args - Arguments to filter EnderecoEleitors to delete.
     * @example
     * // Delete a few EnderecoEleitors
     * const { count } = await prisma.enderecoEleitor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnderecoEleitorDeleteManyArgs>(args?: SelectSubset<T, EnderecoEleitorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnderecoEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EnderecoEleitors
     * const enderecoEleitor = await prisma.enderecoEleitor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnderecoEleitorUpdateManyArgs>(args: SelectSubset<T, EnderecoEleitorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EnderecoEleitor.
     * @param {EnderecoEleitorUpsertArgs} args - Arguments to update or create a EnderecoEleitor.
     * @example
     * // Update or create a EnderecoEleitor
     * const enderecoEleitor = await prisma.enderecoEleitor.upsert({
     *   create: {
     *     // ... data to create a EnderecoEleitor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EnderecoEleitor we want to update
     *   }
     * })
     */
    upsert<T extends EnderecoEleitorUpsertArgs>(args: SelectSubset<T, EnderecoEleitorUpsertArgs<ExtArgs>>): Prisma__EnderecoEleitorClient<$Result.GetResult<Prisma.$EnderecoEleitorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EnderecoEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorCountArgs} args - Arguments to filter EnderecoEleitors to count.
     * @example
     * // Count the number of EnderecoEleitors
     * const count = await prisma.enderecoEleitor.count({
     *   where: {
     *     // ... the filter for the EnderecoEleitors we want to count
     *   }
     * })
    **/
    count<T extends EnderecoEleitorCountArgs>(
      args?: Subset<T, EnderecoEleitorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnderecoEleitorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EnderecoEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnderecoEleitorAggregateArgs>(args: Subset<T, EnderecoEleitorAggregateArgs>): Prisma.PrismaPromise<GetEnderecoEleitorAggregateType<T>>

    /**
     * Group by EnderecoEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoEleitorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnderecoEleitorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnderecoEleitorGroupByArgs['orderBy'] }
        : { orderBy?: EnderecoEleitorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnderecoEleitorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnderecoEleitorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EnderecoEleitor model
   */
  readonly fields: EnderecoEleitorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EnderecoEleitor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnderecoEleitorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Eleitor<T extends EnderecoEleitor$EleitorArgs<ExtArgs> = {}>(args?: Subset<T, EnderecoEleitor$EleitorArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EnderecoEleitor model
   */ 
  interface EnderecoEleitorFieldRefs {
    readonly uuid: FieldRef<"EnderecoEleitor", 'String'>
    readonly latitude: FieldRef<"EnderecoEleitor", 'Float'>
    readonly longitude: FieldRef<"EnderecoEleitor", 'Float'>
    readonly endereco: FieldRef<"EnderecoEleitor", 'String'>
    readonly nCasa: FieldRef<"EnderecoEleitor", 'String'>
    readonly cep: FieldRef<"EnderecoEleitor", 'String'>
    readonly complemento: FieldRef<"EnderecoEleitor", 'String'>
    readonly bairro: FieldRef<"EnderecoEleitor", 'String'>
    readonly cidade: FieldRef<"EnderecoEleitor", 'String'>
    readonly codIbge: FieldRef<"EnderecoEleitor", 'String'>
    readonly uf: FieldRef<"EnderecoEleitor", 'String'>
    readonly pais: FieldRef<"EnderecoEleitor", 'String'>
    readonly eleitorUuid: FieldRef<"EnderecoEleitor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EnderecoEleitor findUnique
   */
  export type EnderecoEleitorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoEleitor to fetch.
     */
    where: EnderecoEleitorWhereUniqueInput
  }

  /**
   * EnderecoEleitor findUniqueOrThrow
   */
  export type EnderecoEleitorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoEleitor to fetch.
     */
    where: EnderecoEleitorWhereUniqueInput
  }

  /**
   * EnderecoEleitor findFirst
   */
  export type EnderecoEleitorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoEleitor to fetch.
     */
    where?: EnderecoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoEleitors to fetch.
     */
    orderBy?: EnderecoEleitorOrderByWithRelationInput | EnderecoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnderecoEleitors.
     */
    cursor?: EnderecoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnderecoEleitors.
     */
    distinct?: EnderecoEleitorScalarFieldEnum | EnderecoEleitorScalarFieldEnum[]
  }

  /**
   * EnderecoEleitor findFirstOrThrow
   */
  export type EnderecoEleitorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoEleitor to fetch.
     */
    where?: EnderecoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoEleitors to fetch.
     */
    orderBy?: EnderecoEleitorOrderByWithRelationInput | EnderecoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnderecoEleitors.
     */
    cursor?: EnderecoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnderecoEleitors.
     */
    distinct?: EnderecoEleitorScalarFieldEnum | EnderecoEleitorScalarFieldEnum[]
  }

  /**
   * EnderecoEleitor findMany
   */
  export type EnderecoEleitorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoEleitors to fetch.
     */
    where?: EnderecoEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoEleitors to fetch.
     */
    orderBy?: EnderecoEleitorOrderByWithRelationInput | EnderecoEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EnderecoEleitors.
     */
    cursor?: EnderecoEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoEleitors.
     */
    skip?: number
    distinct?: EnderecoEleitorScalarFieldEnum | EnderecoEleitorScalarFieldEnum[]
  }

  /**
   * EnderecoEleitor create
   */
  export type EnderecoEleitorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * The data needed to create a EnderecoEleitor.
     */
    data: XOR<EnderecoEleitorCreateInput, EnderecoEleitorUncheckedCreateInput>
  }

  /**
   * EnderecoEleitor createMany
   */
  export type EnderecoEleitorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EnderecoEleitors.
     */
    data: EnderecoEleitorCreateManyInput | EnderecoEleitorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EnderecoEleitor createManyAndReturn
   */
  export type EnderecoEleitorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EnderecoEleitors.
     */
    data: EnderecoEleitorCreateManyInput | EnderecoEleitorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EnderecoEleitor update
   */
  export type EnderecoEleitorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * The data needed to update a EnderecoEleitor.
     */
    data: XOR<EnderecoEleitorUpdateInput, EnderecoEleitorUncheckedUpdateInput>
    /**
     * Choose, which EnderecoEleitor to update.
     */
    where: EnderecoEleitorWhereUniqueInput
  }

  /**
   * EnderecoEleitor updateMany
   */
  export type EnderecoEleitorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EnderecoEleitors.
     */
    data: XOR<EnderecoEleitorUpdateManyMutationInput, EnderecoEleitorUncheckedUpdateManyInput>
    /**
     * Filter which EnderecoEleitors to update
     */
    where?: EnderecoEleitorWhereInput
  }

  /**
   * EnderecoEleitor upsert
   */
  export type EnderecoEleitorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * The filter to search for the EnderecoEleitor to update in case it exists.
     */
    where: EnderecoEleitorWhereUniqueInput
    /**
     * In case the EnderecoEleitor found by the `where` argument doesn't exist, create a new EnderecoEleitor with this data.
     */
    create: XOR<EnderecoEleitorCreateInput, EnderecoEleitorUncheckedCreateInput>
    /**
     * In case the EnderecoEleitor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnderecoEleitorUpdateInput, EnderecoEleitorUncheckedUpdateInput>
  }

  /**
   * EnderecoEleitor delete
   */
  export type EnderecoEleitorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
    /**
     * Filter which EnderecoEleitor to delete.
     */
    where: EnderecoEleitorWhereUniqueInput
  }

  /**
   * EnderecoEleitor deleteMany
   */
  export type EnderecoEleitorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnderecoEleitors to delete
     */
    where?: EnderecoEleitorWhereInput
  }

  /**
   * EnderecoEleitor.Eleitor
   */
  export type EnderecoEleitor$EleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
  }

  /**
   * EnderecoEleitor without action
   */
  export type EnderecoEleitorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoEleitor
     */
    select?: EnderecoEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoEleitorInclude<ExtArgs> | null
  }


  /**
   * Model DadosPessoaisEleitor
   */

  export type AggregateDadosPessoaisEleitor = {
    _count: DadosPessoaisEleitorCountAggregateOutputType | null
    _min: DadosPessoaisEleitorMinAggregateOutputType | null
    _max: DadosPessoaisEleitorMaxAggregateOutputType | null
  }

  export type DadosPessoaisEleitorMinAggregateOutputType = {
    uuid: string | null
    cpf: string | null
    rg: string | null
    sessao: string | null
    zona: string | null
    localdevotacao: string | null
    eleitorUuid: string | null
  }

  export type DadosPessoaisEleitorMaxAggregateOutputType = {
    uuid: string | null
    cpf: string | null
    rg: string | null
    sessao: string | null
    zona: string | null
    localdevotacao: string | null
    eleitorUuid: string | null
  }

  export type DadosPessoaisEleitorCountAggregateOutputType = {
    uuid: number
    cpf: number
    rg: number
    sessao: number
    zona: number
    localdevotacao: number
    eleitorUuid: number
    _all: number
  }


  export type DadosPessoaisEleitorMinAggregateInputType = {
    uuid?: true
    cpf?: true
    rg?: true
    sessao?: true
    zona?: true
    localdevotacao?: true
    eleitorUuid?: true
  }

  export type DadosPessoaisEleitorMaxAggregateInputType = {
    uuid?: true
    cpf?: true
    rg?: true
    sessao?: true
    zona?: true
    localdevotacao?: true
    eleitorUuid?: true
  }

  export type DadosPessoaisEleitorCountAggregateInputType = {
    uuid?: true
    cpf?: true
    rg?: true
    sessao?: true
    zona?: true
    localdevotacao?: true
    eleitorUuid?: true
    _all?: true
  }

  export type DadosPessoaisEleitorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosPessoaisEleitor to aggregate.
     */
    where?: DadosPessoaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPessoaisEleitors to fetch.
     */
    orderBy?: DadosPessoaisEleitorOrderByWithRelationInput | DadosPessoaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DadosPessoaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPessoaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPessoaisEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DadosPessoaisEleitors
    **/
    _count?: true | DadosPessoaisEleitorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DadosPessoaisEleitorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DadosPessoaisEleitorMaxAggregateInputType
  }

  export type GetDadosPessoaisEleitorAggregateType<T extends DadosPessoaisEleitorAggregateArgs> = {
        [P in keyof T & keyof AggregateDadosPessoaisEleitor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDadosPessoaisEleitor[P]>
      : GetScalarType<T[P], AggregateDadosPessoaisEleitor[P]>
  }




  export type DadosPessoaisEleitorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DadosPessoaisEleitorWhereInput
    orderBy?: DadosPessoaisEleitorOrderByWithAggregationInput | DadosPessoaisEleitorOrderByWithAggregationInput[]
    by: DadosPessoaisEleitorScalarFieldEnum[] | DadosPessoaisEleitorScalarFieldEnum
    having?: DadosPessoaisEleitorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DadosPessoaisEleitorCountAggregateInputType | true
    _min?: DadosPessoaisEleitorMinAggregateInputType
    _max?: DadosPessoaisEleitorMaxAggregateInputType
  }

  export type DadosPessoaisEleitorGroupByOutputType = {
    uuid: string
    cpf: string | null
    rg: string | null
    sessao: string
    zona: string
    localdevotacao: string
    eleitorUuid: string
    _count: DadosPessoaisEleitorCountAggregateOutputType | null
    _min: DadosPessoaisEleitorMinAggregateOutputType | null
    _max: DadosPessoaisEleitorMaxAggregateOutputType | null
  }

  type GetDadosPessoaisEleitorGroupByPayload<T extends DadosPessoaisEleitorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DadosPessoaisEleitorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DadosPessoaisEleitorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DadosPessoaisEleitorGroupByOutputType[P]>
            : GetScalarType<T[P], DadosPessoaisEleitorGroupByOutputType[P]>
        }
      >
    >


  export type DadosPessoaisEleitorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    cpf?: boolean
    rg?: boolean
    sessao?: boolean
    zona?: boolean
    localdevotacao?: boolean
    eleitorUuid?: boolean
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dadosPessoaisEleitor"]>

  export type DadosPessoaisEleitorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    cpf?: boolean
    rg?: boolean
    sessao?: boolean
    zona?: boolean
    localdevotacao?: boolean
    eleitorUuid?: boolean
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dadosPessoaisEleitor"]>

  export type DadosPessoaisEleitorSelectScalar = {
    uuid?: boolean
    cpf?: boolean
    rg?: boolean
    sessao?: boolean
    zona?: boolean
    localdevotacao?: boolean
    eleitorUuid?: boolean
  }

  export type DadosPessoaisEleitorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }
  export type DadosPessoaisEleitorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eleitor?: boolean | EleitorDefaultArgs<ExtArgs>
  }

  export type $DadosPessoaisEleitorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DadosPessoaisEleitor"
    objects: {
      eleitor: Prisma.$EleitorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      cpf: string | null
      rg: string | null
      sessao: string
      zona: string
      localdevotacao: string
      eleitorUuid: string
    }, ExtArgs["result"]["dadosPessoaisEleitor"]>
    composites: {}
  }

  type DadosPessoaisEleitorGetPayload<S extends boolean | null | undefined | DadosPessoaisEleitorDefaultArgs> = $Result.GetResult<Prisma.$DadosPessoaisEleitorPayload, S>

  type DadosPessoaisEleitorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DadosPessoaisEleitorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DadosPessoaisEleitorCountAggregateInputType | true
    }

  export interface DadosPessoaisEleitorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DadosPessoaisEleitor'], meta: { name: 'DadosPessoaisEleitor' } }
    /**
     * Find zero or one DadosPessoaisEleitor that matches the filter.
     * @param {DadosPessoaisEleitorFindUniqueArgs} args - Arguments to find a DadosPessoaisEleitor
     * @example
     * // Get one DadosPessoaisEleitor
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DadosPessoaisEleitorFindUniqueArgs>(args: SelectSubset<T, DadosPessoaisEleitorFindUniqueArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DadosPessoaisEleitor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DadosPessoaisEleitorFindUniqueOrThrowArgs} args - Arguments to find a DadosPessoaisEleitor
     * @example
     * // Get one DadosPessoaisEleitor
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DadosPessoaisEleitorFindUniqueOrThrowArgs>(args: SelectSubset<T, DadosPessoaisEleitorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DadosPessoaisEleitor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorFindFirstArgs} args - Arguments to find a DadosPessoaisEleitor
     * @example
     * // Get one DadosPessoaisEleitor
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DadosPessoaisEleitorFindFirstArgs>(args?: SelectSubset<T, DadosPessoaisEleitorFindFirstArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DadosPessoaisEleitor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorFindFirstOrThrowArgs} args - Arguments to find a DadosPessoaisEleitor
     * @example
     * // Get one DadosPessoaisEleitor
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DadosPessoaisEleitorFindFirstOrThrowArgs>(args?: SelectSubset<T, DadosPessoaisEleitorFindFirstOrThrowArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DadosPessoaisEleitors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DadosPessoaisEleitors
     * const dadosPessoaisEleitors = await prisma.dadosPessoaisEleitor.findMany()
     * 
     * // Get first 10 DadosPessoaisEleitors
     * const dadosPessoaisEleitors = await prisma.dadosPessoaisEleitor.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const dadosPessoaisEleitorWithUuidOnly = await prisma.dadosPessoaisEleitor.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends DadosPessoaisEleitorFindManyArgs>(args?: SelectSubset<T, DadosPessoaisEleitorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DadosPessoaisEleitor.
     * @param {DadosPessoaisEleitorCreateArgs} args - Arguments to create a DadosPessoaisEleitor.
     * @example
     * // Create one DadosPessoaisEleitor
     * const DadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.create({
     *   data: {
     *     // ... data to create a DadosPessoaisEleitor
     *   }
     * })
     * 
     */
    create<T extends DadosPessoaisEleitorCreateArgs>(args: SelectSubset<T, DadosPessoaisEleitorCreateArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DadosPessoaisEleitors.
     * @param {DadosPessoaisEleitorCreateManyArgs} args - Arguments to create many DadosPessoaisEleitors.
     * @example
     * // Create many DadosPessoaisEleitors
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DadosPessoaisEleitorCreateManyArgs>(args?: SelectSubset<T, DadosPessoaisEleitorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DadosPessoaisEleitors and returns the data saved in the database.
     * @param {DadosPessoaisEleitorCreateManyAndReturnArgs} args - Arguments to create many DadosPessoaisEleitors.
     * @example
     * // Create many DadosPessoaisEleitors
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DadosPessoaisEleitors and only return the `uuid`
     * const dadosPessoaisEleitorWithUuidOnly = await prisma.dadosPessoaisEleitor.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DadosPessoaisEleitorCreateManyAndReturnArgs>(args?: SelectSubset<T, DadosPessoaisEleitorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DadosPessoaisEleitor.
     * @param {DadosPessoaisEleitorDeleteArgs} args - Arguments to delete one DadosPessoaisEleitor.
     * @example
     * // Delete one DadosPessoaisEleitor
     * const DadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.delete({
     *   where: {
     *     // ... filter to delete one DadosPessoaisEleitor
     *   }
     * })
     * 
     */
    delete<T extends DadosPessoaisEleitorDeleteArgs>(args: SelectSubset<T, DadosPessoaisEleitorDeleteArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DadosPessoaisEleitor.
     * @param {DadosPessoaisEleitorUpdateArgs} args - Arguments to update one DadosPessoaisEleitor.
     * @example
     * // Update one DadosPessoaisEleitor
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DadosPessoaisEleitorUpdateArgs>(args: SelectSubset<T, DadosPessoaisEleitorUpdateArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DadosPessoaisEleitors.
     * @param {DadosPessoaisEleitorDeleteManyArgs} args - Arguments to filter DadosPessoaisEleitors to delete.
     * @example
     * // Delete a few DadosPessoaisEleitors
     * const { count } = await prisma.dadosPessoaisEleitor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DadosPessoaisEleitorDeleteManyArgs>(args?: SelectSubset<T, DadosPessoaisEleitorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DadosPessoaisEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DadosPessoaisEleitors
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DadosPessoaisEleitorUpdateManyArgs>(args: SelectSubset<T, DadosPessoaisEleitorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DadosPessoaisEleitor.
     * @param {DadosPessoaisEleitorUpsertArgs} args - Arguments to update or create a DadosPessoaisEleitor.
     * @example
     * // Update or create a DadosPessoaisEleitor
     * const dadosPessoaisEleitor = await prisma.dadosPessoaisEleitor.upsert({
     *   create: {
     *     // ... data to create a DadosPessoaisEleitor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DadosPessoaisEleitor we want to update
     *   }
     * })
     */
    upsert<T extends DadosPessoaisEleitorUpsertArgs>(args: SelectSubset<T, DadosPessoaisEleitorUpsertArgs<ExtArgs>>): Prisma__DadosPessoaisEleitorClient<$Result.GetResult<Prisma.$DadosPessoaisEleitorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DadosPessoaisEleitors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorCountArgs} args - Arguments to filter DadosPessoaisEleitors to count.
     * @example
     * // Count the number of DadosPessoaisEleitors
     * const count = await prisma.dadosPessoaisEleitor.count({
     *   where: {
     *     // ... the filter for the DadosPessoaisEleitors we want to count
     *   }
     * })
    **/
    count<T extends DadosPessoaisEleitorCountArgs>(
      args?: Subset<T, DadosPessoaisEleitorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DadosPessoaisEleitorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DadosPessoaisEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DadosPessoaisEleitorAggregateArgs>(args: Subset<T, DadosPessoaisEleitorAggregateArgs>): Prisma.PrismaPromise<GetDadosPessoaisEleitorAggregateType<T>>

    /**
     * Group by DadosPessoaisEleitor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPessoaisEleitorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DadosPessoaisEleitorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DadosPessoaisEleitorGroupByArgs['orderBy'] }
        : { orderBy?: DadosPessoaisEleitorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DadosPessoaisEleitorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDadosPessoaisEleitorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DadosPessoaisEleitor model
   */
  readonly fields: DadosPessoaisEleitorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DadosPessoaisEleitor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DadosPessoaisEleitorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    eleitor<T extends EleitorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EleitorDefaultArgs<ExtArgs>>): Prisma__EleitorClient<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DadosPessoaisEleitor model
   */ 
  interface DadosPessoaisEleitorFieldRefs {
    readonly uuid: FieldRef<"DadosPessoaisEleitor", 'String'>
    readonly cpf: FieldRef<"DadosPessoaisEleitor", 'String'>
    readonly rg: FieldRef<"DadosPessoaisEleitor", 'String'>
    readonly sessao: FieldRef<"DadosPessoaisEleitor", 'String'>
    readonly zona: FieldRef<"DadosPessoaisEleitor", 'String'>
    readonly localdevotacao: FieldRef<"DadosPessoaisEleitor", 'String'>
    readonly eleitorUuid: FieldRef<"DadosPessoaisEleitor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DadosPessoaisEleitor findUnique
   */
  export type DadosPessoaisEleitorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which DadosPessoaisEleitor to fetch.
     */
    where: DadosPessoaisEleitorWhereUniqueInput
  }

  /**
   * DadosPessoaisEleitor findUniqueOrThrow
   */
  export type DadosPessoaisEleitorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which DadosPessoaisEleitor to fetch.
     */
    where: DadosPessoaisEleitorWhereUniqueInput
  }

  /**
   * DadosPessoaisEleitor findFirst
   */
  export type DadosPessoaisEleitorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which DadosPessoaisEleitor to fetch.
     */
    where?: DadosPessoaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPessoaisEleitors to fetch.
     */
    orderBy?: DadosPessoaisEleitorOrderByWithRelationInput | DadosPessoaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosPessoaisEleitors.
     */
    cursor?: DadosPessoaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPessoaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPessoaisEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosPessoaisEleitors.
     */
    distinct?: DadosPessoaisEleitorScalarFieldEnum | DadosPessoaisEleitorScalarFieldEnum[]
  }

  /**
   * DadosPessoaisEleitor findFirstOrThrow
   */
  export type DadosPessoaisEleitorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which DadosPessoaisEleitor to fetch.
     */
    where?: DadosPessoaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPessoaisEleitors to fetch.
     */
    orderBy?: DadosPessoaisEleitorOrderByWithRelationInput | DadosPessoaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosPessoaisEleitors.
     */
    cursor?: DadosPessoaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPessoaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPessoaisEleitors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosPessoaisEleitors.
     */
    distinct?: DadosPessoaisEleitorScalarFieldEnum | DadosPessoaisEleitorScalarFieldEnum[]
  }

  /**
   * DadosPessoaisEleitor findMany
   */
  export type DadosPessoaisEleitorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * Filter, which DadosPessoaisEleitors to fetch.
     */
    where?: DadosPessoaisEleitorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPessoaisEleitors to fetch.
     */
    orderBy?: DadosPessoaisEleitorOrderByWithRelationInput | DadosPessoaisEleitorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DadosPessoaisEleitors.
     */
    cursor?: DadosPessoaisEleitorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPessoaisEleitors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPessoaisEleitors.
     */
    skip?: number
    distinct?: DadosPessoaisEleitorScalarFieldEnum | DadosPessoaisEleitorScalarFieldEnum[]
  }

  /**
   * DadosPessoaisEleitor create
   */
  export type DadosPessoaisEleitorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * The data needed to create a DadosPessoaisEleitor.
     */
    data: XOR<DadosPessoaisEleitorCreateInput, DadosPessoaisEleitorUncheckedCreateInput>
  }

  /**
   * DadosPessoaisEleitor createMany
   */
  export type DadosPessoaisEleitorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DadosPessoaisEleitors.
     */
    data: DadosPessoaisEleitorCreateManyInput | DadosPessoaisEleitorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DadosPessoaisEleitor createManyAndReturn
   */
  export type DadosPessoaisEleitorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DadosPessoaisEleitors.
     */
    data: DadosPessoaisEleitorCreateManyInput | DadosPessoaisEleitorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DadosPessoaisEleitor update
   */
  export type DadosPessoaisEleitorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * The data needed to update a DadosPessoaisEleitor.
     */
    data: XOR<DadosPessoaisEleitorUpdateInput, DadosPessoaisEleitorUncheckedUpdateInput>
    /**
     * Choose, which DadosPessoaisEleitor to update.
     */
    where: DadosPessoaisEleitorWhereUniqueInput
  }

  /**
   * DadosPessoaisEleitor updateMany
   */
  export type DadosPessoaisEleitorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DadosPessoaisEleitors.
     */
    data: XOR<DadosPessoaisEleitorUpdateManyMutationInput, DadosPessoaisEleitorUncheckedUpdateManyInput>
    /**
     * Filter which DadosPessoaisEleitors to update
     */
    where?: DadosPessoaisEleitorWhereInput
  }

  /**
   * DadosPessoaisEleitor upsert
   */
  export type DadosPessoaisEleitorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * The filter to search for the DadosPessoaisEleitor to update in case it exists.
     */
    where: DadosPessoaisEleitorWhereUniqueInput
    /**
     * In case the DadosPessoaisEleitor found by the `where` argument doesn't exist, create a new DadosPessoaisEleitor with this data.
     */
    create: XOR<DadosPessoaisEleitorCreateInput, DadosPessoaisEleitorUncheckedCreateInput>
    /**
     * In case the DadosPessoaisEleitor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DadosPessoaisEleitorUpdateInput, DadosPessoaisEleitorUncheckedUpdateInput>
  }

  /**
   * DadosPessoaisEleitor delete
   */
  export type DadosPessoaisEleitorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
    /**
     * Filter which DadosPessoaisEleitor to delete.
     */
    where: DadosPessoaisEleitorWhereUniqueInput
  }

  /**
   * DadosPessoaisEleitor deleteMany
   */
  export type DadosPessoaisEleitorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosPessoaisEleitors to delete
     */
    where?: DadosPessoaisEleitorWhereInput
  }

  /**
   * DadosPessoaisEleitor without action
   */
  export type DadosPessoaisEleitorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPessoaisEleitor
     */
    select?: DadosPessoaisEleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPessoaisEleitorInclude<ExtArgs> | null
  }


  /**
   * Model PlanejamentoLocalVotacao
   */

  export type AggregatePlanejamentoLocalVotacao = {
    _count: PlanejamentoLocalVotacaoCountAggregateOutputType | null
    _avg: PlanejamentoLocalVotacaoAvgAggregateOutputType | null
    _sum: PlanejamentoLocalVotacaoSumAggregateOutputType | null
    _min: PlanejamentoLocalVotacaoMinAggregateOutputType | null
    _max: PlanejamentoLocalVotacaoMaxAggregateOutputType | null
  }

  export type PlanejamentoLocalVotacaoAvgAggregateOutputType = {
    localVotacaoUuid: number | null
  }

  export type PlanejamentoLocalVotacaoSumAggregateOutputType = {
    localVotacaoUuid: number | null
  }

  export type PlanejamentoLocalVotacaoMinAggregateOutputType = {
    uuid: string | null
    localVotacaoUuid: number | null
    candidatoUuid: string | null
  }

  export type PlanejamentoLocalVotacaoMaxAggregateOutputType = {
    uuid: string | null
    localVotacaoUuid: number | null
    candidatoUuid: string | null
  }

  export type PlanejamentoLocalVotacaoCountAggregateOutputType = {
    uuid: number
    localVotacaoUuid: number
    candidatoUuid: number
    _all: number
  }


  export type PlanejamentoLocalVotacaoAvgAggregateInputType = {
    localVotacaoUuid?: true
  }

  export type PlanejamentoLocalVotacaoSumAggregateInputType = {
    localVotacaoUuid?: true
  }

  export type PlanejamentoLocalVotacaoMinAggregateInputType = {
    uuid?: true
    localVotacaoUuid?: true
    candidatoUuid?: true
  }

  export type PlanejamentoLocalVotacaoMaxAggregateInputType = {
    uuid?: true
    localVotacaoUuid?: true
    candidatoUuid?: true
  }

  export type PlanejamentoLocalVotacaoCountAggregateInputType = {
    uuid?: true
    localVotacaoUuid?: true
    candidatoUuid?: true
    _all?: true
  }

  export type PlanejamentoLocalVotacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlanejamentoLocalVotacao to aggregate.
     */
    where?: PlanejamentoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanejamentoLocalVotacaos to fetch.
     */
    orderBy?: PlanejamentoLocalVotacaoOrderByWithRelationInput | PlanejamentoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlanejamentoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanejamentoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanejamentoLocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PlanejamentoLocalVotacaos
    **/
    _count?: true | PlanejamentoLocalVotacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlanejamentoLocalVotacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlanejamentoLocalVotacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlanejamentoLocalVotacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlanejamentoLocalVotacaoMaxAggregateInputType
  }

  export type GetPlanejamentoLocalVotacaoAggregateType<T extends PlanejamentoLocalVotacaoAggregateArgs> = {
        [P in keyof T & keyof AggregatePlanejamentoLocalVotacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlanejamentoLocalVotacao[P]>
      : GetScalarType<T[P], AggregatePlanejamentoLocalVotacao[P]>
  }




  export type PlanejamentoLocalVotacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlanejamentoLocalVotacaoWhereInput
    orderBy?: PlanejamentoLocalVotacaoOrderByWithAggregationInput | PlanejamentoLocalVotacaoOrderByWithAggregationInput[]
    by: PlanejamentoLocalVotacaoScalarFieldEnum[] | PlanejamentoLocalVotacaoScalarFieldEnum
    having?: PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlanejamentoLocalVotacaoCountAggregateInputType | true
    _avg?: PlanejamentoLocalVotacaoAvgAggregateInputType
    _sum?: PlanejamentoLocalVotacaoSumAggregateInputType
    _min?: PlanejamentoLocalVotacaoMinAggregateInputType
    _max?: PlanejamentoLocalVotacaoMaxAggregateInputType
  }

  export type PlanejamentoLocalVotacaoGroupByOutputType = {
    uuid: string
    localVotacaoUuid: number
    candidatoUuid: string
    _count: PlanejamentoLocalVotacaoCountAggregateOutputType | null
    _avg: PlanejamentoLocalVotacaoAvgAggregateOutputType | null
    _sum: PlanejamentoLocalVotacaoSumAggregateOutputType | null
    _min: PlanejamentoLocalVotacaoMinAggregateOutputType | null
    _max: PlanejamentoLocalVotacaoMaxAggregateOutputType | null
  }

  type GetPlanejamentoLocalVotacaoGroupByPayload<T extends PlanejamentoLocalVotacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlanejamentoLocalVotacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlanejamentoLocalVotacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlanejamentoLocalVotacaoGroupByOutputType[P]>
            : GetScalarType<T[P], PlanejamentoLocalVotacaoGroupByOutputType[P]>
        }
      >
    >


  export type PlanejamentoLocalVotacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    localVotacaoUuid?: boolean
    candidatoUuid?: boolean
    cadandidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    Local?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
    Expectativa?: boolean | PlanejamentoLocalVotacao$ExpectativaArgs<ExtArgs>
    _count?: boolean | PlanejamentoLocalVotacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["planejamentoLocalVotacao"]>

  export type PlanejamentoLocalVotacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    localVotacaoUuid?: boolean
    candidatoUuid?: boolean
    cadandidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    Local?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["planejamentoLocalVotacao"]>

  export type PlanejamentoLocalVotacaoSelectScalar = {
    uuid?: boolean
    localVotacaoUuid?: boolean
    candidatoUuid?: boolean
  }

  export type PlanejamentoLocalVotacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cadandidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    Local?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
    Expectativa?: boolean | PlanejamentoLocalVotacao$ExpectativaArgs<ExtArgs>
    _count?: boolean | PlanejamentoLocalVotacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PlanejamentoLocalVotacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cadandidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    Local?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
  }

  export type $PlanejamentoLocalVotacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PlanejamentoLocalVotacao"
    objects: {
      cadandidato: Prisma.$CandidatoPayload<ExtArgs>
      Local: Prisma.$LocalVotacaoPayload<ExtArgs>
      Expectativa: Prisma.$ExpectativaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      localVotacaoUuid: number
      candidatoUuid: string
    }, ExtArgs["result"]["planejamentoLocalVotacao"]>
    composites: {}
  }

  type PlanejamentoLocalVotacaoGetPayload<S extends boolean | null | undefined | PlanejamentoLocalVotacaoDefaultArgs> = $Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload, S>

  type PlanejamentoLocalVotacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PlanejamentoLocalVotacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PlanejamentoLocalVotacaoCountAggregateInputType | true
    }

  export interface PlanejamentoLocalVotacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PlanejamentoLocalVotacao'], meta: { name: 'PlanejamentoLocalVotacao' } }
    /**
     * Find zero or one PlanejamentoLocalVotacao that matches the filter.
     * @param {PlanejamentoLocalVotacaoFindUniqueArgs} args - Arguments to find a PlanejamentoLocalVotacao
     * @example
     * // Get one PlanejamentoLocalVotacao
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlanejamentoLocalVotacaoFindUniqueArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoFindUniqueArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PlanejamentoLocalVotacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PlanejamentoLocalVotacaoFindUniqueOrThrowArgs} args - Arguments to find a PlanejamentoLocalVotacao
     * @example
     * // Get one PlanejamentoLocalVotacao
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlanejamentoLocalVotacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PlanejamentoLocalVotacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoFindFirstArgs} args - Arguments to find a PlanejamentoLocalVotacao
     * @example
     * // Get one PlanejamentoLocalVotacao
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlanejamentoLocalVotacaoFindFirstArgs>(args?: SelectSubset<T, PlanejamentoLocalVotacaoFindFirstArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PlanejamentoLocalVotacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoFindFirstOrThrowArgs} args - Arguments to find a PlanejamentoLocalVotacao
     * @example
     * // Get one PlanejamentoLocalVotacao
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlanejamentoLocalVotacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, PlanejamentoLocalVotacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PlanejamentoLocalVotacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PlanejamentoLocalVotacaos
     * const planejamentoLocalVotacaos = await prisma.planejamentoLocalVotacao.findMany()
     * 
     * // Get first 10 PlanejamentoLocalVotacaos
     * const planejamentoLocalVotacaos = await prisma.planejamentoLocalVotacao.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const planejamentoLocalVotacaoWithUuidOnly = await prisma.planejamentoLocalVotacao.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends PlanejamentoLocalVotacaoFindManyArgs>(args?: SelectSubset<T, PlanejamentoLocalVotacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PlanejamentoLocalVotacao.
     * @param {PlanejamentoLocalVotacaoCreateArgs} args - Arguments to create a PlanejamentoLocalVotacao.
     * @example
     * // Create one PlanejamentoLocalVotacao
     * const PlanejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.create({
     *   data: {
     *     // ... data to create a PlanejamentoLocalVotacao
     *   }
     * })
     * 
     */
    create<T extends PlanejamentoLocalVotacaoCreateArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoCreateArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PlanejamentoLocalVotacaos.
     * @param {PlanejamentoLocalVotacaoCreateManyArgs} args - Arguments to create many PlanejamentoLocalVotacaos.
     * @example
     * // Create many PlanejamentoLocalVotacaos
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlanejamentoLocalVotacaoCreateManyArgs>(args?: SelectSubset<T, PlanejamentoLocalVotacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PlanejamentoLocalVotacaos and returns the data saved in the database.
     * @param {PlanejamentoLocalVotacaoCreateManyAndReturnArgs} args - Arguments to create many PlanejamentoLocalVotacaos.
     * @example
     * // Create many PlanejamentoLocalVotacaos
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PlanejamentoLocalVotacaos and only return the `uuid`
     * const planejamentoLocalVotacaoWithUuidOnly = await prisma.planejamentoLocalVotacao.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlanejamentoLocalVotacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, PlanejamentoLocalVotacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PlanejamentoLocalVotacao.
     * @param {PlanejamentoLocalVotacaoDeleteArgs} args - Arguments to delete one PlanejamentoLocalVotacao.
     * @example
     * // Delete one PlanejamentoLocalVotacao
     * const PlanejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.delete({
     *   where: {
     *     // ... filter to delete one PlanejamentoLocalVotacao
     *   }
     * })
     * 
     */
    delete<T extends PlanejamentoLocalVotacaoDeleteArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoDeleteArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PlanejamentoLocalVotacao.
     * @param {PlanejamentoLocalVotacaoUpdateArgs} args - Arguments to update one PlanejamentoLocalVotacao.
     * @example
     * // Update one PlanejamentoLocalVotacao
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlanejamentoLocalVotacaoUpdateArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoUpdateArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PlanejamentoLocalVotacaos.
     * @param {PlanejamentoLocalVotacaoDeleteManyArgs} args - Arguments to filter PlanejamentoLocalVotacaos to delete.
     * @example
     * // Delete a few PlanejamentoLocalVotacaos
     * const { count } = await prisma.planejamentoLocalVotacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlanejamentoLocalVotacaoDeleteManyArgs>(args?: SelectSubset<T, PlanejamentoLocalVotacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlanejamentoLocalVotacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PlanejamentoLocalVotacaos
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlanejamentoLocalVotacaoUpdateManyArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PlanejamentoLocalVotacao.
     * @param {PlanejamentoLocalVotacaoUpsertArgs} args - Arguments to update or create a PlanejamentoLocalVotacao.
     * @example
     * // Update or create a PlanejamentoLocalVotacao
     * const planejamentoLocalVotacao = await prisma.planejamentoLocalVotacao.upsert({
     *   create: {
     *     // ... data to create a PlanejamentoLocalVotacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PlanejamentoLocalVotacao we want to update
     *   }
     * })
     */
    upsert<T extends PlanejamentoLocalVotacaoUpsertArgs>(args: SelectSubset<T, PlanejamentoLocalVotacaoUpsertArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PlanejamentoLocalVotacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoCountArgs} args - Arguments to filter PlanejamentoLocalVotacaos to count.
     * @example
     * // Count the number of PlanejamentoLocalVotacaos
     * const count = await prisma.planejamentoLocalVotacao.count({
     *   where: {
     *     // ... the filter for the PlanejamentoLocalVotacaos we want to count
     *   }
     * })
    **/
    count<T extends PlanejamentoLocalVotacaoCountArgs>(
      args?: Subset<T, PlanejamentoLocalVotacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlanejamentoLocalVotacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PlanejamentoLocalVotacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlanejamentoLocalVotacaoAggregateArgs>(args: Subset<T, PlanejamentoLocalVotacaoAggregateArgs>): Prisma.PrismaPromise<GetPlanejamentoLocalVotacaoAggregateType<T>>

    /**
     * Group by PlanejamentoLocalVotacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanejamentoLocalVotacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlanejamentoLocalVotacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlanejamentoLocalVotacaoGroupByArgs['orderBy'] }
        : { orderBy?: PlanejamentoLocalVotacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlanejamentoLocalVotacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlanejamentoLocalVotacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PlanejamentoLocalVotacao model
   */
  readonly fields: PlanejamentoLocalVotacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PlanejamentoLocalVotacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlanejamentoLocalVotacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cadandidato<T extends CandidatoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidatoDefaultArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Local<T extends LocalVotacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacaoDefaultArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Expectativa<T extends PlanejamentoLocalVotacao$ExpectativaArgs<ExtArgs> = {}>(args?: Subset<T, PlanejamentoLocalVotacao$ExpectativaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PlanejamentoLocalVotacao model
   */ 
  interface PlanejamentoLocalVotacaoFieldRefs {
    readonly uuid: FieldRef<"PlanejamentoLocalVotacao", 'String'>
    readonly localVotacaoUuid: FieldRef<"PlanejamentoLocalVotacao", 'Int'>
    readonly candidatoUuid: FieldRef<"PlanejamentoLocalVotacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PlanejamentoLocalVotacao findUnique
   */
  export type PlanejamentoLocalVotacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which PlanejamentoLocalVotacao to fetch.
     */
    where: PlanejamentoLocalVotacaoWhereUniqueInput
  }

  /**
   * PlanejamentoLocalVotacao findUniqueOrThrow
   */
  export type PlanejamentoLocalVotacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which PlanejamentoLocalVotacao to fetch.
     */
    where: PlanejamentoLocalVotacaoWhereUniqueInput
  }

  /**
   * PlanejamentoLocalVotacao findFirst
   */
  export type PlanejamentoLocalVotacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which PlanejamentoLocalVotacao to fetch.
     */
    where?: PlanejamentoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanejamentoLocalVotacaos to fetch.
     */
    orderBy?: PlanejamentoLocalVotacaoOrderByWithRelationInput | PlanejamentoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlanejamentoLocalVotacaos.
     */
    cursor?: PlanejamentoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanejamentoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanejamentoLocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlanejamentoLocalVotacaos.
     */
    distinct?: PlanejamentoLocalVotacaoScalarFieldEnum | PlanejamentoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * PlanejamentoLocalVotacao findFirstOrThrow
   */
  export type PlanejamentoLocalVotacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which PlanejamentoLocalVotacao to fetch.
     */
    where?: PlanejamentoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanejamentoLocalVotacaos to fetch.
     */
    orderBy?: PlanejamentoLocalVotacaoOrderByWithRelationInput | PlanejamentoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlanejamentoLocalVotacaos.
     */
    cursor?: PlanejamentoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanejamentoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanejamentoLocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlanejamentoLocalVotacaos.
     */
    distinct?: PlanejamentoLocalVotacaoScalarFieldEnum | PlanejamentoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * PlanejamentoLocalVotacao findMany
   */
  export type PlanejamentoLocalVotacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which PlanejamentoLocalVotacaos to fetch.
     */
    where?: PlanejamentoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanejamentoLocalVotacaos to fetch.
     */
    orderBy?: PlanejamentoLocalVotacaoOrderByWithRelationInput | PlanejamentoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PlanejamentoLocalVotacaos.
     */
    cursor?: PlanejamentoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanejamentoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanejamentoLocalVotacaos.
     */
    skip?: number
    distinct?: PlanejamentoLocalVotacaoScalarFieldEnum | PlanejamentoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * PlanejamentoLocalVotacao create
   */
  export type PlanejamentoLocalVotacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a PlanejamentoLocalVotacao.
     */
    data: XOR<PlanejamentoLocalVotacaoCreateInput, PlanejamentoLocalVotacaoUncheckedCreateInput>
  }

  /**
   * PlanejamentoLocalVotacao createMany
   */
  export type PlanejamentoLocalVotacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PlanejamentoLocalVotacaos.
     */
    data: PlanejamentoLocalVotacaoCreateManyInput | PlanejamentoLocalVotacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlanejamentoLocalVotacao createManyAndReturn
   */
  export type PlanejamentoLocalVotacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PlanejamentoLocalVotacaos.
     */
    data: PlanejamentoLocalVotacaoCreateManyInput | PlanejamentoLocalVotacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PlanejamentoLocalVotacao update
   */
  export type PlanejamentoLocalVotacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a PlanejamentoLocalVotacao.
     */
    data: XOR<PlanejamentoLocalVotacaoUpdateInput, PlanejamentoLocalVotacaoUncheckedUpdateInput>
    /**
     * Choose, which PlanejamentoLocalVotacao to update.
     */
    where: PlanejamentoLocalVotacaoWhereUniqueInput
  }

  /**
   * PlanejamentoLocalVotacao updateMany
   */
  export type PlanejamentoLocalVotacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PlanejamentoLocalVotacaos.
     */
    data: XOR<PlanejamentoLocalVotacaoUpdateManyMutationInput, PlanejamentoLocalVotacaoUncheckedUpdateManyInput>
    /**
     * Filter which PlanejamentoLocalVotacaos to update
     */
    where?: PlanejamentoLocalVotacaoWhereInput
  }

  /**
   * PlanejamentoLocalVotacao upsert
   */
  export type PlanejamentoLocalVotacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the PlanejamentoLocalVotacao to update in case it exists.
     */
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    /**
     * In case the PlanejamentoLocalVotacao found by the `where` argument doesn't exist, create a new PlanejamentoLocalVotacao with this data.
     */
    create: XOR<PlanejamentoLocalVotacaoCreateInput, PlanejamentoLocalVotacaoUncheckedCreateInput>
    /**
     * In case the PlanejamentoLocalVotacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlanejamentoLocalVotacaoUpdateInput, PlanejamentoLocalVotacaoUncheckedUpdateInput>
  }

  /**
   * PlanejamentoLocalVotacao delete
   */
  export type PlanejamentoLocalVotacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter which PlanejamentoLocalVotacao to delete.
     */
    where: PlanejamentoLocalVotacaoWhereUniqueInput
  }

  /**
   * PlanejamentoLocalVotacao deleteMany
   */
  export type PlanejamentoLocalVotacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlanejamentoLocalVotacaos to delete
     */
    where?: PlanejamentoLocalVotacaoWhereInput
  }

  /**
   * PlanejamentoLocalVotacao.Expectativa
   */
  export type PlanejamentoLocalVotacao$ExpectativaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    where?: ExpectativaWhereInput
    orderBy?: ExpectativaOrderByWithRelationInput | ExpectativaOrderByWithRelationInput[]
    cursor?: ExpectativaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExpectativaScalarFieldEnum | ExpectativaScalarFieldEnum[]
  }

  /**
   * PlanejamentoLocalVotacao without action
   */
  export type PlanejamentoLocalVotacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
  }


  /**
   * Model Expectativa
   */

  export type AggregateExpectativa = {
    _count: ExpectativaCountAggregateOutputType | null
    _avg: ExpectativaAvgAggregateOutputType | null
    _sum: ExpectativaSumAggregateOutputType | null
    _min: ExpectativaMinAggregateOutputType | null
    _max: ExpectativaMaxAggregateOutputType | null
  }

  export type ExpectativaAvgAggregateOutputType = {
    expectativa: number | null
  }

  export type ExpectativaSumAggregateOutputType = {
    expectativa: number | null
  }

  export type ExpectativaMinAggregateOutputType = {
    localdevotacao_has_CandidatoUuid: string | null
    expectativa: number | null
  }

  export type ExpectativaMaxAggregateOutputType = {
    localdevotacao_has_CandidatoUuid: string | null
    expectativa: number | null
  }

  export type ExpectativaCountAggregateOutputType = {
    localdevotacao_has_CandidatoUuid: number
    expectativa: number
    _all: number
  }


  export type ExpectativaAvgAggregateInputType = {
    expectativa?: true
  }

  export type ExpectativaSumAggregateInputType = {
    expectativa?: true
  }

  export type ExpectativaMinAggregateInputType = {
    localdevotacao_has_CandidatoUuid?: true
    expectativa?: true
  }

  export type ExpectativaMaxAggregateInputType = {
    localdevotacao_has_CandidatoUuid?: true
    expectativa?: true
  }

  export type ExpectativaCountAggregateInputType = {
    localdevotacao_has_CandidatoUuid?: true
    expectativa?: true
    _all?: true
  }

  export type ExpectativaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expectativa to aggregate.
     */
    where?: ExpectativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expectativas to fetch.
     */
    orderBy?: ExpectativaOrderByWithRelationInput | ExpectativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExpectativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expectativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expectativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Expectativas
    **/
    _count?: true | ExpectativaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ExpectativaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ExpectativaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExpectativaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExpectativaMaxAggregateInputType
  }

  export type GetExpectativaAggregateType<T extends ExpectativaAggregateArgs> = {
        [P in keyof T & keyof AggregateExpectativa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExpectativa[P]>
      : GetScalarType<T[P], AggregateExpectativa[P]>
  }




  export type ExpectativaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExpectativaWhereInput
    orderBy?: ExpectativaOrderByWithAggregationInput | ExpectativaOrderByWithAggregationInput[]
    by: ExpectativaScalarFieldEnum[] | ExpectativaScalarFieldEnum
    having?: ExpectativaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExpectativaCountAggregateInputType | true
    _avg?: ExpectativaAvgAggregateInputType
    _sum?: ExpectativaSumAggregateInputType
    _min?: ExpectativaMinAggregateInputType
    _max?: ExpectativaMaxAggregateInputType
  }

  export type ExpectativaGroupByOutputType = {
    localdevotacao_has_CandidatoUuid: string
    expectativa: number
    _count: ExpectativaCountAggregateOutputType | null
    _avg: ExpectativaAvgAggregateOutputType | null
    _sum: ExpectativaSumAggregateOutputType | null
    _min: ExpectativaMinAggregateOutputType | null
    _max: ExpectativaMaxAggregateOutputType | null
  }

  type GetExpectativaGroupByPayload<T extends ExpectativaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExpectativaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExpectativaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExpectativaGroupByOutputType[P]>
            : GetScalarType<T[P], ExpectativaGroupByOutputType[P]>
        }
      >
    >


  export type ExpectativaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    localdevotacao_has_CandidatoUuid?: boolean
    expectativa?: boolean
    localvotacao?: boolean | PlanejamentoLocalVotacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["expectativa"]>

  export type ExpectativaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    localdevotacao_has_CandidatoUuid?: boolean
    expectativa?: boolean
    localvotacao?: boolean | PlanejamentoLocalVotacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["expectativa"]>

  export type ExpectativaSelectScalar = {
    localdevotacao_has_CandidatoUuid?: boolean
    expectativa?: boolean
  }

  export type ExpectativaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    localvotacao?: boolean | PlanejamentoLocalVotacaoDefaultArgs<ExtArgs>
  }
  export type ExpectativaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    localvotacao?: boolean | PlanejamentoLocalVotacaoDefaultArgs<ExtArgs>
  }

  export type $ExpectativaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Expectativa"
    objects: {
      localvotacao: Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      localdevotacao_has_CandidatoUuid: string
      expectativa: number
    }, ExtArgs["result"]["expectativa"]>
    composites: {}
  }

  type ExpectativaGetPayload<S extends boolean | null | undefined | ExpectativaDefaultArgs> = $Result.GetResult<Prisma.$ExpectativaPayload, S>

  type ExpectativaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ExpectativaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ExpectativaCountAggregateInputType | true
    }

  export interface ExpectativaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Expectativa'], meta: { name: 'Expectativa' } }
    /**
     * Find zero or one Expectativa that matches the filter.
     * @param {ExpectativaFindUniqueArgs} args - Arguments to find a Expectativa
     * @example
     * // Get one Expectativa
     * const expectativa = await prisma.expectativa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExpectativaFindUniqueArgs>(args: SelectSubset<T, ExpectativaFindUniqueArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Expectativa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ExpectativaFindUniqueOrThrowArgs} args - Arguments to find a Expectativa
     * @example
     * // Get one Expectativa
     * const expectativa = await prisma.expectativa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExpectativaFindUniqueOrThrowArgs>(args: SelectSubset<T, ExpectativaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Expectativa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaFindFirstArgs} args - Arguments to find a Expectativa
     * @example
     * // Get one Expectativa
     * const expectativa = await prisma.expectativa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExpectativaFindFirstArgs>(args?: SelectSubset<T, ExpectativaFindFirstArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Expectativa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaFindFirstOrThrowArgs} args - Arguments to find a Expectativa
     * @example
     * // Get one Expectativa
     * const expectativa = await prisma.expectativa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExpectativaFindFirstOrThrowArgs>(args?: SelectSubset<T, ExpectativaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Expectativas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Expectativas
     * const expectativas = await prisma.expectativa.findMany()
     * 
     * // Get first 10 Expectativas
     * const expectativas = await prisma.expectativa.findMany({ take: 10 })
     * 
     * // Only select the `localdevotacao_has_CandidatoUuid`
     * const expectativaWithLocaldevotacao_has_CandidatoUuidOnly = await prisma.expectativa.findMany({ select: { localdevotacao_has_CandidatoUuid: true } })
     * 
     */
    findMany<T extends ExpectativaFindManyArgs>(args?: SelectSubset<T, ExpectativaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Expectativa.
     * @param {ExpectativaCreateArgs} args - Arguments to create a Expectativa.
     * @example
     * // Create one Expectativa
     * const Expectativa = await prisma.expectativa.create({
     *   data: {
     *     // ... data to create a Expectativa
     *   }
     * })
     * 
     */
    create<T extends ExpectativaCreateArgs>(args: SelectSubset<T, ExpectativaCreateArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Expectativas.
     * @param {ExpectativaCreateManyArgs} args - Arguments to create many Expectativas.
     * @example
     * // Create many Expectativas
     * const expectativa = await prisma.expectativa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExpectativaCreateManyArgs>(args?: SelectSubset<T, ExpectativaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Expectativas and returns the data saved in the database.
     * @param {ExpectativaCreateManyAndReturnArgs} args - Arguments to create many Expectativas.
     * @example
     * // Create many Expectativas
     * const expectativa = await prisma.expectativa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Expectativas and only return the `localdevotacao_has_CandidatoUuid`
     * const expectativaWithLocaldevotacao_has_CandidatoUuidOnly = await prisma.expectativa.createManyAndReturn({ 
     *   select: { localdevotacao_has_CandidatoUuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ExpectativaCreateManyAndReturnArgs>(args?: SelectSubset<T, ExpectativaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Expectativa.
     * @param {ExpectativaDeleteArgs} args - Arguments to delete one Expectativa.
     * @example
     * // Delete one Expectativa
     * const Expectativa = await prisma.expectativa.delete({
     *   where: {
     *     // ... filter to delete one Expectativa
     *   }
     * })
     * 
     */
    delete<T extends ExpectativaDeleteArgs>(args: SelectSubset<T, ExpectativaDeleteArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Expectativa.
     * @param {ExpectativaUpdateArgs} args - Arguments to update one Expectativa.
     * @example
     * // Update one Expectativa
     * const expectativa = await prisma.expectativa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExpectativaUpdateArgs>(args: SelectSubset<T, ExpectativaUpdateArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Expectativas.
     * @param {ExpectativaDeleteManyArgs} args - Arguments to filter Expectativas to delete.
     * @example
     * // Delete a few Expectativas
     * const { count } = await prisma.expectativa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExpectativaDeleteManyArgs>(args?: SelectSubset<T, ExpectativaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Expectativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Expectativas
     * const expectativa = await prisma.expectativa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExpectativaUpdateManyArgs>(args: SelectSubset<T, ExpectativaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Expectativa.
     * @param {ExpectativaUpsertArgs} args - Arguments to update or create a Expectativa.
     * @example
     * // Update or create a Expectativa
     * const expectativa = await prisma.expectativa.upsert({
     *   create: {
     *     // ... data to create a Expectativa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Expectativa we want to update
     *   }
     * })
     */
    upsert<T extends ExpectativaUpsertArgs>(args: SelectSubset<T, ExpectativaUpsertArgs<ExtArgs>>): Prisma__ExpectativaClient<$Result.GetResult<Prisma.$ExpectativaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Expectativas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaCountArgs} args - Arguments to filter Expectativas to count.
     * @example
     * // Count the number of Expectativas
     * const count = await prisma.expectativa.count({
     *   where: {
     *     // ... the filter for the Expectativas we want to count
     *   }
     * })
    **/
    count<T extends ExpectativaCountArgs>(
      args?: Subset<T, ExpectativaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExpectativaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Expectativa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExpectativaAggregateArgs>(args: Subset<T, ExpectativaAggregateArgs>): Prisma.PrismaPromise<GetExpectativaAggregateType<T>>

    /**
     * Group by Expectativa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExpectativaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExpectativaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExpectativaGroupByArgs['orderBy'] }
        : { orderBy?: ExpectativaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExpectativaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExpectativaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Expectativa model
   */
  readonly fields: ExpectativaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Expectativa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExpectativaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    localvotacao<T extends PlanejamentoLocalVotacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PlanejamentoLocalVotacaoDefaultArgs<ExtArgs>>): Prisma__PlanejamentoLocalVotacaoClient<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Expectativa model
   */ 
  interface ExpectativaFieldRefs {
    readonly localdevotacao_has_CandidatoUuid: FieldRef<"Expectativa", 'String'>
    readonly expectativa: FieldRef<"Expectativa", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Expectativa findUnique
   */
  export type ExpectativaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * Filter, which Expectativa to fetch.
     */
    where: ExpectativaWhereUniqueInput
  }

  /**
   * Expectativa findUniqueOrThrow
   */
  export type ExpectativaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * Filter, which Expectativa to fetch.
     */
    where: ExpectativaWhereUniqueInput
  }

  /**
   * Expectativa findFirst
   */
  export type ExpectativaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * Filter, which Expectativa to fetch.
     */
    where?: ExpectativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expectativas to fetch.
     */
    orderBy?: ExpectativaOrderByWithRelationInput | ExpectativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expectativas.
     */
    cursor?: ExpectativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expectativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expectativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expectativas.
     */
    distinct?: ExpectativaScalarFieldEnum | ExpectativaScalarFieldEnum[]
  }

  /**
   * Expectativa findFirstOrThrow
   */
  export type ExpectativaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * Filter, which Expectativa to fetch.
     */
    where?: ExpectativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expectativas to fetch.
     */
    orderBy?: ExpectativaOrderByWithRelationInput | ExpectativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Expectativas.
     */
    cursor?: ExpectativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expectativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expectativas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Expectativas.
     */
    distinct?: ExpectativaScalarFieldEnum | ExpectativaScalarFieldEnum[]
  }

  /**
   * Expectativa findMany
   */
  export type ExpectativaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * Filter, which Expectativas to fetch.
     */
    where?: ExpectativaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Expectativas to fetch.
     */
    orderBy?: ExpectativaOrderByWithRelationInput | ExpectativaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Expectativas.
     */
    cursor?: ExpectativaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Expectativas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Expectativas.
     */
    skip?: number
    distinct?: ExpectativaScalarFieldEnum | ExpectativaScalarFieldEnum[]
  }

  /**
   * Expectativa create
   */
  export type ExpectativaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * The data needed to create a Expectativa.
     */
    data: XOR<ExpectativaCreateInput, ExpectativaUncheckedCreateInput>
  }

  /**
   * Expectativa createMany
   */
  export type ExpectativaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Expectativas.
     */
    data: ExpectativaCreateManyInput | ExpectativaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Expectativa createManyAndReturn
   */
  export type ExpectativaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Expectativas.
     */
    data: ExpectativaCreateManyInput | ExpectativaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Expectativa update
   */
  export type ExpectativaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * The data needed to update a Expectativa.
     */
    data: XOR<ExpectativaUpdateInput, ExpectativaUncheckedUpdateInput>
    /**
     * Choose, which Expectativa to update.
     */
    where: ExpectativaWhereUniqueInput
  }

  /**
   * Expectativa updateMany
   */
  export type ExpectativaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Expectativas.
     */
    data: XOR<ExpectativaUpdateManyMutationInput, ExpectativaUncheckedUpdateManyInput>
    /**
     * Filter which Expectativas to update
     */
    where?: ExpectativaWhereInput
  }

  /**
   * Expectativa upsert
   */
  export type ExpectativaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * The filter to search for the Expectativa to update in case it exists.
     */
    where: ExpectativaWhereUniqueInput
    /**
     * In case the Expectativa found by the `where` argument doesn't exist, create a new Expectativa with this data.
     */
    create: XOR<ExpectativaCreateInput, ExpectativaUncheckedCreateInput>
    /**
     * In case the Expectativa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExpectativaUpdateInput, ExpectativaUncheckedUpdateInput>
  }

  /**
   * Expectativa delete
   */
  export type ExpectativaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
    /**
     * Filter which Expectativa to delete.
     */
    where: ExpectativaWhereUniqueInput
  }

  /**
   * Expectativa deleteMany
   */
  export type ExpectativaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Expectativas to delete
     */
    where?: ExpectativaWhereInput
  }

  /**
   * Expectativa without action
   */
  export type ExpectativaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Expectativa
     */
    select?: ExpectativaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExpectativaInclude<ExtArgs> | null
  }


  /**
   * Model LocalVotacao
   */

  export type AggregateLocalVotacao = {
    _count: LocalVotacaoCountAggregateOutputType | null
    _avg: LocalVotacaoAvgAggregateOutputType | null
    _sum: LocalVotacaoSumAggregateOutputType | null
    _min: LocalVotacaoMinAggregateOutputType | null
    _max: LocalVotacaoMaxAggregateOutputType | null
  }

  export type LocalVotacaoAvgAggregateOutputType = {
    uuid: number | null
    totalEleitores: number | null
  }

  export type LocalVotacaoSumAggregateOutputType = {
    uuid: number | null
    totalEleitores: number | null
  }

  export type LocalVotacaoMinAggregateOutputType = {
    uuid: number | null
    localdevotacao: string | null
    updatedAt: Date | null
    createdaAt: Date | null
    totalEleitores: number | null
  }

  export type LocalVotacaoMaxAggregateOutputType = {
    uuid: number | null
    localdevotacao: string | null
    updatedAt: Date | null
    createdaAt: Date | null
    totalEleitores: number | null
  }

  export type LocalVotacaoCountAggregateOutputType = {
    uuid: number
    localdevotacao: number
    updatedAt: number
    createdaAt: number
    totalEleitores: number
    _all: number
  }


  export type LocalVotacaoAvgAggregateInputType = {
    uuid?: true
    totalEleitores?: true
  }

  export type LocalVotacaoSumAggregateInputType = {
    uuid?: true
    totalEleitores?: true
  }

  export type LocalVotacaoMinAggregateInputType = {
    uuid?: true
    localdevotacao?: true
    updatedAt?: true
    createdaAt?: true
    totalEleitores?: true
  }

  export type LocalVotacaoMaxAggregateInputType = {
    uuid?: true
    localdevotacao?: true
    updatedAt?: true
    createdaAt?: true
    totalEleitores?: true
  }

  export type LocalVotacaoCountAggregateInputType = {
    uuid?: true
    localdevotacao?: true
    updatedAt?: true
    createdaAt?: true
    totalEleitores?: true
    _all?: true
  }

  export type LocalVotacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LocalVotacao to aggregate.
     */
    where?: LocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacaos to fetch.
     */
    orderBy?: LocalVotacaoOrderByWithRelationInput | LocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LocalVotacaos
    **/
    _count?: true | LocalVotacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocalVotacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocalVotacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocalVotacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocalVotacaoMaxAggregateInputType
  }

  export type GetLocalVotacaoAggregateType<T extends LocalVotacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateLocalVotacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocalVotacao[P]>
      : GetScalarType<T[P], AggregateLocalVotacao[P]>
  }




  export type LocalVotacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocalVotacaoWhereInput
    orderBy?: LocalVotacaoOrderByWithAggregationInput | LocalVotacaoOrderByWithAggregationInput[]
    by: LocalVotacaoScalarFieldEnum[] | LocalVotacaoScalarFieldEnum
    having?: LocalVotacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocalVotacaoCountAggregateInputType | true
    _avg?: LocalVotacaoAvgAggregateInputType
    _sum?: LocalVotacaoSumAggregateInputType
    _min?: LocalVotacaoMinAggregateInputType
    _max?: LocalVotacaoMaxAggregateInputType
  }

  export type LocalVotacaoGroupByOutputType = {
    uuid: number
    localdevotacao: string
    updatedAt: Date
    createdaAt: Date
    totalEleitores: number
    _count: LocalVotacaoCountAggregateOutputType | null
    _avg: LocalVotacaoAvgAggregateOutputType | null
    _sum: LocalVotacaoSumAggregateOutputType | null
    _min: LocalVotacaoMinAggregateOutputType | null
    _max: LocalVotacaoMaxAggregateOutputType | null
  }

  type GetLocalVotacaoGroupByPayload<T extends LocalVotacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocalVotacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocalVotacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocalVotacaoGroupByOutputType[P]>
            : GetScalarType<T[P], LocalVotacaoGroupByOutputType[P]>
        }
      >
    >


  export type LocalVotacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    localdevotacao?: boolean
    updatedAt?: boolean
    createdaAt?: boolean
    totalEleitores?: boolean
    endereco?: boolean | LocalVotacao$enderecoArgs<ExtArgs>
    sessoesEleitorais?: boolean | LocalVotacao$sessoesEleitoraisArgs<ExtArgs>
    Eleitor?: boolean | LocalVotacao$EleitorArgs<ExtArgs>
    localdevotacao_has_candidato?: boolean | LocalVotacao$localdevotacao_has_candidatoArgs<ExtArgs>
    LocalVotacao_has_candidatoEleicao?: boolean | LocalVotacao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs>
    _count?: boolean | LocalVotacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["localVotacao"]>

  export type LocalVotacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    localdevotacao?: boolean
    updatedAt?: boolean
    createdaAt?: boolean
    totalEleitores?: boolean
  }, ExtArgs["result"]["localVotacao"]>

  export type LocalVotacaoSelectScalar = {
    uuid?: boolean
    localdevotacao?: boolean
    updatedAt?: boolean
    createdaAt?: boolean
    totalEleitores?: boolean
  }

  export type LocalVotacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    endereco?: boolean | LocalVotacao$enderecoArgs<ExtArgs>
    sessoesEleitorais?: boolean | LocalVotacao$sessoesEleitoraisArgs<ExtArgs>
    Eleitor?: boolean | LocalVotacao$EleitorArgs<ExtArgs>
    localdevotacao_has_candidato?: boolean | LocalVotacao$localdevotacao_has_candidatoArgs<ExtArgs>
    LocalVotacao_has_candidatoEleicao?: boolean | LocalVotacao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs>
    _count?: boolean | LocalVotacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocalVotacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LocalVotacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LocalVotacao"
    objects: {
      endereco: Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>[]
      sessoesEleitorais: Prisma.$SessoesEleitoraisPayload<ExtArgs>[]
      Eleitor: Prisma.$EleitorPayload<ExtArgs>[]
      localdevotacao_has_candidato: Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>[]
      LocalVotacao_has_candidatoEleicao: Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: number
      localdevotacao: string
      updatedAt: Date
      createdaAt: Date
      totalEleitores: number
    }, ExtArgs["result"]["localVotacao"]>
    composites: {}
  }

  type LocalVotacaoGetPayload<S extends boolean | null | undefined | LocalVotacaoDefaultArgs> = $Result.GetResult<Prisma.$LocalVotacaoPayload, S>

  type LocalVotacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LocalVotacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LocalVotacaoCountAggregateInputType | true
    }

  export interface LocalVotacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LocalVotacao'], meta: { name: 'LocalVotacao' } }
    /**
     * Find zero or one LocalVotacao that matches the filter.
     * @param {LocalVotacaoFindUniqueArgs} args - Arguments to find a LocalVotacao
     * @example
     * // Get one LocalVotacao
     * const localVotacao = await prisma.localVotacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocalVotacaoFindUniqueArgs>(args: SelectSubset<T, LocalVotacaoFindUniqueArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LocalVotacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LocalVotacaoFindUniqueOrThrowArgs} args - Arguments to find a LocalVotacao
     * @example
     * // Get one LocalVotacao
     * const localVotacao = await prisma.localVotacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocalVotacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, LocalVotacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LocalVotacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoFindFirstArgs} args - Arguments to find a LocalVotacao
     * @example
     * // Get one LocalVotacao
     * const localVotacao = await prisma.localVotacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocalVotacaoFindFirstArgs>(args?: SelectSubset<T, LocalVotacaoFindFirstArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LocalVotacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoFindFirstOrThrowArgs} args - Arguments to find a LocalVotacao
     * @example
     * // Get one LocalVotacao
     * const localVotacao = await prisma.localVotacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocalVotacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, LocalVotacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LocalVotacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LocalVotacaos
     * const localVotacaos = await prisma.localVotacao.findMany()
     * 
     * // Get first 10 LocalVotacaos
     * const localVotacaos = await prisma.localVotacao.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const localVotacaoWithUuidOnly = await prisma.localVotacao.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends LocalVotacaoFindManyArgs>(args?: SelectSubset<T, LocalVotacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LocalVotacao.
     * @param {LocalVotacaoCreateArgs} args - Arguments to create a LocalVotacao.
     * @example
     * // Create one LocalVotacao
     * const LocalVotacao = await prisma.localVotacao.create({
     *   data: {
     *     // ... data to create a LocalVotacao
     *   }
     * })
     * 
     */
    create<T extends LocalVotacaoCreateArgs>(args: SelectSubset<T, LocalVotacaoCreateArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LocalVotacaos.
     * @param {LocalVotacaoCreateManyArgs} args - Arguments to create many LocalVotacaos.
     * @example
     * // Create many LocalVotacaos
     * const localVotacao = await prisma.localVotacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocalVotacaoCreateManyArgs>(args?: SelectSubset<T, LocalVotacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LocalVotacaos and returns the data saved in the database.
     * @param {LocalVotacaoCreateManyAndReturnArgs} args - Arguments to create many LocalVotacaos.
     * @example
     * // Create many LocalVotacaos
     * const localVotacao = await prisma.localVotacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LocalVotacaos and only return the `uuid`
     * const localVotacaoWithUuidOnly = await prisma.localVotacao.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocalVotacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, LocalVotacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LocalVotacao.
     * @param {LocalVotacaoDeleteArgs} args - Arguments to delete one LocalVotacao.
     * @example
     * // Delete one LocalVotacao
     * const LocalVotacao = await prisma.localVotacao.delete({
     *   where: {
     *     // ... filter to delete one LocalVotacao
     *   }
     * })
     * 
     */
    delete<T extends LocalVotacaoDeleteArgs>(args: SelectSubset<T, LocalVotacaoDeleteArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LocalVotacao.
     * @param {LocalVotacaoUpdateArgs} args - Arguments to update one LocalVotacao.
     * @example
     * // Update one LocalVotacao
     * const localVotacao = await prisma.localVotacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocalVotacaoUpdateArgs>(args: SelectSubset<T, LocalVotacaoUpdateArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LocalVotacaos.
     * @param {LocalVotacaoDeleteManyArgs} args - Arguments to filter LocalVotacaos to delete.
     * @example
     * // Delete a few LocalVotacaos
     * const { count } = await prisma.localVotacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocalVotacaoDeleteManyArgs>(args?: SelectSubset<T, LocalVotacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LocalVotacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LocalVotacaos
     * const localVotacao = await prisma.localVotacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocalVotacaoUpdateManyArgs>(args: SelectSubset<T, LocalVotacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LocalVotacao.
     * @param {LocalVotacaoUpsertArgs} args - Arguments to update or create a LocalVotacao.
     * @example
     * // Update or create a LocalVotacao
     * const localVotacao = await prisma.localVotacao.upsert({
     *   create: {
     *     // ... data to create a LocalVotacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LocalVotacao we want to update
     *   }
     * })
     */
    upsert<T extends LocalVotacaoUpsertArgs>(args: SelectSubset<T, LocalVotacaoUpsertArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LocalVotacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoCountArgs} args - Arguments to filter LocalVotacaos to count.
     * @example
     * // Count the number of LocalVotacaos
     * const count = await prisma.localVotacao.count({
     *   where: {
     *     // ... the filter for the LocalVotacaos we want to count
     *   }
     * })
    **/
    count<T extends LocalVotacaoCountArgs>(
      args?: Subset<T, LocalVotacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocalVotacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LocalVotacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocalVotacaoAggregateArgs>(args: Subset<T, LocalVotacaoAggregateArgs>): Prisma.PrismaPromise<GetLocalVotacaoAggregateType<T>>

    /**
     * Group by LocalVotacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocalVotacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocalVotacaoGroupByArgs['orderBy'] }
        : { orderBy?: LocalVotacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocalVotacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocalVotacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LocalVotacao model
   */
  readonly fields: LocalVotacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LocalVotacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocalVotacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    endereco<T extends LocalVotacao$enderecoArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao$enderecoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "findMany"> | Null>
    sessoesEleitorais<T extends LocalVotacao$sessoesEleitoraisArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao$sessoesEleitoraisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "findMany"> | Null>
    Eleitor<T extends LocalVotacao$EleitorArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao$EleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany"> | Null>
    localdevotacao_has_candidato<T extends LocalVotacao$localdevotacao_has_candidatoArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao$localdevotacao_has_candidatoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanejamentoLocalVotacaoPayload<ExtArgs>, T, "findMany"> | Null>
    LocalVotacao_has_candidatoEleicao<T extends LocalVotacao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LocalVotacao model
   */ 
  interface LocalVotacaoFieldRefs {
    readonly uuid: FieldRef<"LocalVotacao", 'Int'>
    readonly localdevotacao: FieldRef<"LocalVotacao", 'String'>
    readonly updatedAt: FieldRef<"LocalVotacao", 'DateTime'>
    readonly createdaAt: FieldRef<"LocalVotacao", 'DateTime'>
    readonly totalEleitores: FieldRef<"LocalVotacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * LocalVotacao findUnique
   */
  export type LocalVotacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao to fetch.
     */
    where: LocalVotacaoWhereUniqueInput
  }

  /**
   * LocalVotacao findUniqueOrThrow
   */
  export type LocalVotacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao to fetch.
     */
    where: LocalVotacaoWhereUniqueInput
  }

  /**
   * LocalVotacao findFirst
   */
  export type LocalVotacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao to fetch.
     */
    where?: LocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacaos to fetch.
     */
    orderBy?: LocalVotacaoOrderByWithRelationInput | LocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocalVotacaos.
     */
    cursor?: LocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocalVotacaos.
     */
    distinct?: LocalVotacaoScalarFieldEnum | LocalVotacaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao findFirstOrThrow
   */
  export type LocalVotacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao to fetch.
     */
    where?: LocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacaos to fetch.
     */
    orderBy?: LocalVotacaoOrderByWithRelationInput | LocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocalVotacaos.
     */
    cursor?: LocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocalVotacaos.
     */
    distinct?: LocalVotacaoScalarFieldEnum | LocalVotacaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao findMany
   */
  export type LocalVotacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacaos to fetch.
     */
    where?: LocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacaos to fetch.
     */
    orderBy?: LocalVotacaoOrderByWithRelationInput | LocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LocalVotacaos.
     */
    cursor?: LocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacaos.
     */
    skip?: number
    distinct?: LocalVotacaoScalarFieldEnum | LocalVotacaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao create
   */
  export type LocalVotacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a LocalVotacao.
     */
    data: XOR<LocalVotacaoCreateInput, LocalVotacaoUncheckedCreateInput>
  }

  /**
   * LocalVotacao createMany
   */
  export type LocalVotacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LocalVotacaos.
     */
    data: LocalVotacaoCreateManyInput | LocalVotacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LocalVotacao createManyAndReturn
   */
  export type LocalVotacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LocalVotacaos.
     */
    data: LocalVotacaoCreateManyInput | LocalVotacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LocalVotacao update
   */
  export type LocalVotacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a LocalVotacao.
     */
    data: XOR<LocalVotacaoUpdateInput, LocalVotacaoUncheckedUpdateInput>
    /**
     * Choose, which LocalVotacao to update.
     */
    where: LocalVotacaoWhereUniqueInput
  }

  /**
   * LocalVotacao updateMany
   */
  export type LocalVotacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LocalVotacaos.
     */
    data: XOR<LocalVotacaoUpdateManyMutationInput, LocalVotacaoUncheckedUpdateManyInput>
    /**
     * Filter which LocalVotacaos to update
     */
    where?: LocalVotacaoWhereInput
  }

  /**
   * LocalVotacao upsert
   */
  export type LocalVotacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the LocalVotacao to update in case it exists.
     */
    where: LocalVotacaoWhereUniqueInput
    /**
     * In case the LocalVotacao found by the `where` argument doesn't exist, create a new LocalVotacao with this data.
     */
    create: XOR<LocalVotacaoCreateInput, LocalVotacaoUncheckedCreateInput>
    /**
     * In case the LocalVotacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocalVotacaoUpdateInput, LocalVotacaoUncheckedUpdateInput>
  }

  /**
   * LocalVotacao delete
   */
  export type LocalVotacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter which LocalVotacao to delete.
     */
    where: LocalVotacaoWhereUniqueInput
  }

  /**
   * LocalVotacao deleteMany
   */
  export type LocalVotacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LocalVotacaos to delete
     */
    where?: LocalVotacaoWhereInput
  }

  /**
   * LocalVotacao.endereco
   */
  export type LocalVotacao$enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    where?: EnderecoLocalVotacaoWhereInput
    orderBy?: EnderecoLocalVotacaoOrderByWithRelationInput | EnderecoLocalVotacaoOrderByWithRelationInput[]
    cursor?: EnderecoLocalVotacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EnderecoLocalVotacaoScalarFieldEnum | EnderecoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao.sessoesEleitorais
   */
  export type LocalVotacao$sessoesEleitoraisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    where?: SessoesEleitoraisWhereInput
    orderBy?: SessoesEleitoraisOrderByWithRelationInput | SessoesEleitoraisOrderByWithRelationInput[]
    cursor?: SessoesEleitoraisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessoesEleitoraisScalarFieldEnum | SessoesEleitoraisScalarFieldEnum[]
  }

  /**
   * LocalVotacao.Eleitor
   */
  export type LocalVotacao$EleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    cursor?: EleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * LocalVotacao.localdevotacao_has_candidato
   */
  export type LocalVotacao$localdevotacao_has_candidatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanejamentoLocalVotacao
     */
    select?: PlanejamentoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanejamentoLocalVotacaoInclude<ExtArgs> | null
    where?: PlanejamentoLocalVotacaoWhereInput
    orderBy?: PlanejamentoLocalVotacaoOrderByWithRelationInput | PlanejamentoLocalVotacaoOrderByWithRelationInput[]
    cursor?: PlanejamentoLocalVotacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlanejamentoLocalVotacaoScalarFieldEnum | PlanejamentoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao.LocalVotacao_has_candidatoEleicao
   */
  export type LocalVotacao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput | LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput[]
    cursor?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LocalVotacao_has_candidatoEleicaoScalarFieldEnum | LocalVotacao_has_candidatoEleicaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao without action
   */
  export type LocalVotacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
  }


  /**
   * Model Eleicoes
   */

  export type AggregateEleicoes = {
    _count: EleicoesCountAggregateOutputType | null
    _avg: EleicoesAvgAggregateOutputType | null
    _sum: EleicoesSumAggregateOutputType | null
    _min: EleicoesMinAggregateOutputType | null
    _max: EleicoesMaxAggregateOutputType | null
  }

  export type EleicoesAvgAggregateOutputType = {
    ano: number | null
  }

  export type EleicoesSumAggregateOutputType = {
    ano: number | null
  }

  export type EleicoesMinAggregateOutputType = {
    uuid: string | null
    ano: number | null
    descricao: string | null
  }

  export type EleicoesMaxAggregateOutputType = {
    uuid: string | null
    ano: number | null
    descricao: string | null
  }

  export type EleicoesCountAggregateOutputType = {
    uuid: number
    ano: number
    descricao: number
    _all: number
  }


  export type EleicoesAvgAggregateInputType = {
    ano?: true
  }

  export type EleicoesSumAggregateInputType = {
    ano?: true
  }

  export type EleicoesMinAggregateInputType = {
    uuid?: true
    ano?: true
    descricao?: true
  }

  export type EleicoesMaxAggregateInputType = {
    uuid?: true
    ano?: true
    descricao?: true
  }

  export type EleicoesCountAggregateInputType = {
    uuid?: true
    ano?: true
    descricao?: true
    _all?: true
  }

  export type EleicoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eleicoes to aggregate.
     */
    where?: EleicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleicoes to fetch.
     */
    orderBy?: EleicoesOrderByWithRelationInput | EleicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EleicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleicoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Eleicoes
    **/
    _count?: true | EleicoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EleicoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EleicoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EleicoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EleicoesMaxAggregateInputType
  }

  export type GetEleicoesAggregateType<T extends EleicoesAggregateArgs> = {
        [P in keyof T & keyof AggregateEleicoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEleicoes[P]>
      : GetScalarType<T[P], AggregateEleicoes[P]>
  }




  export type EleicoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EleicoesWhereInput
    orderBy?: EleicoesOrderByWithAggregationInput | EleicoesOrderByWithAggregationInput[]
    by: EleicoesScalarFieldEnum[] | EleicoesScalarFieldEnum
    having?: EleicoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EleicoesCountAggregateInputType | true
    _avg?: EleicoesAvgAggregateInputType
    _sum?: EleicoesSumAggregateInputType
    _min?: EleicoesMinAggregateInputType
    _max?: EleicoesMaxAggregateInputType
  }

  export type EleicoesGroupByOutputType = {
    uuid: string
    ano: number
    descricao: string
    _count: EleicoesCountAggregateOutputType | null
    _avg: EleicoesAvgAggregateOutputType | null
    _sum: EleicoesSumAggregateOutputType | null
    _min: EleicoesMinAggregateOutputType | null
    _max: EleicoesMaxAggregateOutputType | null
  }

  type GetEleicoesGroupByPayload<T extends EleicoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EleicoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EleicoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EleicoesGroupByOutputType[P]>
            : GetScalarType<T[P], EleicoesGroupByOutputType[P]>
        }
      >
    >


  export type EleicoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    ano?: boolean
    descricao?: boolean
    CandidatosEleicao?: boolean | Eleicoes$CandidatosEleicaoArgs<ExtArgs>
    _count?: boolean | EleicoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eleicoes"]>

  export type EleicoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    ano?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["eleicoes"]>

  export type EleicoesSelectScalar = {
    uuid?: boolean
    ano?: boolean
    descricao?: boolean
  }

  export type EleicoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CandidatosEleicao?: boolean | Eleicoes$CandidatosEleicaoArgs<ExtArgs>
    _count?: boolean | EleicoesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EleicoesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EleicoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Eleicoes"
    objects: {
      CandidatosEleicao: Prisma.$CandidatosEleicaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      ano: number
      descricao: string
    }, ExtArgs["result"]["eleicoes"]>
    composites: {}
  }

  type EleicoesGetPayload<S extends boolean | null | undefined | EleicoesDefaultArgs> = $Result.GetResult<Prisma.$EleicoesPayload, S>

  type EleicoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EleicoesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EleicoesCountAggregateInputType | true
    }

  export interface EleicoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Eleicoes'], meta: { name: 'Eleicoes' } }
    /**
     * Find zero or one Eleicoes that matches the filter.
     * @param {EleicoesFindUniqueArgs} args - Arguments to find a Eleicoes
     * @example
     * // Get one Eleicoes
     * const eleicoes = await prisma.eleicoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EleicoesFindUniqueArgs>(args: SelectSubset<T, EleicoesFindUniqueArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Eleicoes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EleicoesFindUniqueOrThrowArgs} args - Arguments to find a Eleicoes
     * @example
     * // Get one Eleicoes
     * const eleicoes = await prisma.eleicoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EleicoesFindUniqueOrThrowArgs>(args: SelectSubset<T, EleicoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Eleicoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesFindFirstArgs} args - Arguments to find a Eleicoes
     * @example
     * // Get one Eleicoes
     * const eleicoes = await prisma.eleicoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EleicoesFindFirstArgs>(args?: SelectSubset<T, EleicoesFindFirstArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Eleicoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesFindFirstOrThrowArgs} args - Arguments to find a Eleicoes
     * @example
     * // Get one Eleicoes
     * const eleicoes = await prisma.eleicoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EleicoesFindFirstOrThrowArgs>(args?: SelectSubset<T, EleicoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Eleicoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eleicoes
     * const eleicoes = await prisma.eleicoes.findMany()
     * 
     * // Get first 10 Eleicoes
     * const eleicoes = await prisma.eleicoes.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const eleicoesWithUuidOnly = await prisma.eleicoes.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends EleicoesFindManyArgs>(args?: SelectSubset<T, EleicoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Eleicoes.
     * @param {EleicoesCreateArgs} args - Arguments to create a Eleicoes.
     * @example
     * // Create one Eleicoes
     * const Eleicoes = await prisma.eleicoes.create({
     *   data: {
     *     // ... data to create a Eleicoes
     *   }
     * })
     * 
     */
    create<T extends EleicoesCreateArgs>(args: SelectSubset<T, EleicoesCreateArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Eleicoes.
     * @param {EleicoesCreateManyArgs} args - Arguments to create many Eleicoes.
     * @example
     * // Create many Eleicoes
     * const eleicoes = await prisma.eleicoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EleicoesCreateManyArgs>(args?: SelectSubset<T, EleicoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Eleicoes and returns the data saved in the database.
     * @param {EleicoesCreateManyAndReturnArgs} args - Arguments to create many Eleicoes.
     * @example
     * // Create many Eleicoes
     * const eleicoes = await prisma.eleicoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Eleicoes and only return the `uuid`
     * const eleicoesWithUuidOnly = await prisma.eleicoes.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EleicoesCreateManyAndReturnArgs>(args?: SelectSubset<T, EleicoesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Eleicoes.
     * @param {EleicoesDeleteArgs} args - Arguments to delete one Eleicoes.
     * @example
     * // Delete one Eleicoes
     * const Eleicoes = await prisma.eleicoes.delete({
     *   where: {
     *     // ... filter to delete one Eleicoes
     *   }
     * })
     * 
     */
    delete<T extends EleicoesDeleteArgs>(args: SelectSubset<T, EleicoesDeleteArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Eleicoes.
     * @param {EleicoesUpdateArgs} args - Arguments to update one Eleicoes.
     * @example
     * // Update one Eleicoes
     * const eleicoes = await prisma.eleicoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EleicoesUpdateArgs>(args: SelectSubset<T, EleicoesUpdateArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Eleicoes.
     * @param {EleicoesDeleteManyArgs} args - Arguments to filter Eleicoes to delete.
     * @example
     * // Delete a few Eleicoes
     * const { count } = await prisma.eleicoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EleicoesDeleteManyArgs>(args?: SelectSubset<T, EleicoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eleicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eleicoes
     * const eleicoes = await prisma.eleicoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EleicoesUpdateManyArgs>(args: SelectSubset<T, EleicoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Eleicoes.
     * @param {EleicoesUpsertArgs} args - Arguments to update or create a Eleicoes.
     * @example
     * // Update or create a Eleicoes
     * const eleicoes = await prisma.eleicoes.upsert({
     *   create: {
     *     // ... data to create a Eleicoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Eleicoes we want to update
     *   }
     * })
     */
    upsert<T extends EleicoesUpsertArgs>(args: SelectSubset<T, EleicoesUpsertArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Eleicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesCountArgs} args - Arguments to filter Eleicoes to count.
     * @example
     * // Count the number of Eleicoes
     * const count = await prisma.eleicoes.count({
     *   where: {
     *     // ... the filter for the Eleicoes we want to count
     *   }
     * })
    **/
    count<T extends EleicoesCountArgs>(
      args?: Subset<T, EleicoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EleicoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Eleicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EleicoesAggregateArgs>(args: Subset<T, EleicoesAggregateArgs>): Prisma.PrismaPromise<GetEleicoesAggregateType<T>>

    /**
     * Group by Eleicoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EleicoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EleicoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EleicoesGroupByArgs['orderBy'] }
        : { orderBy?: EleicoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EleicoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEleicoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Eleicoes model
   */
  readonly fields: EleicoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Eleicoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EleicoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CandidatosEleicao<T extends Eleicoes$CandidatosEleicaoArgs<ExtArgs> = {}>(args?: Subset<T, Eleicoes$CandidatosEleicaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Eleicoes model
   */ 
  interface EleicoesFieldRefs {
    readonly uuid: FieldRef<"Eleicoes", 'String'>
    readonly ano: FieldRef<"Eleicoes", 'Int'>
    readonly descricao: FieldRef<"Eleicoes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Eleicoes findUnique
   */
  export type EleicoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * Filter, which Eleicoes to fetch.
     */
    where: EleicoesWhereUniqueInput
  }

  /**
   * Eleicoes findUniqueOrThrow
   */
  export type EleicoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * Filter, which Eleicoes to fetch.
     */
    where: EleicoesWhereUniqueInput
  }

  /**
   * Eleicoes findFirst
   */
  export type EleicoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * Filter, which Eleicoes to fetch.
     */
    where?: EleicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleicoes to fetch.
     */
    orderBy?: EleicoesOrderByWithRelationInput | EleicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eleicoes.
     */
    cursor?: EleicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleicoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eleicoes.
     */
    distinct?: EleicoesScalarFieldEnum | EleicoesScalarFieldEnum[]
  }

  /**
   * Eleicoes findFirstOrThrow
   */
  export type EleicoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * Filter, which Eleicoes to fetch.
     */
    where?: EleicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleicoes to fetch.
     */
    orderBy?: EleicoesOrderByWithRelationInput | EleicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eleicoes.
     */
    cursor?: EleicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleicoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eleicoes.
     */
    distinct?: EleicoesScalarFieldEnum | EleicoesScalarFieldEnum[]
  }

  /**
   * Eleicoes findMany
   */
  export type EleicoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * Filter, which Eleicoes to fetch.
     */
    where?: EleicoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eleicoes to fetch.
     */
    orderBy?: EleicoesOrderByWithRelationInput | EleicoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Eleicoes.
     */
    cursor?: EleicoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eleicoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eleicoes.
     */
    skip?: number
    distinct?: EleicoesScalarFieldEnum | EleicoesScalarFieldEnum[]
  }

  /**
   * Eleicoes create
   */
  export type EleicoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * The data needed to create a Eleicoes.
     */
    data: XOR<EleicoesCreateInput, EleicoesUncheckedCreateInput>
  }

  /**
   * Eleicoes createMany
   */
  export type EleicoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Eleicoes.
     */
    data: EleicoesCreateManyInput | EleicoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Eleicoes createManyAndReturn
   */
  export type EleicoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Eleicoes.
     */
    data: EleicoesCreateManyInput | EleicoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Eleicoes update
   */
  export type EleicoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * The data needed to update a Eleicoes.
     */
    data: XOR<EleicoesUpdateInput, EleicoesUncheckedUpdateInput>
    /**
     * Choose, which Eleicoes to update.
     */
    where: EleicoesWhereUniqueInput
  }

  /**
   * Eleicoes updateMany
   */
  export type EleicoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Eleicoes.
     */
    data: XOR<EleicoesUpdateManyMutationInput, EleicoesUncheckedUpdateManyInput>
    /**
     * Filter which Eleicoes to update
     */
    where?: EleicoesWhereInput
  }

  /**
   * Eleicoes upsert
   */
  export type EleicoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * The filter to search for the Eleicoes to update in case it exists.
     */
    where: EleicoesWhereUniqueInput
    /**
     * In case the Eleicoes found by the `where` argument doesn't exist, create a new Eleicoes with this data.
     */
    create: XOR<EleicoesCreateInput, EleicoesUncheckedCreateInput>
    /**
     * In case the Eleicoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EleicoesUpdateInput, EleicoesUncheckedUpdateInput>
  }

  /**
   * Eleicoes delete
   */
  export type EleicoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
    /**
     * Filter which Eleicoes to delete.
     */
    where: EleicoesWhereUniqueInput
  }

  /**
   * Eleicoes deleteMany
   */
  export type EleicoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eleicoes to delete
     */
    where?: EleicoesWhereInput
  }

  /**
   * Eleicoes.CandidatosEleicao
   */
  export type Eleicoes$CandidatosEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    where?: CandidatosEleicaoWhereInput
    orderBy?: CandidatosEleicaoOrderByWithRelationInput | CandidatosEleicaoOrderByWithRelationInput[]
    cursor?: CandidatosEleicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidatosEleicaoScalarFieldEnum | CandidatosEleicaoScalarFieldEnum[]
  }

  /**
   * Eleicoes without action
   */
  export type EleicoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleicoes
     */
    select?: EleicoesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleicoesInclude<ExtArgs> | null
  }


  /**
   * Model UF
   */

  export type AggregateUF = {
    _count: UFCountAggregateOutputType | null
    _avg: UFAvgAggregateOutputType | null
    _sum: UFSumAggregateOutputType | null
    _min: UFMinAggregateOutputType | null
    _max: UFMaxAggregateOutputType | null
  }

  export type UFAvgAggregateOutputType = {
    id: number | null
  }

  export type UFSumAggregateOutputType = {
    id: number | null
  }

  export type UFMinAggregateOutputType = {
    id: number | null
    descricao: string | null
  }

  export type UFMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
  }

  export type UFCountAggregateOutputType = {
    id: number
    descricao: number
    _all: number
  }


  export type UFAvgAggregateInputType = {
    id?: true
  }

  export type UFSumAggregateInputType = {
    id?: true
  }

  export type UFMinAggregateInputType = {
    id?: true
    descricao?: true
  }

  export type UFMaxAggregateInputType = {
    id?: true
    descricao?: true
  }

  export type UFCountAggregateInputType = {
    id?: true
    descricao?: true
    _all?: true
  }

  export type UFAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UF to aggregate.
     */
    where?: UFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UFS to fetch.
     */
    orderBy?: UFOrderByWithRelationInput | UFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UFS
    **/
    _count?: true | UFCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UFAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UFSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UFMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UFMaxAggregateInputType
  }

  export type GetUFAggregateType<T extends UFAggregateArgs> = {
        [P in keyof T & keyof AggregateUF]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUF[P]>
      : GetScalarType<T[P], AggregateUF[P]>
  }




  export type UFGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UFWhereInput
    orderBy?: UFOrderByWithAggregationInput | UFOrderByWithAggregationInput[]
    by: UFScalarFieldEnum[] | UFScalarFieldEnum
    having?: UFScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UFCountAggregateInputType | true
    _avg?: UFAvgAggregateInputType
    _sum?: UFSumAggregateInputType
    _min?: UFMinAggregateInputType
    _max?: UFMaxAggregateInputType
  }

  export type UFGroupByOutputType = {
    id: number
    descricao: string
    _count: UFCountAggregateOutputType | null
    _avg: UFAvgAggregateOutputType | null
    _sum: UFSumAggregateOutputType | null
    _min: UFMinAggregateOutputType | null
    _max: UFMaxAggregateOutputType | null
  }

  type GetUFGroupByPayload<T extends UFGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UFGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UFGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UFGroupByOutputType[P]>
            : GetScalarType<T[P], UFGroupByOutputType[P]>
        }
      >
    >


  export type UFSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    municipio?: boolean | UF$municipioArgs<ExtArgs>
    _count?: boolean | UFCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["uF"]>

  export type UFSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["uF"]>

  export type UFSelectScalar = {
    id?: boolean
    descricao?: boolean
  }

  export type UFInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    municipio?: boolean | UF$municipioArgs<ExtArgs>
    _count?: boolean | UFCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UFIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UFPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UF"
    objects: {
      municipio: Prisma.$MunicipioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string
    }, ExtArgs["result"]["uF"]>
    composites: {}
  }

  type UFGetPayload<S extends boolean | null | undefined | UFDefaultArgs> = $Result.GetResult<Prisma.$UFPayload, S>

  type UFCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UFFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UFCountAggregateInputType | true
    }

  export interface UFDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UF'], meta: { name: 'UF' } }
    /**
     * Find zero or one UF that matches the filter.
     * @param {UFFindUniqueArgs} args - Arguments to find a UF
     * @example
     * // Get one UF
     * const uF = await prisma.uF.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UFFindUniqueArgs>(args: SelectSubset<T, UFFindUniqueArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UF that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UFFindUniqueOrThrowArgs} args - Arguments to find a UF
     * @example
     * // Get one UF
     * const uF = await prisma.uF.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UFFindUniqueOrThrowArgs>(args: SelectSubset<T, UFFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UF that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFFindFirstArgs} args - Arguments to find a UF
     * @example
     * // Get one UF
     * const uF = await prisma.uF.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UFFindFirstArgs>(args?: SelectSubset<T, UFFindFirstArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UF that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFFindFirstOrThrowArgs} args - Arguments to find a UF
     * @example
     * // Get one UF
     * const uF = await prisma.uF.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UFFindFirstOrThrowArgs>(args?: SelectSubset<T, UFFindFirstOrThrowArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UFS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UFS
     * const uFS = await prisma.uF.findMany()
     * 
     * // Get first 10 UFS
     * const uFS = await prisma.uF.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const uFWithIdOnly = await prisma.uF.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UFFindManyArgs>(args?: SelectSubset<T, UFFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UF.
     * @param {UFCreateArgs} args - Arguments to create a UF.
     * @example
     * // Create one UF
     * const UF = await prisma.uF.create({
     *   data: {
     *     // ... data to create a UF
     *   }
     * })
     * 
     */
    create<T extends UFCreateArgs>(args: SelectSubset<T, UFCreateArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UFS.
     * @param {UFCreateManyArgs} args - Arguments to create many UFS.
     * @example
     * // Create many UFS
     * const uF = await prisma.uF.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UFCreateManyArgs>(args?: SelectSubset<T, UFCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UFS and returns the data saved in the database.
     * @param {UFCreateManyAndReturnArgs} args - Arguments to create many UFS.
     * @example
     * // Create many UFS
     * const uF = await prisma.uF.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UFS and only return the `id`
     * const uFWithIdOnly = await prisma.uF.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UFCreateManyAndReturnArgs>(args?: SelectSubset<T, UFCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UF.
     * @param {UFDeleteArgs} args - Arguments to delete one UF.
     * @example
     * // Delete one UF
     * const UF = await prisma.uF.delete({
     *   where: {
     *     // ... filter to delete one UF
     *   }
     * })
     * 
     */
    delete<T extends UFDeleteArgs>(args: SelectSubset<T, UFDeleteArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UF.
     * @param {UFUpdateArgs} args - Arguments to update one UF.
     * @example
     * // Update one UF
     * const uF = await prisma.uF.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UFUpdateArgs>(args: SelectSubset<T, UFUpdateArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UFS.
     * @param {UFDeleteManyArgs} args - Arguments to filter UFS to delete.
     * @example
     * // Delete a few UFS
     * const { count } = await prisma.uF.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UFDeleteManyArgs>(args?: SelectSubset<T, UFDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UFS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UFS
     * const uF = await prisma.uF.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UFUpdateManyArgs>(args: SelectSubset<T, UFUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UF.
     * @param {UFUpsertArgs} args - Arguments to update or create a UF.
     * @example
     * // Update or create a UF
     * const uF = await prisma.uF.upsert({
     *   create: {
     *     // ... data to create a UF
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UF we want to update
     *   }
     * })
     */
    upsert<T extends UFUpsertArgs>(args: SelectSubset<T, UFUpsertArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UFS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFCountArgs} args - Arguments to filter UFS to count.
     * @example
     * // Count the number of UFS
     * const count = await prisma.uF.count({
     *   where: {
     *     // ... the filter for the UFS we want to count
     *   }
     * })
    **/
    count<T extends UFCountArgs>(
      args?: Subset<T, UFCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UFCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UF.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UFAggregateArgs>(args: Subset<T, UFAggregateArgs>): Prisma.PrismaPromise<GetUFAggregateType<T>>

    /**
     * Group by UF.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UFGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UFGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UFGroupByArgs['orderBy'] }
        : { orderBy?: UFGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UFGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUFGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UF model
   */
  readonly fields: UFFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UF.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UFClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    municipio<T extends UF$municipioArgs<ExtArgs> = {}>(args?: Subset<T, UF$municipioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UF model
   */ 
  interface UFFieldRefs {
    readonly id: FieldRef<"UF", 'Int'>
    readonly descricao: FieldRef<"UF", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UF findUnique
   */
  export type UFFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * Filter, which UF to fetch.
     */
    where: UFWhereUniqueInput
  }

  /**
   * UF findUniqueOrThrow
   */
  export type UFFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * Filter, which UF to fetch.
     */
    where: UFWhereUniqueInput
  }

  /**
   * UF findFirst
   */
  export type UFFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * Filter, which UF to fetch.
     */
    where?: UFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UFS to fetch.
     */
    orderBy?: UFOrderByWithRelationInput | UFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UFS.
     */
    cursor?: UFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UFS.
     */
    distinct?: UFScalarFieldEnum | UFScalarFieldEnum[]
  }

  /**
   * UF findFirstOrThrow
   */
  export type UFFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * Filter, which UF to fetch.
     */
    where?: UFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UFS to fetch.
     */
    orderBy?: UFOrderByWithRelationInput | UFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UFS.
     */
    cursor?: UFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UFS.
     */
    distinct?: UFScalarFieldEnum | UFScalarFieldEnum[]
  }

  /**
   * UF findMany
   */
  export type UFFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * Filter, which UFS to fetch.
     */
    where?: UFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UFS to fetch.
     */
    orderBy?: UFOrderByWithRelationInput | UFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UFS.
     */
    cursor?: UFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UFS.
     */
    skip?: number
    distinct?: UFScalarFieldEnum | UFScalarFieldEnum[]
  }

  /**
   * UF create
   */
  export type UFCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * The data needed to create a UF.
     */
    data: XOR<UFCreateInput, UFUncheckedCreateInput>
  }

  /**
   * UF createMany
   */
  export type UFCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UFS.
     */
    data: UFCreateManyInput | UFCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UF createManyAndReturn
   */
  export type UFCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UFS.
     */
    data: UFCreateManyInput | UFCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UF update
   */
  export type UFUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * The data needed to update a UF.
     */
    data: XOR<UFUpdateInput, UFUncheckedUpdateInput>
    /**
     * Choose, which UF to update.
     */
    where: UFWhereUniqueInput
  }

  /**
   * UF updateMany
   */
  export type UFUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UFS.
     */
    data: XOR<UFUpdateManyMutationInput, UFUncheckedUpdateManyInput>
    /**
     * Filter which UFS to update
     */
    where?: UFWhereInput
  }

  /**
   * UF upsert
   */
  export type UFUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * The filter to search for the UF to update in case it exists.
     */
    where: UFWhereUniqueInput
    /**
     * In case the UF found by the `where` argument doesn't exist, create a new UF with this data.
     */
    create: XOR<UFCreateInput, UFUncheckedCreateInput>
    /**
     * In case the UF was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UFUpdateInput, UFUncheckedUpdateInput>
  }

  /**
   * UF delete
   */
  export type UFDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
    /**
     * Filter which UF to delete.
     */
    where: UFWhereUniqueInput
  }

  /**
   * UF deleteMany
   */
  export type UFDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UFS to delete
     */
    where?: UFWhereInput
  }

  /**
   * UF.municipio
   */
  export type UF$municipioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    where?: MunicipioWhereInput
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    cursor?: MunicipioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * UF without action
   */
  export type UFDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UF
     */
    select?: UFSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UFInclude<ExtArgs> | null
  }


  /**
   * Model Municipio
   */

  export type AggregateMunicipio = {
    _count: MunicipioCountAggregateOutputType | null
    _avg: MunicipioAvgAggregateOutputType | null
    _sum: MunicipioSumAggregateOutputType | null
    _min: MunicipioMinAggregateOutputType | null
    _max: MunicipioMaxAggregateOutputType | null
  }

  export type MunicipioAvgAggregateOutputType = {
    id: number | null
    uFId: number | null
  }

  export type MunicipioSumAggregateOutputType = {
    id: number | null
    uFId: number | null
  }

  export type MunicipioMinAggregateOutputType = {
    id: number | null
    uFId: number | null
    descricao: string | null
  }

  export type MunicipioMaxAggregateOutputType = {
    id: number | null
    uFId: number | null
    descricao: string | null
  }

  export type MunicipioCountAggregateOutputType = {
    id: number
    uFId: number
    descricao: number
    _all: number
  }


  export type MunicipioAvgAggregateInputType = {
    id?: true
    uFId?: true
  }

  export type MunicipioSumAggregateInputType = {
    id?: true
    uFId?: true
  }

  export type MunicipioMinAggregateInputType = {
    id?: true
    uFId?: true
    descricao?: true
  }

  export type MunicipioMaxAggregateInputType = {
    id?: true
    uFId?: true
    descricao?: true
  }

  export type MunicipioCountAggregateInputType = {
    id?: true
    uFId?: true
    descricao?: true
    _all?: true
  }

  export type MunicipioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipio to aggregate.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Municipios
    **/
    _count?: true | MunicipioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MunicipioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MunicipioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MunicipioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MunicipioMaxAggregateInputType
  }

  export type GetMunicipioAggregateType<T extends MunicipioAggregateArgs> = {
        [P in keyof T & keyof AggregateMunicipio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMunicipio[P]>
      : GetScalarType<T[P], AggregateMunicipio[P]>
  }




  export type MunicipioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipioWhereInput
    orderBy?: MunicipioOrderByWithAggregationInput | MunicipioOrderByWithAggregationInput[]
    by: MunicipioScalarFieldEnum[] | MunicipioScalarFieldEnum
    having?: MunicipioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MunicipioCountAggregateInputType | true
    _avg?: MunicipioAvgAggregateInputType
    _sum?: MunicipioSumAggregateInputType
    _min?: MunicipioMinAggregateInputType
    _max?: MunicipioMaxAggregateInputType
  }

  export type MunicipioGroupByOutputType = {
    id: number
    uFId: number
    descricao: string
    _count: MunicipioCountAggregateOutputType | null
    _avg: MunicipioAvgAggregateOutputType | null
    _sum: MunicipioSumAggregateOutputType | null
    _min: MunicipioMinAggregateOutputType | null
    _max: MunicipioMaxAggregateOutputType | null
  }

  type GetMunicipioGroupByPayload<T extends MunicipioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MunicipioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MunicipioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MunicipioGroupByOutputType[P]>
            : GetScalarType<T[P], MunicipioGroupByOutputType[P]>
        }
      >
    >


  export type MunicipioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uFId?: boolean
    descricao?: boolean
    uf?: boolean | UFDefaultArgs<ExtArgs>
    CandidatosEleicao?: boolean | Municipio$CandidatosEleicaoArgs<ExtArgs>
    _count?: boolean | MunicipioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipio"]>

  export type MunicipioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uFId?: boolean
    descricao?: boolean
    uf?: boolean | UFDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipio"]>

  export type MunicipioSelectScalar = {
    id?: boolean
    uFId?: boolean
    descricao?: boolean
  }

  export type MunicipioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    uf?: boolean | UFDefaultArgs<ExtArgs>
    CandidatosEleicao?: boolean | Municipio$CandidatosEleicaoArgs<ExtArgs>
    _count?: boolean | MunicipioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MunicipioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    uf?: boolean | UFDefaultArgs<ExtArgs>
  }

  export type $MunicipioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Municipio"
    objects: {
      uf: Prisma.$UFPayload<ExtArgs>
      CandidatosEleicao: Prisma.$CandidatosEleicaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      uFId: number
      descricao: string
    }, ExtArgs["result"]["municipio"]>
    composites: {}
  }

  type MunicipioGetPayload<S extends boolean | null | undefined | MunicipioDefaultArgs> = $Result.GetResult<Prisma.$MunicipioPayload, S>

  type MunicipioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MunicipioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MunicipioCountAggregateInputType | true
    }

  export interface MunicipioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Municipio'], meta: { name: 'Municipio' } }
    /**
     * Find zero or one Municipio that matches the filter.
     * @param {MunicipioFindUniqueArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MunicipioFindUniqueArgs>(args: SelectSubset<T, MunicipioFindUniqueArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Municipio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MunicipioFindUniqueOrThrowArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MunicipioFindUniqueOrThrowArgs>(args: SelectSubset<T, MunicipioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Municipio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioFindFirstArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MunicipioFindFirstArgs>(args?: SelectSubset<T, MunicipioFindFirstArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Municipio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioFindFirstOrThrowArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MunicipioFindFirstOrThrowArgs>(args?: SelectSubset<T, MunicipioFindFirstOrThrowArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Municipios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Municipios
     * const municipios = await prisma.municipio.findMany()
     * 
     * // Get first 10 Municipios
     * const municipios = await prisma.municipio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const municipioWithIdOnly = await prisma.municipio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MunicipioFindManyArgs>(args?: SelectSubset<T, MunicipioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Municipio.
     * @param {MunicipioCreateArgs} args - Arguments to create a Municipio.
     * @example
     * // Create one Municipio
     * const Municipio = await prisma.municipio.create({
     *   data: {
     *     // ... data to create a Municipio
     *   }
     * })
     * 
     */
    create<T extends MunicipioCreateArgs>(args: SelectSubset<T, MunicipioCreateArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Municipios.
     * @param {MunicipioCreateManyArgs} args - Arguments to create many Municipios.
     * @example
     * // Create many Municipios
     * const municipio = await prisma.municipio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MunicipioCreateManyArgs>(args?: SelectSubset<T, MunicipioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Municipios and returns the data saved in the database.
     * @param {MunicipioCreateManyAndReturnArgs} args - Arguments to create many Municipios.
     * @example
     * // Create many Municipios
     * const municipio = await prisma.municipio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Municipios and only return the `id`
     * const municipioWithIdOnly = await prisma.municipio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MunicipioCreateManyAndReturnArgs>(args?: SelectSubset<T, MunicipioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Municipio.
     * @param {MunicipioDeleteArgs} args - Arguments to delete one Municipio.
     * @example
     * // Delete one Municipio
     * const Municipio = await prisma.municipio.delete({
     *   where: {
     *     // ... filter to delete one Municipio
     *   }
     * })
     * 
     */
    delete<T extends MunicipioDeleteArgs>(args: SelectSubset<T, MunicipioDeleteArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Municipio.
     * @param {MunicipioUpdateArgs} args - Arguments to update one Municipio.
     * @example
     * // Update one Municipio
     * const municipio = await prisma.municipio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MunicipioUpdateArgs>(args: SelectSubset<T, MunicipioUpdateArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Municipios.
     * @param {MunicipioDeleteManyArgs} args - Arguments to filter Municipios to delete.
     * @example
     * // Delete a few Municipios
     * const { count } = await prisma.municipio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MunicipioDeleteManyArgs>(args?: SelectSubset<T, MunicipioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Municipios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Municipios
     * const municipio = await prisma.municipio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MunicipioUpdateManyArgs>(args: SelectSubset<T, MunicipioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Municipio.
     * @param {MunicipioUpsertArgs} args - Arguments to update or create a Municipio.
     * @example
     * // Update or create a Municipio
     * const municipio = await prisma.municipio.upsert({
     *   create: {
     *     // ... data to create a Municipio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Municipio we want to update
     *   }
     * })
     */
    upsert<T extends MunicipioUpsertArgs>(args: SelectSubset<T, MunicipioUpsertArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Municipios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioCountArgs} args - Arguments to filter Municipios to count.
     * @example
     * // Count the number of Municipios
     * const count = await prisma.municipio.count({
     *   where: {
     *     // ... the filter for the Municipios we want to count
     *   }
     * })
    **/
    count<T extends MunicipioCountArgs>(
      args?: Subset<T, MunicipioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MunicipioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Municipio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MunicipioAggregateArgs>(args: Subset<T, MunicipioAggregateArgs>): Prisma.PrismaPromise<GetMunicipioAggregateType<T>>

    /**
     * Group by Municipio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MunicipioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MunicipioGroupByArgs['orderBy'] }
        : { orderBy?: MunicipioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MunicipioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMunicipioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Municipio model
   */
  readonly fields: MunicipioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Municipio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MunicipioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    uf<T extends UFDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UFDefaultArgs<ExtArgs>>): Prisma__UFClient<$Result.GetResult<Prisma.$UFPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    CandidatosEleicao<T extends Municipio$CandidatosEleicaoArgs<ExtArgs> = {}>(args?: Subset<T, Municipio$CandidatosEleicaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Municipio model
   */ 
  interface MunicipioFieldRefs {
    readonly id: FieldRef<"Municipio", 'Int'>
    readonly uFId: FieldRef<"Municipio", 'Int'>
    readonly descricao: FieldRef<"Municipio", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Municipio findUnique
   */
  export type MunicipioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio findUniqueOrThrow
   */
  export type MunicipioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio findFirst
   */
  export type MunicipioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipios.
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipios.
     */
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Municipio findFirstOrThrow
   */
  export type MunicipioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipios.
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipios.
     */
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Municipio findMany
   */
  export type MunicipioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipios to fetch.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Municipios.
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Municipio create
   */
  export type MunicipioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * The data needed to create a Municipio.
     */
    data: XOR<MunicipioCreateInput, MunicipioUncheckedCreateInput>
  }

  /**
   * Municipio createMany
   */
  export type MunicipioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Municipios.
     */
    data: MunicipioCreateManyInput | MunicipioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Municipio createManyAndReturn
   */
  export type MunicipioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Municipios.
     */
    data: MunicipioCreateManyInput | MunicipioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Municipio update
   */
  export type MunicipioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * The data needed to update a Municipio.
     */
    data: XOR<MunicipioUpdateInput, MunicipioUncheckedUpdateInput>
    /**
     * Choose, which Municipio to update.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio updateMany
   */
  export type MunicipioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Municipios.
     */
    data: XOR<MunicipioUpdateManyMutationInput, MunicipioUncheckedUpdateManyInput>
    /**
     * Filter which Municipios to update
     */
    where?: MunicipioWhereInput
  }

  /**
   * Municipio upsert
   */
  export type MunicipioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * The filter to search for the Municipio to update in case it exists.
     */
    where: MunicipioWhereUniqueInput
    /**
     * In case the Municipio found by the `where` argument doesn't exist, create a new Municipio with this data.
     */
    create: XOR<MunicipioCreateInput, MunicipioUncheckedCreateInput>
    /**
     * In case the Municipio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MunicipioUpdateInput, MunicipioUncheckedUpdateInput>
  }

  /**
   * Municipio delete
   */
  export type MunicipioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter which Municipio to delete.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio deleteMany
   */
  export type MunicipioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipios to delete
     */
    where?: MunicipioWhereInput
  }

  /**
   * Municipio.CandidatosEleicao
   */
  export type Municipio$CandidatosEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    where?: CandidatosEleicaoWhereInput
    orderBy?: CandidatosEleicaoOrderByWithRelationInput | CandidatosEleicaoOrderByWithRelationInput[]
    cursor?: CandidatosEleicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CandidatosEleicaoScalarFieldEnum | CandidatosEleicaoScalarFieldEnum[]
  }

  /**
   * Municipio without action
   */
  export type MunicipioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
  }


  /**
   * Model CandidatosEleicao
   */

  export type AggregateCandidatosEleicao = {
    _count: CandidatosEleicaoCountAggregateOutputType | null
    _avg: CandidatosEleicaoAvgAggregateOutputType | null
    _sum: CandidatosEleicaoSumAggregateOutputType | null
    _min: CandidatosEleicaoMinAggregateOutputType | null
    _max: CandidatosEleicaoMaxAggregateOutputType | null
  }

  export type CandidatosEleicaoAvgAggregateOutputType = {
    sequencial: number | null
    municipioId: number | null
    numero_urna: number | null
  }

  export type CandidatosEleicaoSumAggregateOutputType = {
    sequencial: bigint | null
    municipioId: number | null
    numero_urna: number | null
  }

  export type CandidatosEleicaoMinAggregateOutputType = {
    sequencial: bigint | null
    nomecandidato: string | null
    cargoCandidato: string | null
    municipioId: number | null
    numero_urna: number | null
    eleicoesUuid: string | null
  }

  export type CandidatosEleicaoMaxAggregateOutputType = {
    sequencial: bigint | null
    nomecandidato: string | null
    cargoCandidato: string | null
    municipioId: number | null
    numero_urna: number | null
    eleicoesUuid: string | null
  }

  export type CandidatosEleicaoCountAggregateOutputType = {
    sequencial: number
    nomecandidato: number
    cargoCandidato: number
    municipioId: number
    numero_urna: number
    eleicoesUuid: number
    _all: number
  }


  export type CandidatosEleicaoAvgAggregateInputType = {
    sequencial?: true
    municipioId?: true
    numero_urna?: true
  }

  export type CandidatosEleicaoSumAggregateInputType = {
    sequencial?: true
    municipioId?: true
    numero_urna?: true
  }

  export type CandidatosEleicaoMinAggregateInputType = {
    sequencial?: true
    nomecandidato?: true
    cargoCandidato?: true
    municipioId?: true
    numero_urna?: true
    eleicoesUuid?: true
  }

  export type CandidatosEleicaoMaxAggregateInputType = {
    sequencial?: true
    nomecandidato?: true
    cargoCandidato?: true
    municipioId?: true
    numero_urna?: true
    eleicoesUuid?: true
  }

  export type CandidatosEleicaoCountAggregateInputType = {
    sequencial?: true
    nomecandidato?: true
    cargoCandidato?: true
    municipioId?: true
    numero_urna?: true
    eleicoesUuid?: true
    _all?: true
  }

  export type CandidatosEleicaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CandidatosEleicao to aggregate.
     */
    where?: CandidatosEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidatosEleicaos to fetch.
     */
    orderBy?: CandidatosEleicaoOrderByWithRelationInput | CandidatosEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CandidatosEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidatosEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidatosEleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CandidatosEleicaos
    **/
    _count?: true | CandidatosEleicaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CandidatosEleicaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CandidatosEleicaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CandidatosEleicaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CandidatosEleicaoMaxAggregateInputType
  }

  export type GetCandidatosEleicaoAggregateType<T extends CandidatosEleicaoAggregateArgs> = {
        [P in keyof T & keyof AggregateCandidatosEleicao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCandidatosEleicao[P]>
      : GetScalarType<T[P], AggregateCandidatosEleicao[P]>
  }




  export type CandidatosEleicaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CandidatosEleicaoWhereInput
    orderBy?: CandidatosEleicaoOrderByWithAggregationInput | CandidatosEleicaoOrderByWithAggregationInput[]
    by: CandidatosEleicaoScalarFieldEnum[] | CandidatosEleicaoScalarFieldEnum
    having?: CandidatosEleicaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CandidatosEleicaoCountAggregateInputType | true
    _avg?: CandidatosEleicaoAvgAggregateInputType
    _sum?: CandidatosEleicaoSumAggregateInputType
    _min?: CandidatosEleicaoMinAggregateInputType
    _max?: CandidatosEleicaoMaxAggregateInputType
  }

  export type CandidatosEleicaoGroupByOutputType = {
    sequencial: bigint
    nomecandidato: string
    cargoCandidato: string
    municipioId: number
    numero_urna: number
    eleicoesUuid: string
    _count: CandidatosEleicaoCountAggregateOutputType | null
    _avg: CandidatosEleicaoAvgAggregateOutputType | null
    _sum: CandidatosEleicaoSumAggregateOutputType | null
    _min: CandidatosEleicaoMinAggregateOutputType | null
    _max: CandidatosEleicaoMaxAggregateOutputType | null
  }

  type GetCandidatosEleicaoGroupByPayload<T extends CandidatosEleicaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CandidatosEleicaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CandidatosEleicaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CandidatosEleicaoGroupByOutputType[P]>
            : GetScalarType<T[P], CandidatosEleicaoGroupByOutputType[P]>
        }
      >
    >


  export type CandidatosEleicaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sequencial?: boolean
    nomecandidato?: boolean
    cargoCandidato?: boolean
    municipioId?: boolean
    numero_urna?: boolean
    eleicoesUuid?: boolean
    eleicao?: boolean | EleicoesDefaultArgs<ExtArgs>
    municipio?: boolean | MunicipioDefaultArgs<ExtArgs>
    LocalVotacao_has_candidatoEleicao?: boolean | CandidatosEleicao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs>
    _count?: boolean | CandidatosEleicaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidatosEleicao"]>

  export type CandidatosEleicaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sequencial?: boolean
    nomecandidato?: boolean
    cargoCandidato?: boolean
    municipioId?: boolean
    numero_urna?: boolean
    eleicoesUuid?: boolean
    eleicao?: boolean | EleicoesDefaultArgs<ExtArgs>
    municipio?: boolean | MunicipioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["candidatosEleicao"]>

  export type CandidatosEleicaoSelectScalar = {
    sequencial?: boolean
    nomecandidato?: boolean
    cargoCandidato?: boolean
    municipioId?: boolean
    numero_urna?: boolean
    eleicoesUuid?: boolean
  }

  export type CandidatosEleicaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eleicao?: boolean | EleicoesDefaultArgs<ExtArgs>
    municipio?: boolean | MunicipioDefaultArgs<ExtArgs>
    LocalVotacao_has_candidatoEleicao?: boolean | CandidatosEleicao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs>
    _count?: boolean | CandidatosEleicaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CandidatosEleicaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eleicao?: boolean | EleicoesDefaultArgs<ExtArgs>
    municipio?: boolean | MunicipioDefaultArgs<ExtArgs>
  }

  export type $CandidatosEleicaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CandidatosEleicao"
    objects: {
      eleicao: Prisma.$EleicoesPayload<ExtArgs>
      municipio: Prisma.$MunicipioPayload<ExtArgs>
      LocalVotacao_has_candidatoEleicao: Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      sequencial: bigint
      nomecandidato: string
      cargoCandidato: string
      municipioId: number
      numero_urna: number
      eleicoesUuid: string
    }, ExtArgs["result"]["candidatosEleicao"]>
    composites: {}
  }

  type CandidatosEleicaoGetPayload<S extends boolean | null | undefined | CandidatosEleicaoDefaultArgs> = $Result.GetResult<Prisma.$CandidatosEleicaoPayload, S>

  type CandidatosEleicaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CandidatosEleicaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CandidatosEleicaoCountAggregateInputType | true
    }

  export interface CandidatosEleicaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CandidatosEleicao'], meta: { name: 'CandidatosEleicao' } }
    /**
     * Find zero or one CandidatosEleicao that matches the filter.
     * @param {CandidatosEleicaoFindUniqueArgs} args - Arguments to find a CandidatosEleicao
     * @example
     * // Get one CandidatosEleicao
     * const candidatosEleicao = await prisma.candidatosEleicao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CandidatosEleicaoFindUniqueArgs>(args: SelectSubset<T, CandidatosEleicaoFindUniqueArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CandidatosEleicao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CandidatosEleicaoFindUniqueOrThrowArgs} args - Arguments to find a CandidatosEleicao
     * @example
     * // Get one CandidatosEleicao
     * const candidatosEleicao = await prisma.candidatosEleicao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CandidatosEleicaoFindUniqueOrThrowArgs>(args: SelectSubset<T, CandidatosEleicaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CandidatosEleicao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoFindFirstArgs} args - Arguments to find a CandidatosEleicao
     * @example
     * // Get one CandidatosEleicao
     * const candidatosEleicao = await prisma.candidatosEleicao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CandidatosEleicaoFindFirstArgs>(args?: SelectSubset<T, CandidatosEleicaoFindFirstArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CandidatosEleicao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoFindFirstOrThrowArgs} args - Arguments to find a CandidatosEleicao
     * @example
     * // Get one CandidatosEleicao
     * const candidatosEleicao = await prisma.candidatosEleicao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CandidatosEleicaoFindFirstOrThrowArgs>(args?: SelectSubset<T, CandidatosEleicaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CandidatosEleicaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CandidatosEleicaos
     * const candidatosEleicaos = await prisma.candidatosEleicao.findMany()
     * 
     * // Get first 10 CandidatosEleicaos
     * const candidatosEleicaos = await prisma.candidatosEleicao.findMany({ take: 10 })
     * 
     * // Only select the `sequencial`
     * const candidatosEleicaoWithSequencialOnly = await prisma.candidatosEleicao.findMany({ select: { sequencial: true } })
     * 
     */
    findMany<T extends CandidatosEleicaoFindManyArgs>(args?: SelectSubset<T, CandidatosEleicaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CandidatosEleicao.
     * @param {CandidatosEleicaoCreateArgs} args - Arguments to create a CandidatosEleicao.
     * @example
     * // Create one CandidatosEleicao
     * const CandidatosEleicao = await prisma.candidatosEleicao.create({
     *   data: {
     *     // ... data to create a CandidatosEleicao
     *   }
     * })
     * 
     */
    create<T extends CandidatosEleicaoCreateArgs>(args: SelectSubset<T, CandidatosEleicaoCreateArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CandidatosEleicaos.
     * @param {CandidatosEleicaoCreateManyArgs} args - Arguments to create many CandidatosEleicaos.
     * @example
     * // Create many CandidatosEleicaos
     * const candidatosEleicao = await prisma.candidatosEleicao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CandidatosEleicaoCreateManyArgs>(args?: SelectSubset<T, CandidatosEleicaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CandidatosEleicaos and returns the data saved in the database.
     * @param {CandidatosEleicaoCreateManyAndReturnArgs} args - Arguments to create many CandidatosEleicaos.
     * @example
     * // Create many CandidatosEleicaos
     * const candidatosEleicao = await prisma.candidatosEleicao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CandidatosEleicaos and only return the `sequencial`
     * const candidatosEleicaoWithSequencialOnly = await prisma.candidatosEleicao.createManyAndReturn({ 
     *   select: { sequencial: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CandidatosEleicaoCreateManyAndReturnArgs>(args?: SelectSubset<T, CandidatosEleicaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CandidatosEleicao.
     * @param {CandidatosEleicaoDeleteArgs} args - Arguments to delete one CandidatosEleicao.
     * @example
     * // Delete one CandidatosEleicao
     * const CandidatosEleicao = await prisma.candidatosEleicao.delete({
     *   where: {
     *     // ... filter to delete one CandidatosEleicao
     *   }
     * })
     * 
     */
    delete<T extends CandidatosEleicaoDeleteArgs>(args: SelectSubset<T, CandidatosEleicaoDeleteArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CandidatosEleicao.
     * @param {CandidatosEleicaoUpdateArgs} args - Arguments to update one CandidatosEleicao.
     * @example
     * // Update one CandidatosEleicao
     * const candidatosEleicao = await prisma.candidatosEleicao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CandidatosEleicaoUpdateArgs>(args: SelectSubset<T, CandidatosEleicaoUpdateArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CandidatosEleicaos.
     * @param {CandidatosEleicaoDeleteManyArgs} args - Arguments to filter CandidatosEleicaos to delete.
     * @example
     * // Delete a few CandidatosEleicaos
     * const { count } = await prisma.candidatosEleicao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CandidatosEleicaoDeleteManyArgs>(args?: SelectSubset<T, CandidatosEleicaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CandidatosEleicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CandidatosEleicaos
     * const candidatosEleicao = await prisma.candidatosEleicao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CandidatosEleicaoUpdateManyArgs>(args: SelectSubset<T, CandidatosEleicaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CandidatosEleicao.
     * @param {CandidatosEleicaoUpsertArgs} args - Arguments to update or create a CandidatosEleicao.
     * @example
     * // Update or create a CandidatosEleicao
     * const candidatosEleicao = await prisma.candidatosEleicao.upsert({
     *   create: {
     *     // ... data to create a CandidatosEleicao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CandidatosEleicao we want to update
     *   }
     * })
     */
    upsert<T extends CandidatosEleicaoUpsertArgs>(args: SelectSubset<T, CandidatosEleicaoUpsertArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CandidatosEleicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoCountArgs} args - Arguments to filter CandidatosEleicaos to count.
     * @example
     * // Count the number of CandidatosEleicaos
     * const count = await prisma.candidatosEleicao.count({
     *   where: {
     *     // ... the filter for the CandidatosEleicaos we want to count
     *   }
     * })
    **/
    count<T extends CandidatosEleicaoCountArgs>(
      args?: Subset<T, CandidatosEleicaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CandidatosEleicaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CandidatosEleicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CandidatosEleicaoAggregateArgs>(args: Subset<T, CandidatosEleicaoAggregateArgs>): Prisma.PrismaPromise<GetCandidatosEleicaoAggregateType<T>>

    /**
     * Group by CandidatosEleicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CandidatosEleicaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CandidatosEleicaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CandidatosEleicaoGroupByArgs['orderBy'] }
        : { orderBy?: CandidatosEleicaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CandidatosEleicaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCandidatosEleicaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CandidatosEleicao model
   */
  readonly fields: CandidatosEleicaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CandidatosEleicao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CandidatosEleicaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    eleicao<T extends EleicoesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EleicoesDefaultArgs<ExtArgs>>): Prisma__EleicoesClient<$Result.GetResult<Prisma.$EleicoesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    municipio<T extends MunicipioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MunicipioDefaultArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    LocalVotacao_has_candidatoEleicao<T extends CandidatosEleicao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs> = {}>(args?: Subset<T, CandidatosEleicao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CandidatosEleicao model
   */ 
  interface CandidatosEleicaoFieldRefs {
    readonly sequencial: FieldRef<"CandidatosEleicao", 'BigInt'>
    readonly nomecandidato: FieldRef<"CandidatosEleicao", 'String'>
    readonly cargoCandidato: FieldRef<"CandidatosEleicao", 'String'>
    readonly municipioId: FieldRef<"CandidatosEleicao", 'Int'>
    readonly numero_urna: FieldRef<"CandidatosEleicao", 'Int'>
    readonly eleicoesUuid: FieldRef<"CandidatosEleicao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CandidatosEleicao findUnique
   */
  export type CandidatosEleicaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which CandidatosEleicao to fetch.
     */
    where: CandidatosEleicaoWhereUniqueInput
  }

  /**
   * CandidatosEleicao findUniqueOrThrow
   */
  export type CandidatosEleicaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which CandidatosEleicao to fetch.
     */
    where: CandidatosEleicaoWhereUniqueInput
  }

  /**
   * CandidatosEleicao findFirst
   */
  export type CandidatosEleicaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which CandidatosEleicao to fetch.
     */
    where?: CandidatosEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidatosEleicaos to fetch.
     */
    orderBy?: CandidatosEleicaoOrderByWithRelationInput | CandidatosEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CandidatosEleicaos.
     */
    cursor?: CandidatosEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidatosEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidatosEleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CandidatosEleicaos.
     */
    distinct?: CandidatosEleicaoScalarFieldEnum | CandidatosEleicaoScalarFieldEnum[]
  }

  /**
   * CandidatosEleicao findFirstOrThrow
   */
  export type CandidatosEleicaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which CandidatosEleicao to fetch.
     */
    where?: CandidatosEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidatosEleicaos to fetch.
     */
    orderBy?: CandidatosEleicaoOrderByWithRelationInput | CandidatosEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CandidatosEleicaos.
     */
    cursor?: CandidatosEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidatosEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidatosEleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CandidatosEleicaos.
     */
    distinct?: CandidatosEleicaoScalarFieldEnum | CandidatosEleicaoScalarFieldEnum[]
  }

  /**
   * CandidatosEleicao findMany
   */
  export type CandidatosEleicaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which CandidatosEleicaos to fetch.
     */
    where?: CandidatosEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CandidatosEleicaos to fetch.
     */
    orderBy?: CandidatosEleicaoOrderByWithRelationInput | CandidatosEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CandidatosEleicaos.
     */
    cursor?: CandidatosEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CandidatosEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CandidatosEleicaos.
     */
    skip?: number
    distinct?: CandidatosEleicaoScalarFieldEnum | CandidatosEleicaoScalarFieldEnum[]
  }

  /**
   * CandidatosEleicao create
   */
  export type CandidatosEleicaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * The data needed to create a CandidatosEleicao.
     */
    data: XOR<CandidatosEleicaoCreateInput, CandidatosEleicaoUncheckedCreateInput>
  }

  /**
   * CandidatosEleicao createMany
   */
  export type CandidatosEleicaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CandidatosEleicaos.
     */
    data: CandidatosEleicaoCreateManyInput | CandidatosEleicaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CandidatosEleicao createManyAndReturn
   */
  export type CandidatosEleicaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CandidatosEleicaos.
     */
    data: CandidatosEleicaoCreateManyInput | CandidatosEleicaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CandidatosEleicao update
   */
  export type CandidatosEleicaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * The data needed to update a CandidatosEleicao.
     */
    data: XOR<CandidatosEleicaoUpdateInput, CandidatosEleicaoUncheckedUpdateInput>
    /**
     * Choose, which CandidatosEleicao to update.
     */
    where: CandidatosEleicaoWhereUniqueInput
  }

  /**
   * CandidatosEleicao updateMany
   */
  export type CandidatosEleicaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CandidatosEleicaos.
     */
    data: XOR<CandidatosEleicaoUpdateManyMutationInput, CandidatosEleicaoUncheckedUpdateManyInput>
    /**
     * Filter which CandidatosEleicaos to update
     */
    where?: CandidatosEleicaoWhereInput
  }

  /**
   * CandidatosEleicao upsert
   */
  export type CandidatosEleicaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * The filter to search for the CandidatosEleicao to update in case it exists.
     */
    where: CandidatosEleicaoWhereUniqueInput
    /**
     * In case the CandidatosEleicao found by the `where` argument doesn't exist, create a new CandidatosEleicao with this data.
     */
    create: XOR<CandidatosEleicaoCreateInput, CandidatosEleicaoUncheckedCreateInput>
    /**
     * In case the CandidatosEleicao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CandidatosEleicaoUpdateInput, CandidatosEleicaoUncheckedUpdateInput>
  }

  /**
   * CandidatosEleicao delete
   */
  export type CandidatosEleicaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
    /**
     * Filter which CandidatosEleicao to delete.
     */
    where: CandidatosEleicaoWhereUniqueInput
  }

  /**
   * CandidatosEleicao deleteMany
   */
  export type CandidatosEleicaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CandidatosEleicaos to delete
     */
    where?: CandidatosEleicaoWhereInput
  }

  /**
   * CandidatosEleicao.LocalVotacao_has_candidatoEleicao
   */
  export type CandidatosEleicao$LocalVotacao_has_candidatoEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput | LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput[]
    cursor?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LocalVotacao_has_candidatoEleicaoScalarFieldEnum | LocalVotacao_has_candidatoEleicaoScalarFieldEnum[]
  }

  /**
   * CandidatosEleicao without action
   */
  export type CandidatosEleicaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CandidatosEleicao
     */
    select?: CandidatosEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CandidatosEleicaoInclude<ExtArgs> | null
  }


  /**
   * Model LocalVotacao_has_candidatoEleicao
   */

  export type AggregateLocalVotacao_has_candidatoEleicao = {
    _count: LocalVotacao_has_candidatoEleicaoCountAggregateOutputType | null
    _avg: LocalVotacao_has_candidatoEleicaoAvgAggregateOutputType | null
    _sum: LocalVotacao_has_candidatoEleicaoSumAggregateOutputType | null
    _min: LocalVotacao_has_candidatoEleicaoMinAggregateOutputType | null
    _max: LocalVotacao_has_candidatoEleicaoMaxAggregateOutputType | null
  }

  export type LocalVotacao_has_candidatoEleicaoAvgAggregateOutputType = {
    localVotacaoUuid: number | null
    candidatosEleicaoSequencial: number | null
  }

  export type LocalVotacao_has_candidatoEleicaoSumAggregateOutputType = {
    localVotacaoUuid: number | null
    candidatosEleicaoSequencial: bigint | null
  }

  export type LocalVotacao_has_candidatoEleicaoMinAggregateOutputType = {
    uuid: string | null
    localVotacaoUuid: number | null
    candidatosEleicaoSequencial: bigint | null
  }

  export type LocalVotacao_has_candidatoEleicaoMaxAggregateOutputType = {
    uuid: string | null
    localVotacaoUuid: number | null
    candidatosEleicaoSequencial: bigint | null
  }

  export type LocalVotacao_has_candidatoEleicaoCountAggregateOutputType = {
    uuid: number
    localVotacaoUuid: number
    candidatosEleicaoSequencial: number
    _all: number
  }


  export type LocalVotacao_has_candidatoEleicaoAvgAggregateInputType = {
    localVotacaoUuid?: true
    candidatosEleicaoSequencial?: true
  }

  export type LocalVotacao_has_candidatoEleicaoSumAggregateInputType = {
    localVotacaoUuid?: true
    candidatosEleicaoSequencial?: true
  }

  export type LocalVotacao_has_candidatoEleicaoMinAggregateInputType = {
    uuid?: true
    localVotacaoUuid?: true
    candidatosEleicaoSequencial?: true
  }

  export type LocalVotacao_has_candidatoEleicaoMaxAggregateInputType = {
    uuid?: true
    localVotacaoUuid?: true
    candidatosEleicaoSequencial?: true
  }

  export type LocalVotacao_has_candidatoEleicaoCountAggregateInputType = {
    uuid?: true
    localVotacaoUuid?: true
    candidatosEleicaoSequencial?: true
    _all?: true
  }

  export type LocalVotacao_has_candidatoEleicaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LocalVotacao_has_candidatoEleicao to aggregate.
     */
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacao_has_candidatoEleicaos to fetch.
     */
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput | LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacao_has_candidatoEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacao_has_candidatoEleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LocalVotacao_has_candidatoEleicaos
    **/
    _count?: true | LocalVotacao_has_candidatoEleicaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocalVotacao_has_candidatoEleicaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocalVotacao_has_candidatoEleicaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocalVotacao_has_candidatoEleicaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocalVotacao_has_candidatoEleicaoMaxAggregateInputType
  }

  export type GetLocalVotacao_has_candidatoEleicaoAggregateType<T extends LocalVotacao_has_candidatoEleicaoAggregateArgs> = {
        [P in keyof T & keyof AggregateLocalVotacao_has_candidatoEleicao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocalVotacao_has_candidatoEleicao[P]>
      : GetScalarType<T[P], AggregateLocalVotacao_has_candidatoEleicao[P]>
  }




  export type LocalVotacao_has_candidatoEleicaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithAggregationInput | LocalVotacao_has_candidatoEleicaoOrderByWithAggregationInput[]
    by: LocalVotacao_has_candidatoEleicaoScalarFieldEnum[] | LocalVotacao_has_candidatoEleicaoScalarFieldEnum
    having?: LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocalVotacao_has_candidatoEleicaoCountAggregateInputType | true
    _avg?: LocalVotacao_has_candidatoEleicaoAvgAggregateInputType
    _sum?: LocalVotacao_has_candidatoEleicaoSumAggregateInputType
    _min?: LocalVotacao_has_candidatoEleicaoMinAggregateInputType
    _max?: LocalVotacao_has_candidatoEleicaoMaxAggregateInputType
  }

  export type LocalVotacao_has_candidatoEleicaoGroupByOutputType = {
    uuid: string
    localVotacaoUuid: number
    candidatosEleicaoSequencial: bigint
    _count: LocalVotacao_has_candidatoEleicaoCountAggregateOutputType | null
    _avg: LocalVotacao_has_candidatoEleicaoAvgAggregateOutputType | null
    _sum: LocalVotacao_has_candidatoEleicaoSumAggregateOutputType | null
    _min: LocalVotacao_has_candidatoEleicaoMinAggregateOutputType | null
    _max: LocalVotacao_has_candidatoEleicaoMaxAggregateOutputType | null
  }

  type GetLocalVotacao_has_candidatoEleicaoGroupByPayload<T extends LocalVotacao_has_candidatoEleicaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocalVotacao_has_candidatoEleicaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocalVotacao_has_candidatoEleicaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocalVotacao_has_candidatoEleicaoGroupByOutputType[P]>
            : GetScalarType<T[P], LocalVotacao_has_candidatoEleicaoGroupByOutputType[P]>
        }
      >
    >


  export type LocalVotacao_has_candidatoEleicaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    localVotacaoUuid?: boolean
    candidatosEleicaoSequencial?: boolean
    localvontacao?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
    candidatoEleicao?: boolean | CandidatosEleicaoDefaultArgs<ExtArgs>
    quantidade_votos_eleicao?: boolean | LocalVotacao_has_candidatoEleicao$quantidade_votos_eleicaoArgs<ExtArgs>
    _count?: boolean | LocalVotacao_has_candidatoEleicaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["localVotacao_has_candidatoEleicao"]>

  export type LocalVotacao_has_candidatoEleicaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    localVotacaoUuid?: boolean
    candidatosEleicaoSequencial?: boolean
    localvontacao?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
    candidatoEleicao?: boolean | CandidatosEleicaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["localVotacao_has_candidatoEleicao"]>

  export type LocalVotacao_has_candidatoEleicaoSelectScalar = {
    uuid?: boolean
    localVotacaoUuid?: boolean
    candidatosEleicaoSequencial?: boolean
  }

  export type LocalVotacao_has_candidatoEleicaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    localvontacao?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
    candidatoEleicao?: boolean | CandidatosEleicaoDefaultArgs<ExtArgs>
    quantidade_votos_eleicao?: boolean | LocalVotacao_has_candidatoEleicao$quantidade_votos_eleicaoArgs<ExtArgs>
    _count?: boolean | LocalVotacao_has_candidatoEleicaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocalVotacao_has_candidatoEleicaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    localvontacao?: boolean | LocalVotacaoDefaultArgs<ExtArgs>
    candidatoEleicao?: boolean | CandidatosEleicaoDefaultArgs<ExtArgs>
  }

  export type $LocalVotacao_has_candidatoEleicaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LocalVotacao_has_candidatoEleicao"
    objects: {
      localvontacao: Prisma.$LocalVotacaoPayload<ExtArgs>
      candidatoEleicao: Prisma.$CandidatosEleicaoPayload<ExtArgs>
      quantidade_votos_eleicao: Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      localVotacaoUuid: number
      candidatosEleicaoSequencial: bigint
    }, ExtArgs["result"]["localVotacao_has_candidatoEleicao"]>
    composites: {}
  }

  type LocalVotacao_has_candidatoEleicaoGetPayload<S extends boolean | null | undefined | LocalVotacao_has_candidatoEleicaoDefaultArgs> = $Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload, S>

  type LocalVotacao_has_candidatoEleicaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LocalVotacao_has_candidatoEleicaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LocalVotacao_has_candidatoEleicaoCountAggregateInputType | true
    }

  export interface LocalVotacao_has_candidatoEleicaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LocalVotacao_has_candidatoEleicao'], meta: { name: 'LocalVotacao_has_candidatoEleicao' } }
    /**
     * Find zero or one LocalVotacao_has_candidatoEleicao that matches the filter.
     * @param {LocalVotacao_has_candidatoEleicaoFindUniqueArgs} args - Arguments to find a LocalVotacao_has_candidatoEleicao
     * @example
     * // Get one LocalVotacao_has_candidatoEleicao
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocalVotacao_has_candidatoEleicaoFindUniqueArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoFindUniqueArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one LocalVotacao_has_candidatoEleicao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LocalVotacao_has_candidatoEleicaoFindUniqueOrThrowArgs} args - Arguments to find a LocalVotacao_has_candidatoEleicao
     * @example
     * // Get one LocalVotacao_has_candidatoEleicao
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocalVotacao_has_candidatoEleicaoFindUniqueOrThrowArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first LocalVotacao_has_candidatoEleicao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoFindFirstArgs} args - Arguments to find a LocalVotacao_has_candidatoEleicao
     * @example
     * // Get one LocalVotacao_has_candidatoEleicao
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocalVotacao_has_candidatoEleicaoFindFirstArgs>(args?: SelectSubset<T, LocalVotacao_has_candidatoEleicaoFindFirstArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first LocalVotacao_has_candidatoEleicao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoFindFirstOrThrowArgs} args - Arguments to find a LocalVotacao_has_candidatoEleicao
     * @example
     * // Get one LocalVotacao_has_candidatoEleicao
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocalVotacao_has_candidatoEleicaoFindFirstOrThrowArgs>(args?: SelectSubset<T, LocalVotacao_has_candidatoEleicaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more LocalVotacao_has_candidatoEleicaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LocalVotacao_has_candidatoEleicaos
     * const localVotacao_has_candidatoEleicaos = await prisma.localVotacao_has_candidatoEleicao.findMany()
     * 
     * // Get first 10 LocalVotacao_has_candidatoEleicaos
     * const localVotacao_has_candidatoEleicaos = await prisma.localVotacao_has_candidatoEleicao.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const localVotacao_has_candidatoEleicaoWithUuidOnly = await prisma.localVotacao_has_candidatoEleicao.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends LocalVotacao_has_candidatoEleicaoFindManyArgs>(args?: SelectSubset<T, LocalVotacao_has_candidatoEleicaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a LocalVotacao_has_candidatoEleicao.
     * @param {LocalVotacao_has_candidatoEleicaoCreateArgs} args - Arguments to create a LocalVotacao_has_candidatoEleicao.
     * @example
     * // Create one LocalVotacao_has_candidatoEleicao
     * const LocalVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.create({
     *   data: {
     *     // ... data to create a LocalVotacao_has_candidatoEleicao
     *   }
     * })
     * 
     */
    create<T extends LocalVotacao_has_candidatoEleicaoCreateArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoCreateArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many LocalVotacao_has_candidatoEleicaos.
     * @param {LocalVotacao_has_candidatoEleicaoCreateManyArgs} args - Arguments to create many LocalVotacao_has_candidatoEleicaos.
     * @example
     * // Create many LocalVotacao_has_candidatoEleicaos
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocalVotacao_has_candidatoEleicaoCreateManyArgs>(args?: SelectSubset<T, LocalVotacao_has_candidatoEleicaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LocalVotacao_has_candidatoEleicaos and returns the data saved in the database.
     * @param {LocalVotacao_has_candidatoEleicaoCreateManyAndReturnArgs} args - Arguments to create many LocalVotacao_has_candidatoEleicaos.
     * @example
     * // Create many LocalVotacao_has_candidatoEleicaos
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LocalVotacao_has_candidatoEleicaos and only return the `uuid`
     * const localVotacao_has_candidatoEleicaoWithUuidOnly = await prisma.localVotacao_has_candidatoEleicao.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocalVotacao_has_candidatoEleicaoCreateManyAndReturnArgs>(args?: SelectSubset<T, LocalVotacao_has_candidatoEleicaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a LocalVotacao_has_candidatoEleicao.
     * @param {LocalVotacao_has_candidatoEleicaoDeleteArgs} args - Arguments to delete one LocalVotacao_has_candidatoEleicao.
     * @example
     * // Delete one LocalVotacao_has_candidatoEleicao
     * const LocalVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.delete({
     *   where: {
     *     // ... filter to delete one LocalVotacao_has_candidatoEleicao
     *   }
     * })
     * 
     */
    delete<T extends LocalVotacao_has_candidatoEleicaoDeleteArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoDeleteArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one LocalVotacao_has_candidatoEleicao.
     * @param {LocalVotacao_has_candidatoEleicaoUpdateArgs} args - Arguments to update one LocalVotacao_has_candidatoEleicao.
     * @example
     * // Update one LocalVotacao_has_candidatoEleicao
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocalVotacao_has_candidatoEleicaoUpdateArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoUpdateArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more LocalVotacao_has_candidatoEleicaos.
     * @param {LocalVotacao_has_candidatoEleicaoDeleteManyArgs} args - Arguments to filter LocalVotacao_has_candidatoEleicaos to delete.
     * @example
     * // Delete a few LocalVotacao_has_candidatoEleicaos
     * const { count } = await prisma.localVotacao_has_candidatoEleicao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocalVotacao_has_candidatoEleicaoDeleteManyArgs>(args?: SelectSubset<T, LocalVotacao_has_candidatoEleicaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LocalVotacao_has_candidatoEleicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LocalVotacao_has_candidatoEleicaos
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocalVotacao_has_candidatoEleicaoUpdateManyArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LocalVotacao_has_candidatoEleicao.
     * @param {LocalVotacao_has_candidatoEleicaoUpsertArgs} args - Arguments to update or create a LocalVotacao_has_candidatoEleicao.
     * @example
     * // Update or create a LocalVotacao_has_candidatoEleicao
     * const localVotacao_has_candidatoEleicao = await prisma.localVotacao_has_candidatoEleicao.upsert({
     *   create: {
     *     // ... data to create a LocalVotacao_has_candidatoEleicao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LocalVotacao_has_candidatoEleicao we want to update
     *   }
     * })
     */
    upsert<T extends LocalVotacao_has_candidatoEleicaoUpsertArgs>(args: SelectSubset<T, LocalVotacao_has_candidatoEleicaoUpsertArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of LocalVotacao_has_candidatoEleicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoCountArgs} args - Arguments to filter LocalVotacao_has_candidatoEleicaos to count.
     * @example
     * // Count the number of LocalVotacao_has_candidatoEleicaos
     * const count = await prisma.localVotacao_has_candidatoEleicao.count({
     *   where: {
     *     // ... the filter for the LocalVotacao_has_candidatoEleicaos we want to count
     *   }
     * })
    **/
    count<T extends LocalVotacao_has_candidatoEleicaoCountArgs>(
      args?: Subset<T, LocalVotacao_has_candidatoEleicaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocalVotacao_has_candidatoEleicaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LocalVotacao_has_candidatoEleicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocalVotacao_has_candidatoEleicaoAggregateArgs>(args: Subset<T, LocalVotacao_has_candidatoEleicaoAggregateArgs>): Prisma.PrismaPromise<GetLocalVotacao_has_candidatoEleicaoAggregateType<T>>

    /**
     * Group by LocalVotacao_has_candidatoEleicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocalVotacao_has_candidatoEleicaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocalVotacao_has_candidatoEleicaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocalVotacao_has_candidatoEleicaoGroupByArgs['orderBy'] }
        : { orderBy?: LocalVotacao_has_candidatoEleicaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocalVotacao_has_candidatoEleicaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocalVotacao_has_candidatoEleicaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LocalVotacao_has_candidatoEleicao model
   */
  readonly fields: LocalVotacao_has_candidatoEleicaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LocalVotacao_has_candidatoEleicao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocalVotacao_has_candidatoEleicaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    localvontacao<T extends LocalVotacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacaoDefaultArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    candidatoEleicao<T extends CandidatosEleicaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidatosEleicaoDefaultArgs<ExtArgs>>): Prisma__CandidatosEleicaoClient<$Result.GetResult<Prisma.$CandidatosEleicaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    quantidade_votos_eleicao<T extends LocalVotacao_has_candidatoEleicao$quantidade_votos_eleicaoArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao_has_candidatoEleicao$quantidade_votos_eleicaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LocalVotacao_has_candidatoEleicao model
   */ 
  interface LocalVotacao_has_candidatoEleicaoFieldRefs {
    readonly uuid: FieldRef<"LocalVotacao_has_candidatoEleicao", 'String'>
    readonly localVotacaoUuid: FieldRef<"LocalVotacao_has_candidatoEleicao", 'Int'>
    readonly candidatosEleicaoSequencial: FieldRef<"LocalVotacao_has_candidatoEleicao", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * LocalVotacao_has_candidatoEleicao findUnique
   */
  export type LocalVotacao_has_candidatoEleicaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao_has_candidatoEleicao to fetch.
     */
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
  }

  /**
   * LocalVotacao_has_candidatoEleicao findUniqueOrThrow
   */
  export type LocalVotacao_has_candidatoEleicaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao_has_candidatoEleicao to fetch.
     */
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
  }

  /**
   * LocalVotacao_has_candidatoEleicao findFirst
   */
  export type LocalVotacao_has_candidatoEleicaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao_has_candidatoEleicao to fetch.
     */
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacao_has_candidatoEleicaos to fetch.
     */
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput | LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocalVotacao_has_candidatoEleicaos.
     */
    cursor?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacao_has_candidatoEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacao_has_candidatoEleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocalVotacao_has_candidatoEleicaos.
     */
    distinct?: LocalVotacao_has_candidatoEleicaoScalarFieldEnum | LocalVotacao_has_candidatoEleicaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao_has_candidatoEleicao findFirstOrThrow
   */
  export type LocalVotacao_has_candidatoEleicaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao_has_candidatoEleicao to fetch.
     */
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacao_has_candidatoEleicaos to fetch.
     */
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput | LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocalVotacao_has_candidatoEleicaos.
     */
    cursor?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacao_has_candidatoEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacao_has_candidatoEleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocalVotacao_has_candidatoEleicaos.
     */
    distinct?: LocalVotacao_has_candidatoEleicaoScalarFieldEnum | LocalVotacao_has_candidatoEleicaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao_has_candidatoEleicao findMany
   */
  export type LocalVotacao_has_candidatoEleicaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * Filter, which LocalVotacao_has_candidatoEleicaos to fetch.
     */
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocalVotacao_has_candidatoEleicaos to fetch.
     */
    orderBy?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput | LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LocalVotacao_has_candidatoEleicaos.
     */
    cursor?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocalVotacao_has_candidatoEleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocalVotacao_has_candidatoEleicaos.
     */
    skip?: number
    distinct?: LocalVotacao_has_candidatoEleicaoScalarFieldEnum | LocalVotacao_has_candidatoEleicaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao_has_candidatoEleicao create
   */
  export type LocalVotacao_has_candidatoEleicaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * The data needed to create a LocalVotacao_has_candidatoEleicao.
     */
    data: XOR<LocalVotacao_has_candidatoEleicaoCreateInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateInput>
  }

  /**
   * LocalVotacao_has_candidatoEleicao createMany
   */
  export type LocalVotacao_has_candidatoEleicaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LocalVotacao_has_candidatoEleicaos.
     */
    data: LocalVotacao_has_candidatoEleicaoCreateManyInput | LocalVotacao_has_candidatoEleicaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LocalVotacao_has_candidatoEleicao createManyAndReturn
   */
  export type LocalVotacao_has_candidatoEleicaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many LocalVotacao_has_candidatoEleicaos.
     */
    data: LocalVotacao_has_candidatoEleicaoCreateManyInput | LocalVotacao_has_candidatoEleicaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LocalVotacao_has_candidatoEleicao update
   */
  export type LocalVotacao_has_candidatoEleicaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * The data needed to update a LocalVotacao_has_candidatoEleicao.
     */
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateInput>
    /**
     * Choose, which LocalVotacao_has_candidatoEleicao to update.
     */
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
  }

  /**
   * LocalVotacao_has_candidatoEleicao updateMany
   */
  export type LocalVotacao_has_candidatoEleicaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LocalVotacao_has_candidatoEleicaos.
     */
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateManyMutationInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyInput>
    /**
     * Filter which LocalVotacao_has_candidatoEleicaos to update
     */
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
  }

  /**
   * LocalVotacao_has_candidatoEleicao upsert
   */
  export type LocalVotacao_has_candidatoEleicaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * The filter to search for the LocalVotacao_has_candidatoEleicao to update in case it exists.
     */
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    /**
     * In case the LocalVotacao_has_candidatoEleicao found by the `where` argument doesn't exist, create a new LocalVotacao_has_candidatoEleicao with this data.
     */
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateInput>
    /**
     * In case the LocalVotacao_has_candidatoEleicao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocalVotacao_has_candidatoEleicaoUpdateInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateInput>
  }

  /**
   * LocalVotacao_has_candidatoEleicao delete
   */
  export type LocalVotacao_has_candidatoEleicaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
    /**
     * Filter which LocalVotacao_has_candidatoEleicao to delete.
     */
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
  }

  /**
   * LocalVotacao_has_candidatoEleicao deleteMany
   */
  export type LocalVotacao_has_candidatoEleicaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LocalVotacao_has_candidatoEleicaos to delete
     */
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
  }

  /**
   * LocalVotacao_has_candidatoEleicao.quantidade_votos_eleicao
   */
  export type LocalVotacao_has_candidatoEleicao$quantidade_votos_eleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    where?: quantidade_votos_eleicaoWhereInput
    orderBy?: quantidade_votos_eleicaoOrderByWithRelationInput | quantidade_votos_eleicaoOrderByWithRelationInput[]
    cursor?: quantidade_votos_eleicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Quantidade_votos_eleicaoScalarFieldEnum | Quantidade_votos_eleicaoScalarFieldEnum[]
  }

  /**
   * LocalVotacao_has_candidatoEleicao without action
   */
  export type LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao_has_candidatoEleicao
     */
    select?: LocalVotacao_has_candidatoEleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacao_has_candidatoEleicaoInclude<ExtArgs> | null
  }


  /**
   * Model quantidade_votos_eleicao
   */

  export type AggregateQuantidade_votos_eleicao = {
    _count: Quantidade_votos_eleicaoCountAggregateOutputType | null
    _avg: Quantidade_votos_eleicaoAvgAggregateOutputType | null
    _sum: Quantidade_votos_eleicaoSumAggregateOutputType | null
    _min: Quantidade_votos_eleicaoMinAggregateOutputType | null
    _max: Quantidade_votos_eleicaoMaxAggregateOutputType | null
  }

  export type Quantidade_votos_eleicaoAvgAggregateOutputType = {
    votos: number | null
  }

  export type Quantidade_votos_eleicaoSumAggregateOutputType = {
    votos: number | null
  }

  export type Quantidade_votos_eleicaoMinAggregateOutputType = {
    uuidLocal: string | null
    votos: number | null
  }

  export type Quantidade_votos_eleicaoMaxAggregateOutputType = {
    uuidLocal: string | null
    votos: number | null
  }

  export type Quantidade_votos_eleicaoCountAggregateOutputType = {
    uuidLocal: number
    votos: number
    _all: number
  }


  export type Quantidade_votos_eleicaoAvgAggregateInputType = {
    votos?: true
  }

  export type Quantidade_votos_eleicaoSumAggregateInputType = {
    votos?: true
  }

  export type Quantidade_votos_eleicaoMinAggregateInputType = {
    uuidLocal?: true
    votos?: true
  }

  export type Quantidade_votos_eleicaoMaxAggregateInputType = {
    uuidLocal?: true
    votos?: true
  }

  export type Quantidade_votos_eleicaoCountAggregateInputType = {
    uuidLocal?: true
    votos?: true
    _all?: true
  }

  export type Quantidade_votos_eleicaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which quantidade_votos_eleicao to aggregate.
     */
    where?: quantidade_votos_eleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quantidade_votos_eleicaos to fetch.
     */
    orderBy?: quantidade_votos_eleicaoOrderByWithRelationInput | quantidade_votos_eleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: quantidade_votos_eleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quantidade_votos_eleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quantidade_votos_eleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned quantidade_votos_eleicaos
    **/
    _count?: true | Quantidade_votos_eleicaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Quantidade_votos_eleicaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Quantidade_votos_eleicaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Quantidade_votos_eleicaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Quantidade_votos_eleicaoMaxAggregateInputType
  }

  export type GetQuantidade_votos_eleicaoAggregateType<T extends Quantidade_votos_eleicaoAggregateArgs> = {
        [P in keyof T & keyof AggregateQuantidade_votos_eleicao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuantidade_votos_eleicao[P]>
      : GetScalarType<T[P], AggregateQuantidade_votos_eleicao[P]>
  }




  export type quantidade_votos_eleicaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: quantidade_votos_eleicaoWhereInput
    orderBy?: quantidade_votos_eleicaoOrderByWithAggregationInput | quantidade_votos_eleicaoOrderByWithAggregationInput[]
    by: Quantidade_votos_eleicaoScalarFieldEnum[] | Quantidade_votos_eleicaoScalarFieldEnum
    having?: quantidade_votos_eleicaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Quantidade_votos_eleicaoCountAggregateInputType | true
    _avg?: Quantidade_votos_eleicaoAvgAggregateInputType
    _sum?: Quantidade_votos_eleicaoSumAggregateInputType
    _min?: Quantidade_votos_eleicaoMinAggregateInputType
    _max?: Quantidade_votos_eleicaoMaxAggregateInputType
  }

  export type Quantidade_votos_eleicaoGroupByOutputType = {
    uuidLocal: string
    votos: number
    _count: Quantidade_votos_eleicaoCountAggregateOutputType | null
    _avg: Quantidade_votos_eleicaoAvgAggregateOutputType | null
    _sum: Quantidade_votos_eleicaoSumAggregateOutputType | null
    _min: Quantidade_votos_eleicaoMinAggregateOutputType | null
    _max: Quantidade_votos_eleicaoMaxAggregateOutputType | null
  }

  type GetQuantidade_votos_eleicaoGroupByPayload<T extends quantidade_votos_eleicaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Quantidade_votos_eleicaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Quantidade_votos_eleicaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Quantidade_votos_eleicaoGroupByOutputType[P]>
            : GetScalarType<T[P], Quantidade_votos_eleicaoGroupByOutputType[P]>
        }
      >
    >


  export type quantidade_votos_eleicaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuidLocal?: boolean
    votos?: boolean
    localvotacao?: boolean | LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quantidade_votos_eleicao"]>

  export type quantidade_votos_eleicaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuidLocal?: boolean
    votos?: boolean
    localvotacao?: boolean | LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["quantidade_votos_eleicao"]>

  export type quantidade_votos_eleicaoSelectScalar = {
    uuidLocal?: boolean
    votos?: boolean
  }

  export type quantidade_votos_eleicaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    localvotacao?: boolean | LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs>
  }
  export type quantidade_votos_eleicaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    localvotacao?: boolean | LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs>
  }

  export type $quantidade_votos_eleicaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "quantidade_votos_eleicao"
    objects: {
      localvotacao: Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuidLocal: string
      votos: number
    }, ExtArgs["result"]["quantidade_votos_eleicao"]>
    composites: {}
  }

  type quantidade_votos_eleicaoGetPayload<S extends boolean | null | undefined | quantidade_votos_eleicaoDefaultArgs> = $Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload, S>

  type quantidade_votos_eleicaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<quantidade_votos_eleicaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Quantidade_votos_eleicaoCountAggregateInputType | true
    }

  export interface quantidade_votos_eleicaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['quantidade_votos_eleicao'], meta: { name: 'quantidade_votos_eleicao' } }
    /**
     * Find zero or one Quantidade_votos_eleicao that matches the filter.
     * @param {quantidade_votos_eleicaoFindUniqueArgs} args - Arguments to find a Quantidade_votos_eleicao
     * @example
     * // Get one Quantidade_votos_eleicao
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends quantidade_votos_eleicaoFindUniqueArgs>(args: SelectSubset<T, quantidade_votos_eleicaoFindUniqueArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Quantidade_votos_eleicao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {quantidade_votos_eleicaoFindUniqueOrThrowArgs} args - Arguments to find a Quantidade_votos_eleicao
     * @example
     * // Get one Quantidade_votos_eleicao
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends quantidade_votos_eleicaoFindUniqueOrThrowArgs>(args: SelectSubset<T, quantidade_votos_eleicaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Quantidade_votos_eleicao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quantidade_votos_eleicaoFindFirstArgs} args - Arguments to find a Quantidade_votos_eleicao
     * @example
     * // Get one Quantidade_votos_eleicao
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends quantidade_votos_eleicaoFindFirstArgs>(args?: SelectSubset<T, quantidade_votos_eleicaoFindFirstArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Quantidade_votos_eleicao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quantidade_votos_eleicaoFindFirstOrThrowArgs} args - Arguments to find a Quantidade_votos_eleicao
     * @example
     * // Get one Quantidade_votos_eleicao
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends quantidade_votos_eleicaoFindFirstOrThrowArgs>(args?: SelectSubset<T, quantidade_votos_eleicaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Quantidade_votos_eleicaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quantidade_votos_eleicaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Quantidade_votos_eleicaos
     * const quantidade_votos_eleicaos = await prisma.quantidade_votos_eleicao.findMany()
     * 
     * // Get first 10 Quantidade_votos_eleicaos
     * const quantidade_votos_eleicaos = await prisma.quantidade_votos_eleicao.findMany({ take: 10 })
     * 
     * // Only select the `uuidLocal`
     * const quantidade_votos_eleicaoWithUuidLocalOnly = await prisma.quantidade_votos_eleicao.findMany({ select: { uuidLocal: true } })
     * 
     */
    findMany<T extends quantidade_votos_eleicaoFindManyArgs>(args?: SelectSubset<T, quantidade_votos_eleicaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Quantidade_votos_eleicao.
     * @param {quantidade_votos_eleicaoCreateArgs} args - Arguments to create a Quantidade_votos_eleicao.
     * @example
     * // Create one Quantidade_votos_eleicao
     * const Quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.create({
     *   data: {
     *     // ... data to create a Quantidade_votos_eleicao
     *   }
     * })
     * 
     */
    create<T extends quantidade_votos_eleicaoCreateArgs>(args: SelectSubset<T, quantidade_votos_eleicaoCreateArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Quantidade_votos_eleicaos.
     * @param {quantidade_votos_eleicaoCreateManyArgs} args - Arguments to create many Quantidade_votos_eleicaos.
     * @example
     * // Create many Quantidade_votos_eleicaos
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends quantidade_votos_eleicaoCreateManyArgs>(args?: SelectSubset<T, quantidade_votos_eleicaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Quantidade_votos_eleicaos and returns the data saved in the database.
     * @param {quantidade_votos_eleicaoCreateManyAndReturnArgs} args - Arguments to create many Quantidade_votos_eleicaos.
     * @example
     * // Create many Quantidade_votos_eleicaos
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Quantidade_votos_eleicaos and only return the `uuidLocal`
     * const quantidade_votos_eleicaoWithUuidLocalOnly = await prisma.quantidade_votos_eleicao.createManyAndReturn({ 
     *   select: { uuidLocal: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends quantidade_votos_eleicaoCreateManyAndReturnArgs>(args?: SelectSubset<T, quantidade_votos_eleicaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Quantidade_votos_eleicao.
     * @param {quantidade_votos_eleicaoDeleteArgs} args - Arguments to delete one Quantidade_votos_eleicao.
     * @example
     * // Delete one Quantidade_votos_eleicao
     * const Quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.delete({
     *   where: {
     *     // ... filter to delete one Quantidade_votos_eleicao
     *   }
     * })
     * 
     */
    delete<T extends quantidade_votos_eleicaoDeleteArgs>(args: SelectSubset<T, quantidade_votos_eleicaoDeleteArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Quantidade_votos_eleicao.
     * @param {quantidade_votos_eleicaoUpdateArgs} args - Arguments to update one Quantidade_votos_eleicao.
     * @example
     * // Update one Quantidade_votos_eleicao
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends quantidade_votos_eleicaoUpdateArgs>(args: SelectSubset<T, quantidade_votos_eleicaoUpdateArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Quantidade_votos_eleicaos.
     * @param {quantidade_votos_eleicaoDeleteManyArgs} args - Arguments to filter Quantidade_votos_eleicaos to delete.
     * @example
     * // Delete a few Quantidade_votos_eleicaos
     * const { count } = await prisma.quantidade_votos_eleicao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends quantidade_votos_eleicaoDeleteManyArgs>(args?: SelectSubset<T, quantidade_votos_eleicaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Quantidade_votos_eleicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quantidade_votos_eleicaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Quantidade_votos_eleicaos
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends quantidade_votos_eleicaoUpdateManyArgs>(args: SelectSubset<T, quantidade_votos_eleicaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Quantidade_votos_eleicao.
     * @param {quantidade_votos_eleicaoUpsertArgs} args - Arguments to update or create a Quantidade_votos_eleicao.
     * @example
     * // Update or create a Quantidade_votos_eleicao
     * const quantidade_votos_eleicao = await prisma.quantidade_votos_eleicao.upsert({
     *   create: {
     *     // ... data to create a Quantidade_votos_eleicao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Quantidade_votos_eleicao we want to update
     *   }
     * })
     */
    upsert<T extends quantidade_votos_eleicaoUpsertArgs>(args: SelectSubset<T, quantidade_votos_eleicaoUpsertArgs<ExtArgs>>): Prisma__quantidade_votos_eleicaoClient<$Result.GetResult<Prisma.$quantidade_votos_eleicaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Quantidade_votos_eleicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quantidade_votos_eleicaoCountArgs} args - Arguments to filter Quantidade_votos_eleicaos to count.
     * @example
     * // Count the number of Quantidade_votos_eleicaos
     * const count = await prisma.quantidade_votos_eleicao.count({
     *   where: {
     *     // ... the filter for the Quantidade_votos_eleicaos we want to count
     *   }
     * })
    **/
    count<T extends quantidade_votos_eleicaoCountArgs>(
      args?: Subset<T, quantidade_votos_eleicaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Quantidade_votos_eleicaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Quantidade_votos_eleicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Quantidade_votos_eleicaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Quantidade_votos_eleicaoAggregateArgs>(args: Subset<T, Quantidade_votos_eleicaoAggregateArgs>): Prisma.PrismaPromise<GetQuantidade_votos_eleicaoAggregateType<T>>

    /**
     * Group by Quantidade_votos_eleicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {quantidade_votos_eleicaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends quantidade_votos_eleicaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: quantidade_votos_eleicaoGroupByArgs['orderBy'] }
        : { orderBy?: quantidade_votos_eleicaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, quantidade_votos_eleicaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuantidade_votos_eleicaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the quantidade_votos_eleicao model
   */
  readonly fields: quantidade_votos_eleicaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for quantidade_votos_eleicao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__quantidade_votos_eleicaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    localvotacao<T extends LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs>>): Prisma__LocalVotacao_has_candidatoEleicaoClient<$Result.GetResult<Prisma.$LocalVotacao_has_candidatoEleicaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the quantidade_votos_eleicao model
   */ 
  interface quantidade_votos_eleicaoFieldRefs {
    readonly uuidLocal: FieldRef<"quantidade_votos_eleicao", 'String'>
    readonly votos: FieldRef<"quantidade_votos_eleicao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * quantidade_votos_eleicao findUnique
   */
  export type quantidade_votos_eleicaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * Filter, which quantidade_votos_eleicao to fetch.
     */
    where: quantidade_votos_eleicaoWhereUniqueInput
  }

  /**
   * quantidade_votos_eleicao findUniqueOrThrow
   */
  export type quantidade_votos_eleicaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * Filter, which quantidade_votos_eleicao to fetch.
     */
    where: quantidade_votos_eleicaoWhereUniqueInput
  }

  /**
   * quantidade_votos_eleicao findFirst
   */
  export type quantidade_votos_eleicaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * Filter, which quantidade_votos_eleicao to fetch.
     */
    where?: quantidade_votos_eleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quantidade_votos_eleicaos to fetch.
     */
    orderBy?: quantidade_votos_eleicaoOrderByWithRelationInput | quantidade_votos_eleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for quantidade_votos_eleicaos.
     */
    cursor?: quantidade_votos_eleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quantidade_votos_eleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quantidade_votos_eleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of quantidade_votos_eleicaos.
     */
    distinct?: Quantidade_votos_eleicaoScalarFieldEnum | Quantidade_votos_eleicaoScalarFieldEnum[]
  }

  /**
   * quantidade_votos_eleicao findFirstOrThrow
   */
  export type quantidade_votos_eleicaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * Filter, which quantidade_votos_eleicao to fetch.
     */
    where?: quantidade_votos_eleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quantidade_votos_eleicaos to fetch.
     */
    orderBy?: quantidade_votos_eleicaoOrderByWithRelationInput | quantidade_votos_eleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for quantidade_votos_eleicaos.
     */
    cursor?: quantidade_votos_eleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quantidade_votos_eleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quantidade_votos_eleicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of quantidade_votos_eleicaos.
     */
    distinct?: Quantidade_votos_eleicaoScalarFieldEnum | Quantidade_votos_eleicaoScalarFieldEnum[]
  }

  /**
   * quantidade_votos_eleicao findMany
   */
  export type quantidade_votos_eleicaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * Filter, which quantidade_votos_eleicaos to fetch.
     */
    where?: quantidade_votos_eleicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of quantidade_votos_eleicaos to fetch.
     */
    orderBy?: quantidade_votos_eleicaoOrderByWithRelationInput | quantidade_votos_eleicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing quantidade_votos_eleicaos.
     */
    cursor?: quantidade_votos_eleicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` quantidade_votos_eleicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` quantidade_votos_eleicaos.
     */
    skip?: number
    distinct?: Quantidade_votos_eleicaoScalarFieldEnum | Quantidade_votos_eleicaoScalarFieldEnum[]
  }

  /**
   * quantidade_votos_eleicao create
   */
  export type quantidade_votos_eleicaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * The data needed to create a quantidade_votos_eleicao.
     */
    data: XOR<quantidade_votos_eleicaoCreateInput, quantidade_votos_eleicaoUncheckedCreateInput>
  }

  /**
   * quantidade_votos_eleicao createMany
   */
  export type quantidade_votos_eleicaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many quantidade_votos_eleicaos.
     */
    data: quantidade_votos_eleicaoCreateManyInput | quantidade_votos_eleicaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * quantidade_votos_eleicao createManyAndReturn
   */
  export type quantidade_votos_eleicaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many quantidade_votos_eleicaos.
     */
    data: quantidade_votos_eleicaoCreateManyInput | quantidade_votos_eleicaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * quantidade_votos_eleicao update
   */
  export type quantidade_votos_eleicaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * The data needed to update a quantidade_votos_eleicao.
     */
    data: XOR<quantidade_votos_eleicaoUpdateInput, quantidade_votos_eleicaoUncheckedUpdateInput>
    /**
     * Choose, which quantidade_votos_eleicao to update.
     */
    where: quantidade_votos_eleicaoWhereUniqueInput
  }

  /**
   * quantidade_votos_eleicao updateMany
   */
  export type quantidade_votos_eleicaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update quantidade_votos_eleicaos.
     */
    data: XOR<quantidade_votos_eleicaoUpdateManyMutationInput, quantidade_votos_eleicaoUncheckedUpdateManyInput>
    /**
     * Filter which quantidade_votos_eleicaos to update
     */
    where?: quantidade_votos_eleicaoWhereInput
  }

  /**
   * quantidade_votos_eleicao upsert
   */
  export type quantidade_votos_eleicaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * The filter to search for the quantidade_votos_eleicao to update in case it exists.
     */
    where: quantidade_votos_eleicaoWhereUniqueInput
    /**
     * In case the quantidade_votos_eleicao found by the `where` argument doesn't exist, create a new quantidade_votos_eleicao with this data.
     */
    create: XOR<quantidade_votos_eleicaoCreateInput, quantidade_votos_eleicaoUncheckedCreateInput>
    /**
     * In case the quantidade_votos_eleicao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<quantidade_votos_eleicaoUpdateInput, quantidade_votos_eleicaoUncheckedUpdateInput>
  }

  /**
   * quantidade_votos_eleicao delete
   */
  export type quantidade_votos_eleicaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
    /**
     * Filter which quantidade_votos_eleicao to delete.
     */
    where: quantidade_votos_eleicaoWhereUniqueInput
  }

  /**
   * quantidade_votos_eleicao deleteMany
   */
  export type quantidade_votos_eleicaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which quantidade_votos_eleicaos to delete
     */
    where?: quantidade_votos_eleicaoWhereInput
  }

  /**
   * quantidade_votos_eleicao without action
   */
  export type quantidade_votos_eleicaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the quantidade_votos_eleicao
     */
    select?: quantidade_votos_eleicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: quantidade_votos_eleicaoInclude<ExtArgs> | null
  }


  /**
   * Model SessoesEleitorais
   */

  export type AggregateSessoesEleitorais = {
    _count: SessoesEleitoraisCountAggregateOutputType | null
    _avg: SessoesEleitoraisAvgAggregateOutputType | null
    _sum: SessoesEleitoraisSumAggregateOutputType | null
    _min: SessoesEleitoraisMinAggregateOutputType | null
    _max: SessoesEleitoraisMaxAggregateOutputType | null
  }

  export type SessoesEleitoraisAvgAggregateOutputType = {
    nVotantes: number | null
    localVotacaoUuid: number | null
  }

  export type SessoesEleitoraisSumAggregateOutputType = {
    nVotantes: number | null
    localVotacaoUuid: number | null
  }

  export type SessoesEleitoraisMinAggregateOutputType = {
    uuid: string | null
    sessao: string | null
    zona: string | null
    nVotantes: number | null
    localVotacaoUuid: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessoesEleitoraisMaxAggregateOutputType = {
    uuid: string | null
    sessao: string | null
    zona: string | null
    nVotantes: number | null
    localVotacaoUuid: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessoesEleitoraisCountAggregateOutputType = {
    uuid: number
    sessao: number
    zona: number
    nVotantes: number
    localVotacaoUuid: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SessoesEleitoraisAvgAggregateInputType = {
    nVotantes?: true
    localVotacaoUuid?: true
  }

  export type SessoesEleitoraisSumAggregateInputType = {
    nVotantes?: true
    localVotacaoUuid?: true
  }

  export type SessoesEleitoraisMinAggregateInputType = {
    uuid?: true
    sessao?: true
    zona?: true
    nVotantes?: true
    localVotacaoUuid?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessoesEleitoraisMaxAggregateInputType = {
    uuid?: true
    sessao?: true
    zona?: true
    nVotantes?: true
    localVotacaoUuid?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessoesEleitoraisCountAggregateInputType = {
    uuid?: true
    sessao?: true
    zona?: true
    nVotantes?: true
    localVotacaoUuid?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SessoesEleitoraisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SessoesEleitorais to aggregate.
     */
    where?: SessoesEleitoraisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SessoesEleitorais to fetch.
     */
    orderBy?: SessoesEleitoraisOrderByWithRelationInput | SessoesEleitoraisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessoesEleitoraisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SessoesEleitorais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SessoesEleitorais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SessoesEleitorais
    **/
    _count?: true | SessoesEleitoraisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SessoesEleitoraisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SessoesEleitoraisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessoesEleitoraisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessoesEleitoraisMaxAggregateInputType
  }

  export type GetSessoesEleitoraisAggregateType<T extends SessoesEleitoraisAggregateArgs> = {
        [P in keyof T & keyof AggregateSessoesEleitorais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessoesEleitorais[P]>
      : GetScalarType<T[P], AggregateSessoesEleitorais[P]>
  }




  export type SessoesEleitoraisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessoesEleitoraisWhereInput
    orderBy?: SessoesEleitoraisOrderByWithAggregationInput | SessoesEleitoraisOrderByWithAggregationInput[]
    by: SessoesEleitoraisScalarFieldEnum[] | SessoesEleitoraisScalarFieldEnum
    having?: SessoesEleitoraisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessoesEleitoraisCountAggregateInputType | true
    _avg?: SessoesEleitoraisAvgAggregateInputType
    _sum?: SessoesEleitoraisSumAggregateInputType
    _min?: SessoesEleitoraisMinAggregateInputType
    _max?: SessoesEleitoraisMaxAggregateInputType
  }

  export type SessoesEleitoraisGroupByOutputType = {
    uuid: string
    sessao: string
    zona: string
    nVotantes: number
    localVotacaoUuid: number | null
    createdAt: Date
    updatedAt: Date
    _count: SessoesEleitoraisCountAggregateOutputType | null
    _avg: SessoesEleitoraisAvgAggregateOutputType | null
    _sum: SessoesEleitoraisSumAggregateOutputType | null
    _min: SessoesEleitoraisMinAggregateOutputType | null
    _max: SessoesEleitoraisMaxAggregateOutputType | null
  }

  type GetSessoesEleitoraisGroupByPayload<T extends SessoesEleitoraisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessoesEleitoraisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessoesEleitoraisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessoesEleitoraisGroupByOutputType[P]>
            : GetScalarType<T[P], SessoesEleitoraisGroupByOutputType[P]>
        }
      >
    >


  export type SessoesEleitoraisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    sessao?: boolean
    zona?: boolean
    nVotantes?: boolean
    localVotacaoUuid?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    LocalVotacao?: boolean | SessoesEleitorais$LocalVotacaoArgs<ExtArgs>
  }, ExtArgs["result"]["sessoesEleitorais"]>

  export type SessoesEleitoraisSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    sessao?: boolean
    zona?: boolean
    nVotantes?: boolean
    localVotacaoUuid?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    LocalVotacao?: boolean | SessoesEleitorais$LocalVotacaoArgs<ExtArgs>
  }, ExtArgs["result"]["sessoesEleitorais"]>

  export type SessoesEleitoraisSelectScalar = {
    uuid?: boolean
    sessao?: boolean
    zona?: boolean
    nVotantes?: boolean
    localVotacaoUuid?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SessoesEleitoraisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LocalVotacao?: boolean | SessoesEleitorais$LocalVotacaoArgs<ExtArgs>
  }
  export type SessoesEleitoraisIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LocalVotacao?: boolean | SessoesEleitorais$LocalVotacaoArgs<ExtArgs>
  }

  export type $SessoesEleitoraisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SessoesEleitorais"
    objects: {
      LocalVotacao: Prisma.$LocalVotacaoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      sessao: string
      zona: string
      nVotantes: number
      localVotacaoUuid: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["sessoesEleitorais"]>
    composites: {}
  }

  type SessoesEleitoraisGetPayload<S extends boolean | null | undefined | SessoesEleitoraisDefaultArgs> = $Result.GetResult<Prisma.$SessoesEleitoraisPayload, S>

  type SessoesEleitoraisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SessoesEleitoraisFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SessoesEleitoraisCountAggregateInputType | true
    }

  export interface SessoesEleitoraisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SessoesEleitorais'], meta: { name: 'SessoesEleitorais' } }
    /**
     * Find zero or one SessoesEleitorais that matches the filter.
     * @param {SessoesEleitoraisFindUniqueArgs} args - Arguments to find a SessoesEleitorais
     * @example
     * // Get one SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessoesEleitoraisFindUniqueArgs>(args: SelectSubset<T, SessoesEleitoraisFindUniqueArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SessoesEleitorais that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SessoesEleitoraisFindUniqueOrThrowArgs} args - Arguments to find a SessoesEleitorais
     * @example
     * // Get one SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessoesEleitoraisFindUniqueOrThrowArgs>(args: SelectSubset<T, SessoesEleitoraisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SessoesEleitorais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisFindFirstArgs} args - Arguments to find a SessoesEleitorais
     * @example
     * // Get one SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessoesEleitoraisFindFirstArgs>(args?: SelectSubset<T, SessoesEleitoraisFindFirstArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SessoesEleitorais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisFindFirstOrThrowArgs} args - Arguments to find a SessoesEleitorais
     * @example
     * // Get one SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessoesEleitoraisFindFirstOrThrowArgs>(args?: SelectSubset<T, SessoesEleitoraisFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SessoesEleitorais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.findMany()
     * 
     * // Get first 10 SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const sessoesEleitoraisWithUuidOnly = await prisma.sessoesEleitorais.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends SessoesEleitoraisFindManyArgs>(args?: SelectSubset<T, SessoesEleitoraisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SessoesEleitorais.
     * @param {SessoesEleitoraisCreateArgs} args - Arguments to create a SessoesEleitorais.
     * @example
     * // Create one SessoesEleitorais
     * const SessoesEleitorais = await prisma.sessoesEleitorais.create({
     *   data: {
     *     // ... data to create a SessoesEleitorais
     *   }
     * })
     * 
     */
    create<T extends SessoesEleitoraisCreateArgs>(args: SelectSubset<T, SessoesEleitoraisCreateArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SessoesEleitorais.
     * @param {SessoesEleitoraisCreateManyArgs} args - Arguments to create many SessoesEleitorais.
     * @example
     * // Create many SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessoesEleitoraisCreateManyArgs>(args?: SelectSubset<T, SessoesEleitoraisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SessoesEleitorais and returns the data saved in the database.
     * @param {SessoesEleitoraisCreateManyAndReturnArgs} args - Arguments to create many SessoesEleitorais.
     * @example
     * // Create many SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SessoesEleitorais and only return the `uuid`
     * const sessoesEleitoraisWithUuidOnly = await prisma.sessoesEleitorais.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessoesEleitoraisCreateManyAndReturnArgs>(args?: SelectSubset<T, SessoesEleitoraisCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SessoesEleitorais.
     * @param {SessoesEleitoraisDeleteArgs} args - Arguments to delete one SessoesEleitorais.
     * @example
     * // Delete one SessoesEleitorais
     * const SessoesEleitorais = await prisma.sessoesEleitorais.delete({
     *   where: {
     *     // ... filter to delete one SessoesEleitorais
     *   }
     * })
     * 
     */
    delete<T extends SessoesEleitoraisDeleteArgs>(args: SelectSubset<T, SessoesEleitoraisDeleteArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SessoesEleitorais.
     * @param {SessoesEleitoraisUpdateArgs} args - Arguments to update one SessoesEleitorais.
     * @example
     * // Update one SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessoesEleitoraisUpdateArgs>(args: SelectSubset<T, SessoesEleitoraisUpdateArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SessoesEleitorais.
     * @param {SessoesEleitoraisDeleteManyArgs} args - Arguments to filter SessoesEleitorais to delete.
     * @example
     * // Delete a few SessoesEleitorais
     * const { count } = await prisma.sessoesEleitorais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessoesEleitoraisDeleteManyArgs>(args?: SelectSubset<T, SessoesEleitoraisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SessoesEleitorais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessoesEleitoraisUpdateManyArgs>(args: SelectSubset<T, SessoesEleitoraisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SessoesEleitorais.
     * @param {SessoesEleitoraisUpsertArgs} args - Arguments to update or create a SessoesEleitorais.
     * @example
     * // Update or create a SessoesEleitorais
     * const sessoesEleitorais = await prisma.sessoesEleitorais.upsert({
     *   create: {
     *     // ... data to create a SessoesEleitorais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SessoesEleitorais we want to update
     *   }
     * })
     */
    upsert<T extends SessoesEleitoraisUpsertArgs>(args: SelectSubset<T, SessoesEleitoraisUpsertArgs<ExtArgs>>): Prisma__SessoesEleitoraisClient<$Result.GetResult<Prisma.$SessoesEleitoraisPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SessoesEleitorais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisCountArgs} args - Arguments to filter SessoesEleitorais to count.
     * @example
     * // Count the number of SessoesEleitorais
     * const count = await prisma.sessoesEleitorais.count({
     *   where: {
     *     // ... the filter for the SessoesEleitorais we want to count
     *   }
     * })
    **/
    count<T extends SessoesEleitoraisCountArgs>(
      args?: Subset<T, SessoesEleitoraisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessoesEleitoraisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SessoesEleitorais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessoesEleitoraisAggregateArgs>(args: Subset<T, SessoesEleitoraisAggregateArgs>): Prisma.PrismaPromise<GetSessoesEleitoraisAggregateType<T>>

    /**
     * Group by SessoesEleitorais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessoesEleitoraisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessoesEleitoraisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessoesEleitoraisGroupByArgs['orderBy'] }
        : { orderBy?: SessoesEleitoraisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessoesEleitoraisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessoesEleitoraisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SessoesEleitorais model
   */
  readonly fields: SessoesEleitoraisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SessoesEleitorais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessoesEleitoraisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    LocalVotacao<T extends SessoesEleitorais$LocalVotacaoArgs<ExtArgs> = {}>(args?: Subset<T, SessoesEleitorais$LocalVotacaoArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SessoesEleitorais model
   */ 
  interface SessoesEleitoraisFieldRefs {
    readonly uuid: FieldRef<"SessoesEleitorais", 'String'>
    readonly sessao: FieldRef<"SessoesEleitorais", 'String'>
    readonly zona: FieldRef<"SessoesEleitorais", 'String'>
    readonly nVotantes: FieldRef<"SessoesEleitorais", 'Int'>
    readonly localVotacaoUuid: FieldRef<"SessoesEleitorais", 'Int'>
    readonly createdAt: FieldRef<"SessoesEleitorais", 'DateTime'>
    readonly updatedAt: FieldRef<"SessoesEleitorais", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SessoesEleitorais findUnique
   */
  export type SessoesEleitoraisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * Filter, which SessoesEleitorais to fetch.
     */
    where: SessoesEleitoraisWhereUniqueInput
  }

  /**
   * SessoesEleitorais findUniqueOrThrow
   */
  export type SessoesEleitoraisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * Filter, which SessoesEleitorais to fetch.
     */
    where: SessoesEleitoraisWhereUniqueInput
  }

  /**
   * SessoesEleitorais findFirst
   */
  export type SessoesEleitoraisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * Filter, which SessoesEleitorais to fetch.
     */
    where?: SessoesEleitoraisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SessoesEleitorais to fetch.
     */
    orderBy?: SessoesEleitoraisOrderByWithRelationInput | SessoesEleitoraisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SessoesEleitorais.
     */
    cursor?: SessoesEleitoraisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SessoesEleitorais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SessoesEleitorais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SessoesEleitorais.
     */
    distinct?: SessoesEleitoraisScalarFieldEnum | SessoesEleitoraisScalarFieldEnum[]
  }

  /**
   * SessoesEleitorais findFirstOrThrow
   */
  export type SessoesEleitoraisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * Filter, which SessoesEleitorais to fetch.
     */
    where?: SessoesEleitoraisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SessoesEleitorais to fetch.
     */
    orderBy?: SessoesEleitoraisOrderByWithRelationInput | SessoesEleitoraisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SessoesEleitorais.
     */
    cursor?: SessoesEleitoraisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SessoesEleitorais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SessoesEleitorais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SessoesEleitorais.
     */
    distinct?: SessoesEleitoraisScalarFieldEnum | SessoesEleitoraisScalarFieldEnum[]
  }

  /**
   * SessoesEleitorais findMany
   */
  export type SessoesEleitoraisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * Filter, which SessoesEleitorais to fetch.
     */
    where?: SessoesEleitoraisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SessoesEleitorais to fetch.
     */
    orderBy?: SessoesEleitoraisOrderByWithRelationInput | SessoesEleitoraisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SessoesEleitorais.
     */
    cursor?: SessoesEleitoraisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SessoesEleitorais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SessoesEleitorais.
     */
    skip?: number
    distinct?: SessoesEleitoraisScalarFieldEnum | SessoesEleitoraisScalarFieldEnum[]
  }

  /**
   * SessoesEleitorais create
   */
  export type SessoesEleitoraisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * The data needed to create a SessoesEleitorais.
     */
    data: XOR<SessoesEleitoraisCreateInput, SessoesEleitoraisUncheckedCreateInput>
  }

  /**
   * SessoesEleitorais createMany
   */
  export type SessoesEleitoraisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SessoesEleitorais.
     */
    data: SessoesEleitoraisCreateManyInput | SessoesEleitoraisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SessoesEleitorais createManyAndReturn
   */
  export type SessoesEleitoraisCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SessoesEleitorais.
     */
    data: SessoesEleitoraisCreateManyInput | SessoesEleitoraisCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SessoesEleitorais update
   */
  export type SessoesEleitoraisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * The data needed to update a SessoesEleitorais.
     */
    data: XOR<SessoesEleitoraisUpdateInput, SessoesEleitoraisUncheckedUpdateInput>
    /**
     * Choose, which SessoesEleitorais to update.
     */
    where: SessoesEleitoraisWhereUniqueInput
  }

  /**
   * SessoesEleitorais updateMany
   */
  export type SessoesEleitoraisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SessoesEleitorais.
     */
    data: XOR<SessoesEleitoraisUpdateManyMutationInput, SessoesEleitoraisUncheckedUpdateManyInput>
    /**
     * Filter which SessoesEleitorais to update
     */
    where?: SessoesEleitoraisWhereInput
  }

  /**
   * SessoesEleitorais upsert
   */
  export type SessoesEleitoraisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * The filter to search for the SessoesEleitorais to update in case it exists.
     */
    where: SessoesEleitoraisWhereUniqueInput
    /**
     * In case the SessoesEleitorais found by the `where` argument doesn't exist, create a new SessoesEleitorais with this data.
     */
    create: XOR<SessoesEleitoraisCreateInput, SessoesEleitoraisUncheckedCreateInput>
    /**
     * In case the SessoesEleitorais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessoesEleitoraisUpdateInput, SessoesEleitoraisUncheckedUpdateInput>
  }

  /**
   * SessoesEleitorais delete
   */
  export type SessoesEleitoraisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
    /**
     * Filter which SessoesEleitorais to delete.
     */
    where: SessoesEleitoraisWhereUniqueInput
  }

  /**
   * SessoesEleitorais deleteMany
   */
  export type SessoesEleitoraisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SessoesEleitorais to delete
     */
    where?: SessoesEleitoraisWhereInput
  }

  /**
   * SessoesEleitorais.LocalVotacao
   */
  export type SessoesEleitorais$LocalVotacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    where?: LocalVotacaoWhereInput
  }

  /**
   * SessoesEleitorais without action
   */
  export type SessoesEleitoraisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessoesEleitorais
     */
    select?: SessoesEleitoraisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessoesEleitoraisInclude<ExtArgs> | null
  }


  /**
   * Model EnderecoLocalVotacao
   */

  export type AggregateEnderecoLocalVotacao = {
    _count: EnderecoLocalVotacaoCountAggregateOutputType | null
    _avg: EnderecoLocalVotacaoAvgAggregateOutputType | null
    _sum: EnderecoLocalVotacaoSumAggregateOutputType | null
    _min: EnderecoLocalVotacaoMinAggregateOutputType | null
    _max: EnderecoLocalVotacaoMaxAggregateOutputType | null
  }

  export type EnderecoLocalVotacaoAvgAggregateOutputType = {
    cep: number | null
    latitude: number | null
    longitude: number | null
    localVotacaoUuid: number | null
  }

  export type EnderecoLocalVotacaoSumAggregateOutputType = {
    cep: number | null
    latitude: number | null
    longitude: number | null
    localVotacaoUuid: number | null
  }

  export type EnderecoLocalVotacaoMinAggregateOutputType = {
    uuid: string | null
    endereco: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    cep: number | null
    latitude: number | null
    longitude: number | null
    localVotacaoUuid: number | null
  }

  export type EnderecoLocalVotacaoMaxAggregateOutputType = {
    uuid: string | null
    endereco: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    cep: number | null
    latitude: number | null
    longitude: number | null
    localVotacaoUuid: number | null
  }

  export type EnderecoLocalVotacaoCountAggregateOutputType = {
    uuid: number
    endereco: number
    bairro: number
    cidade: number
    uf: number
    cep: number
    latitude: number
    longitude: number
    localVotacaoUuid: number
    _all: number
  }


  export type EnderecoLocalVotacaoAvgAggregateInputType = {
    cep?: true
    latitude?: true
    longitude?: true
    localVotacaoUuid?: true
  }

  export type EnderecoLocalVotacaoSumAggregateInputType = {
    cep?: true
    latitude?: true
    longitude?: true
    localVotacaoUuid?: true
  }

  export type EnderecoLocalVotacaoMinAggregateInputType = {
    uuid?: true
    endereco?: true
    bairro?: true
    cidade?: true
    uf?: true
    cep?: true
    latitude?: true
    longitude?: true
    localVotacaoUuid?: true
  }

  export type EnderecoLocalVotacaoMaxAggregateInputType = {
    uuid?: true
    endereco?: true
    bairro?: true
    cidade?: true
    uf?: true
    cep?: true
    latitude?: true
    longitude?: true
    localVotacaoUuid?: true
  }

  export type EnderecoLocalVotacaoCountAggregateInputType = {
    uuid?: true
    endereco?: true
    bairro?: true
    cidade?: true
    uf?: true
    cep?: true
    latitude?: true
    longitude?: true
    localVotacaoUuid?: true
    _all?: true
  }

  export type EnderecoLocalVotacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnderecoLocalVotacao to aggregate.
     */
    where?: EnderecoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoLocalVotacaos to fetch.
     */
    orderBy?: EnderecoLocalVotacaoOrderByWithRelationInput | EnderecoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnderecoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoLocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EnderecoLocalVotacaos
    **/
    _count?: true | EnderecoLocalVotacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EnderecoLocalVotacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EnderecoLocalVotacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnderecoLocalVotacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnderecoLocalVotacaoMaxAggregateInputType
  }

  export type GetEnderecoLocalVotacaoAggregateType<T extends EnderecoLocalVotacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateEnderecoLocalVotacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEnderecoLocalVotacao[P]>
      : GetScalarType<T[P], AggregateEnderecoLocalVotacao[P]>
  }




  export type EnderecoLocalVotacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoLocalVotacaoWhereInput
    orderBy?: EnderecoLocalVotacaoOrderByWithAggregationInput | EnderecoLocalVotacaoOrderByWithAggregationInput[]
    by: EnderecoLocalVotacaoScalarFieldEnum[] | EnderecoLocalVotacaoScalarFieldEnum
    having?: EnderecoLocalVotacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnderecoLocalVotacaoCountAggregateInputType | true
    _avg?: EnderecoLocalVotacaoAvgAggregateInputType
    _sum?: EnderecoLocalVotacaoSumAggregateInputType
    _min?: EnderecoLocalVotacaoMinAggregateInputType
    _max?: EnderecoLocalVotacaoMaxAggregateInputType
  }

  export type EnderecoLocalVotacaoGroupByOutputType = {
    uuid: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
    localVotacaoUuid: number | null
    _count: EnderecoLocalVotacaoCountAggregateOutputType | null
    _avg: EnderecoLocalVotacaoAvgAggregateOutputType | null
    _sum: EnderecoLocalVotacaoSumAggregateOutputType | null
    _min: EnderecoLocalVotacaoMinAggregateOutputType | null
    _max: EnderecoLocalVotacaoMaxAggregateOutputType | null
  }

  type GetEnderecoLocalVotacaoGroupByPayload<T extends EnderecoLocalVotacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnderecoLocalVotacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnderecoLocalVotacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnderecoLocalVotacaoGroupByOutputType[P]>
            : GetScalarType<T[P], EnderecoLocalVotacaoGroupByOutputType[P]>
        }
      >
    >


  export type EnderecoLocalVotacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    endereco?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    localVotacaoUuid?: boolean
    LocalVotacao?: boolean | EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs>
  }, ExtArgs["result"]["enderecoLocalVotacao"]>

  export type EnderecoLocalVotacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    endereco?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    localVotacaoUuid?: boolean
    LocalVotacao?: boolean | EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs>
  }, ExtArgs["result"]["enderecoLocalVotacao"]>

  export type EnderecoLocalVotacaoSelectScalar = {
    uuid?: boolean
    endereco?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    cep?: boolean
    latitude?: boolean
    longitude?: boolean
    localVotacaoUuid?: boolean
  }

  export type EnderecoLocalVotacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LocalVotacao?: boolean | EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs>
  }
  export type EnderecoLocalVotacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LocalVotacao?: boolean | EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs>
  }

  export type $EnderecoLocalVotacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EnderecoLocalVotacao"
    objects: {
      LocalVotacao: Prisma.$LocalVotacaoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      endereco: string
      bairro: string
      cidade: string
      uf: string
      cep: number
      latitude: number
      longitude: number
      localVotacaoUuid: number | null
    }, ExtArgs["result"]["enderecoLocalVotacao"]>
    composites: {}
  }

  type EnderecoLocalVotacaoGetPayload<S extends boolean | null | undefined | EnderecoLocalVotacaoDefaultArgs> = $Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload, S>

  type EnderecoLocalVotacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EnderecoLocalVotacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EnderecoLocalVotacaoCountAggregateInputType | true
    }

  export interface EnderecoLocalVotacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EnderecoLocalVotacao'], meta: { name: 'EnderecoLocalVotacao' } }
    /**
     * Find zero or one EnderecoLocalVotacao that matches the filter.
     * @param {EnderecoLocalVotacaoFindUniqueArgs} args - Arguments to find a EnderecoLocalVotacao
     * @example
     * // Get one EnderecoLocalVotacao
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnderecoLocalVotacaoFindUniqueArgs>(args: SelectSubset<T, EnderecoLocalVotacaoFindUniqueArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EnderecoLocalVotacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EnderecoLocalVotacaoFindUniqueOrThrowArgs} args - Arguments to find a EnderecoLocalVotacao
     * @example
     * // Get one EnderecoLocalVotacao
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnderecoLocalVotacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, EnderecoLocalVotacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EnderecoLocalVotacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoFindFirstArgs} args - Arguments to find a EnderecoLocalVotacao
     * @example
     * // Get one EnderecoLocalVotacao
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnderecoLocalVotacaoFindFirstArgs>(args?: SelectSubset<T, EnderecoLocalVotacaoFindFirstArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EnderecoLocalVotacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoFindFirstOrThrowArgs} args - Arguments to find a EnderecoLocalVotacao
     * @example
     * // Get one EnderecoLocalVotacao
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnderecoLocalVotacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, EnderecoLocalVotacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EnderecoLocalVotacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EnderecoLocalVotacaos
     * const enderecoLocalVotacaos = await prisma.enderecoLocalVotacao.findMany()
     * 
     * // Get first 10 EnderecoLocalVotacaos
     * const enderecoLocalVotacaos = await prisma.enderecoLocalVotacao.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const enderecoLocalVotacaoWithUuidOnly = await prisma.enderecoLocalVotacao.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends EnderecoLocalVotacaoFindManyArgs>(args?: SelectSubset<T, EnderecoLocalVotacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EnderecoLocalVotacao.
     * @param {EnderecoLocalVotacaoCreateArgs} args - Arguments to create a EnderecoLocalVotacao.
     * @example
     * // Create one EnderecoLocalVotacao
     * const EnderecoLocalVotacao = await prisma.enderecoLocalVotacao.create({
     *   data: {
     *     // ... data to create a EnderecoLocalVotacao
     *   }
     * })
     * 
     */
    create<T extends EnderecoLocalVotacaoCreateArgs>(args: SelectSubset<T, EnderecoLocalVotacaoCreateArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EnderecoLocalVotacaos.
     * @param {EnderecoLocalVotacaoCreateManyArgs} args - Arguments to create many EnderecoLocalVotacaos.
     * @example
     * // Create many EnderecoLocalVotacaos
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnderecoLocalVotacaoCreateManyArgs>(args?: SelectSubset<T, EnderecoLocalVotacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EnderecoLocalVotacaos and returns the data saved in the database.
     * @param {EnderecoLocalVotacaoCreateManyAndReturnArgs} args - Arguments to create many EnderecoLocalVotacaos.
     * @example
     * // Create many EnderecoLocalVotacaos
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EnderecoLocalVotacaos and only return the `uuid`
     * const enderecoLocalVotacaoWithUuidOnly = await prisma.enderecoLocalVotacao.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnderecoLocalVotacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, EnderecoLocalVotacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EnderecoLocalVotacao.
     * @param {EnderecoLocalVotacaoDeleteArgs} args - Arguments to delete one EnderecoLocalVotacao.
     * @example
     * // Delete one EnderecoLocalVotacao
     * const EnderecoLocalVotacao = await prisma.enderecoLocalVotacao.delete({
     *   where: {
     *     // ... filter to delete one EnderecoLocalVotacao
     *   }
     * })
     * 
     */
    delete<T extends EnderecoLocalVotacaoDeleteArgs>(args: SelectSubset<T, EnderecoLocalVotacaoDeleteArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EnderecoLocalVotacao.
     * @param {EnderecoLocalVotacaoUpdateArgs} args - Arguments to update one EnderecoLocalVotacao.
     * @example
     * // Update one EnderecoLocalVotacao
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnderecoLocalVotacaoUpdateArgs>(args: SelectSubset<T, EnderecoLocalVotacaoUpdateArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EnderecoLocalVotacaos.
     * @param {EnderecoLocalVotacaoDeleteManyArgs} args - Arguments to filter EnderecoLocalVotacaos to delete.
     * @example
     * // Delete a few EnderecoLocalVotacaos
     * const { count } = await prisma.enderecoLocalVotacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnderecoLocalVotacaoDeleteManyArgs>(args?: SelectSubset<T, EnderecoLocalVotacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnderecoLocalVotacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EnderecoLocalVotacaos
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnderecoLocalVotacaoUpdateManyArgs>(args: SelectSubset<T, EnderecoLocalVotacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EnderecoLocalVotacao.
     * @param {EnderecoLocalVotacaoUpsertArgs} args - Arguments to update or create a EnderecoLocalVotacao.
     * @example
     * // Update or create a EnderecoLocalVotacao
     * const enderecoLocalVotacao = await prisma.enderecoLocalVotacao.upsert({
     *   create: {
     *     // ... data to create a EnderecoLocalVotacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EnderecoLocalVotacao we want to update
     *   }
     * })
     */
    upsert<T extends EnderecoLocalVotacaoUpsertArgs>(args: SelectSubset<T, EnderecoLocalVotacaoUpsertArgs<ExtArgs>>): Prisma__EnderecoLocalVotacaoClient<$Result.GetResult<Prisma.$EnderecoLocalVotacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EnderecoLocalVotacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoCountArgs} args - Arguments to filter EnderecoLocalVotacaos to count.
     * @example
     * // Count the number of EnderecoLocalVotacaos
     * const count = await prisma.enderecoLocalVotacao.count({
     *   where: {
     *     // ... the filter for the EnderecoLocalVotacaos we want to count
     *   }
     * })
    **/
    count<T extends EnderecoLocalVotacaoCountArgs>(
      args?: Subset<T, EnderecoLocalVotacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnderecoLocalVotacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EnderecoLocalVotacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnderecoLocalVotacaoAggregateArgs>(args: Subset<T, EnderecoLocalVotacaoAggregateArgs>): Prisma.PrismaPromise<GetEnderecoLocalVotacaoAggregateType<T>>

    /**
     * Group by EnderecoLocalVotacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoLocalVotacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnderecoLocalVotacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnderecoLocalVotacaoGroupByArgs['orderBy'] }
        : { orderBy?: EnderecoLocalVotacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnderecoLocalVotacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnderecoLocalVotacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EnderecoLocalVotacao model
   */
  readonly fields: EnderecoLocalVotacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EnderecoLocalVotacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnderecoLocalVotacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    LocalVotacao<T extends EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs> = {}>(args?: Subset<T, EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs>>): Prisma__LocalVotacaoClient<$Result.GetResult<Prisma.$LocalVotacaoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EnderecoLocalVotacao model
   */ 
  interface EnderecoLocalVotacaoFieldRefs {
    readonly uuid: FieldRef<"EnderecoLocalVotacao", 'String'>
    readonly endereco: FieldRef<"EnderecoLocalVotacao", 'String'>
    readonly bairro: FieldRef<"EnderecoLocalVotacao", 'String'>
    readonly cidade: FieldRef<"EnderecoLocalVotacao", 'String'>
    readonly uf: FieldRef<"EnderecoLocalVotacao", 'String'>
    readonly cep: FieldRef<"EnderecoLocalVotacao", 'Int'>
    readonly latitude: FieldRef<"EnderecoLocalVotacao", 'Float'>
    readonly longitude: FieldRef<"EnderecoLocalVotacao", 'Float'>
    readonly localVotacaoUuid: FieldRef<"EnderecoLocalVotacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EnderecoLocalVotacao findUnique
   */
  export type EnderecoLocalVotacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoLocalVotacao to fetch.
     */
    where: EnderecoLocalVotacaoWhereUniqueInput
  }

  /**
   * EnderecoLocalVotacao findUniqueOrThrow
   */
  export type EnderecoLocalVotacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoLocalVotacao to fetch.
     */
    where: EnderecoLocalVotacaoWhereUniqueInput
  }

  /**
   * EnderecoLocalVotacao findFirst
   */
  export type EnderecoLocalVotacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoLocalVotacao to fetch.
     */
    where?: EnderecoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoLocalVotacaos to fetch.
     */
    orderBy?: EnderecoLocalVotacaoOrderByWithRelationInput | EnderecoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnderecoLocalVotacaos.
     */
    cursor?: EnderecoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoLocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnderecoLocalVotacaos.
     */
    distinct?: EnderecoLocalVotacaoScalarFieldEnum | EnderecoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * EnderecoLocalVotacao findFirstOrThrow
   */
  export type EnderecoLocalVotacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoLocalVotacao to fetch.
     */
    where?: EnderecoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoLocalVotacaos to fetch.
     */
    orderBy?: EnderecoLocalVotacaoOrderByWithRelationInput | EnderecoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnderecoLocalVotacaos.
     */
    cursor?: EnderecoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoLocalVotacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnderecoLocalVotacaos.
     */
    distinct?: EnderecoLocalVotacaoScalarFieldEnum | EnderecoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * EnderecoLocalVotacao findMany
   */
  export type EnderecoLocalVotacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoLocalVotacaos to fetch.
     */
    where?: EnderecoLocalVotacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoLocalVotacaos to fetch.
     */
    orderBy?: EnderecoLocalVotacaoOrderByWithRelationInput | EnderecoLocalVotacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EnderecoLocalVotacaos.
     */
    cursor?: EnderecoLocalVotacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoLocalVotacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoLocalVotacaos.
     */
    skip?: number
    distinct?: EnderecoLocalVotacaoScalarFieldEnum | EnderecoLocalVotacaoScalarFieldEnum[]
  }

  /**
   * EnderecoLocalVotacao create
   */
  export type EnderecoLocalVotacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a EnderecoLocalVotacao.
     */
    data: XOR<EnderecoLocalVotacaoCreateInput, EnderecoLocalVotacaoUncheckedCreateInput>
  }

  /**
   * EnderecoLocalVotacao createMany
   */
  export type EnderecoLocalVotacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EnderecoLocalVotacaos.
     */
    data: EnderecoLocalVotacaoCreateManyInput | EnderecoLocalVotacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EnderecoLocalVotacao createManyAndReturn
   */
  export type EnderecoLocalVotacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EnderecoLocalVotacaos.
     */
    data: EnderecoLocalVotacaoCreateManyInput | EnderecoLocalVotacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EnderecoLocalVotacao update
   */
  export type EnderecoLocalVotacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a EnderecoLocalVotacao.
     */
    data: XOR<EnderecoLocalVotacaoUpdateInput, EnderecoLocalVotacaoUncheckedUpdateInput>
    /**
     * Choose, which EnderecoLocalVotacao to update.
     */
    where: EnderecoLocalVotacaoWhereUniqueInput
  }

  /**
   * EnderecoLocalVotacao updateMany
   */
  export type EnderecoLocalVotacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EnderecoLocalVotacaos.
     */
    data: XOR<EnderecoLocalVotacaoUpdateManyMutationInput, EnderecoLocalVotacaoUncheckedUpdateManyInput>
    /**
     * Filter which EnderecoLocalVotacaos to update
     */
    where?: EnderecoLocalVotacaoWhereInput
  }

  /**
   * EnderecoLocalVotacao upsert
   */
  export type EnderecoLocalVotacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the EnderecoLocalVotacao to update in case it exists.
     */
    where: EnderecoLocalVotacaoWhereUniqueInput
    /**
     * In case the EnderecoLocalVotacao found by the `where` argument doesn't exist, create a new EnderecoLocalVotacao with this data.
     */
    create: XOR<EnderecoLocalVotacaoCreateInput, EnderecoLocalVotacaoUncheckedCreateInput>
    /**
     * In case the EnderecoLocalVotacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnderecoLocalVotacaoUpdateInput, EnderecoLocalVotacaoUncheckedUpdateInput>
  }

  /**
   * EnderecoLocalVotacao delete
   */
  export type EnderecoLocalVotacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
    /**
     * Filter which EnderecoLocalVotacao to delete.
     */
    where: EnderecoLocalVotacaoWhereUniqueInput
  }

  /**
   * EnderecoLocalVotacao deleteMany
   */
  export type EnderecoLocalVotacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnderecoLocalVotacaos to delete
     */
    where?: EnderecoLocalVotacaoWhereInput
  }

  /**
   * EnderecoLocalVotacao.LocalVotacao
   */
  export type EnderecoLocalVotacao$LocalVotacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocalVotacao
     */
    select?: LocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocalVotacaoInclude<ExtArgs> | null
    where?: LocalVotacaoWhereInput
  }

  /**
   * EnderecoLocalVotacao without action
   */
  export type EnderecoLocalVotacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoLocalVotacao
     */
    select?: EnderecoLocalVotacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoLocalVotacaoInclude<ExtArgs> | null
  }


  /**
   * Model perfilUso
   */

  export type AggregatePerfilUso = {
    _count: PerfilUsoCountAggregateOutputType | null
    _avg: PerfilUsoAvgAggregateOutputType | null
    _sum: PerfilUsoSumAggregateOutputType | null
    _min: PerfilUsoMinAggregateOutputType | null
    _max: PerfilUsoMaxAggregateOutputType | null
  }

  export type PerfilUsoAvgAggregateOutputType = {
    id: number | null
  }

  export type PerfilUsoSumAggregateOutputType = {
    id: number | null
  }

  export type PerfilUsoMinAggregateOutputType = {
    id: number | null
    descricao: string | null
  }

  export type PerfilUsoMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
  }

  export type PerfilUsoCountAggregateOutputType = {
    id: number
    descricao: number
    _all: number
  }


  export type PerfilUsoAvgAggregateInputType = {
    id?: true
  }

  export type PerfilUsoSumAggregateInputType = {
    id?: true
  }

  export type PerfilUsoMinAggregateInputType = {
    id?: true
    descricao?: true
  }

  export type PerfilUsoMaxAggregateInputType = {
    id?: true
    descricao?: true
  }

  export type PerfilUsoCountAggregateInputType = {
    id?: true
    descricao?: true
    _all?: true
  }

  export type PerfilUsoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which perfilUso to aggregate.
     */
    where?: perfilUsoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfilUsos to fetch.
     */
    orderBy?: perfilUsoOrderByWithRelationInput | perfilUsoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: perfilUsoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfilUsos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfilUsos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned perfilUsos
    **/
    _count?: true | PerfilUsoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PerfilUsoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PerfilUsoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PerfilUsoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PerfilUsoMaxAggregateInputType
  }

  export type GetPerfilUsoAggregateType<T extends PerfilUsoAggregateArgs> = {
        [P in keyof T & keyof AggregatePerfilUso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePerfilUso[P]>
      : GetScalarType<T[P], AggregatePerfilUso[P]>
  }




  export type perfilUsoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: perfilUsoWhereInput
    orderBy?: perfilUsoOrderByWithAggregationInput | perfilUsoOrderByWithAggregationInput[]
    by: PerfilUsoScalarFieldEnum[] | PerfilUsoScalarFieldEnum
    having?: perfilUsoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PerfilUsoCountAggregateInputType | true
    _avg?: PerfilUsoAvgAggregateInputType
    _sum?: PerfilUsoSumAggregateInputType
    _min?: PerfilUsoMinAggregateInputType
    _max?: PerfilUsoMaxAggregateInputType
  }

  export type PerfilUsoGroupByOutputType = {
    id: number
    descricao: string
    _count: PerfilUsoCountAggregateOutputType | null
    _avg: PerfilUsoAvgAggregateOutputType | null
    _sum: PerfilUsoSumAggregateOutputType | null
    _min: PerfilUsoMinAggregateOutputType | null
    _max: PerfilUsoMaxAggregateOutputType | null
  }

  type GetPerfilUsoGroupByPayload<T extends perfilUsoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PerfilUsoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PerfilUsoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PerfilUsoGroupByOutputType[P]>
            : GetScalarType<T[P], PerfilUsoGroupByOutputType[P]>
        }
      >
    >


  export type perfilUsoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    Usuario?: boolean | perfilUso$UsuarioArgs<ExtArgs>
    _count?: boolean | PerfilUsoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["perfilUso"]>

  export type perfilUsoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["perfilUso"]>

  export type perfilUsoSelectScalar = {
    id?: boolean
    descricao?: boolean
  }

  export type perfilUsoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | perfilUso$UsuarioArgs<ExtArgs>
    _count?: boolean | PerfilUsoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type perfilUsoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $perfilUsoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "perfilUso"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string
    }, ExtArgs["result"]["perfilUso"]>
    composites: {}
  }

  type perfilUsoGetPayload<S extends boolean | null | undefined | perfilUsoDefaultArgs> = $Result.GetResult<Prisma.$perfilUsoPayload, S>

  type perfilUsoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<perfilUsoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PerfilUsoCountAggregateInputType | true
    }

  export interface perfilUsoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['perfilUso'], meta: { name: 'perfilUso' } }
    /**
     * Find zero or one PerfilUso that matches the filter.
     * @param {perfilUsoFindUniqueArgs} args - Arguments to find a PerfilUso
     * @example
     * // Get one PerfilUso
     * const perfilUso = await prisma.perfilUso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends perfilUsoFindUniqueArgs>(args: SelectSubset<T, perfilUsoFindUniqueArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PerfilUso that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {perfilUsoFindUniqueOrThrowArgs} args - Arguments to find a PerfilUso
     * @example
     * // Get one PerfilUso
     * const perfilUso = await prisma.perfilUso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends perfilUsoFindUniqueOrThrowArgs>(args: SelectSubset<T, perfilUsoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PerfilUso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUsoFindFirstArgs} args - Arguments to find a PerfilUso
     * @example
     * // Get one PerfilUso
     * const perfilUso = await prisma.perfilUso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends perfilUsoFindFirstArgs>(args?: SelectSubset<T, perfilUsoFindFirstArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PerfilUso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUsoFindFirstOrThrowArgs} args - Arguments to find a PerfilUso
     * @example
     * // Get one PerfilUso
     * const perfilUso = await prisma.perfilUso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends perfilUsoFindFirstOrThrowArgs>(args?: SelectSubset<T, perfilUsoFindFirstOrThrowArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PerfilUsos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUsoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PerfilUsos
     * const perfilUsos = await prisma.perfilUso.findMany()
     * 
     * // Get first 10 PerfilUsos
     * const perfilUsos = await prisma.perfilUso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const perfilUsoWithIdOnly = await prisma.perfilUso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends perfilUsoFindManyArgs>(args?: SelectSubset<T, perfilUsoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PerfilUso.
     * @param {perfilUsoCreateArgs} args - Arguments to create a PerfilUso.
     * @example
     * // Create one PerfilUso
     * const PerfilUso = await prisma.perfilUso.create({
     *   data: {
     *     // ... data to create a PerfilUso
     *   }
     * })
     * 
     */
    create<T extends perfilUsoCreateArgs>(args: SelectSubset<T, perfilUsoCreateArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PerfilUsos.
     * @param {perfilUsoCreateManyArgs} args - Arguments to create many PerfilUsos.
     * @example
     * // Create many PerfilUsos
     * const perfilUso = await prisma.perfilUso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends perfilUsoCreateManyArgs>(args?: SelectSubset<T, perfilUsoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PerfilUsos and returns the data saved in the database.
     * @param {perfilUsoCreateManyAndReturnArgs} args - Arguments to create many PerfilUsos.
     * @example
     * // Create many PerfilUsos
     * const perfilUso = await prisma.perfilUso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PerfilUsos and only return the `id`
     * const perfilUsoWithIdOnly = await prisma.perfilUso.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends perfilUsoCreateManyAndReturnArgs>(args?: SelectSubset<T, perfilUsoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PerfilUso.
     * @param {perfilUsoDeleteArgs} args - Arguments to delete one PerfilUso.
     * @example
     * // Delete one PerfilUso
     * const PerfilUso = await prisma.perfilUso.delete({
     *   where: {
     *     // ... filter to delete one PerfilUso
     *   }
     * })
     * 
     */
    delete<T extends perfilUsoDeleteArgs>(args: SelectSubset<T, perfilUsoDeleteArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PerfilUso.
     * @param {perfilUsoUpdateArgs} args - Arguments to update one PerfilUso.
     * @example
     * // Update one PerfilUso
     * const perfilUso = await prisma.perfilUso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends perfilUsoUpdateArgs>(args: SelectSubset<T, perfilUsoUpdateArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PerfilUsos.
     * @param {perfilUsoDeleteManyArgs} args - Arguments to filter PerfilUsos to delete.
     * @example
     * // Delete a few PerfilUsos
     * const { count } = await prisma.perfilUso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends perfilUsoDeleteManyArgs>(args?: SelectSubset<T, perfilUsoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PerfilUsos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUsoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PerfilUsos
     * const perfilUso = await prisma.perfilUso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends perfilUsoUpdateManyArgs>(args: SelectSubset<T, perfilUsoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PerfilUso.
     * @param {perfilUsoUpsertArgs} args - Arguments to update or create a PerfilUso.
     * @example
     * // Update or create a PerfilUso
     * const perfilUso = await prisma.perfilUso.upsert({
     *   create: {
     *     // ... data to create a PerfilUso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PerfilUso we want to update
     *   }
     * })
     */
    upsert<T extends perfilUsoUpsertArgs>(args: SelectSubset<T, perfilUsoUpsertArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PerfilUsos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUsoCountArgs} args - Arguments to filter PerfilUsos to count.
     * @example
     * // Count the number of PerfilUsos
     * const count = await prisma.perfilUso.count({
     *   where: {
     *     // ... the filter for the PerfilUsos we want to count
     *   }
     * })
    **/
    count<T extends perfilUsoCountArgs>(
      args?: Subset<T, perfilUsoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PerfilUsoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PerfilUso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerfilUsoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PerfilUsoAggregateArgs>(args: Subset<T, PerfilUsoAggregateArgs>): Prisma.PrismaPromise<GetPerfilUsoAggregateType<T>>

    /**
     * Group by PerfilUso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUsoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends perfilUsoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: perfilUsoGroupByArgs['orderBy'] }
        : { orderBy?: perfilUsoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, perfilUsoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPerfilUsoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the perfilUso model
   */
  readonly fields: perfilUsoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for perfilUso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__perfilUsoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends perfilUso$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, perfilUso$UsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the perfilUso model
   */ 
  interface perfilUsoFieldRefs {
    readonly id: FieldRef<"perfilUso", 'Int'>
    readonly descricao: FieldRef<"perfilUso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * perfilUso findUnique
   */
  export type perfilUsoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * Filter, which perfilUso to fetch.
     */
    where: perfilUsoWhereUniqueInput
  }

  /**
   * perfilUso findUniqueOrThrow
   */
  export type perfilUsoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * Filter, which perfilUso to fetch.
     */
    where: perfilUsoWhereUniqueInput
  }

  /**
   * perfilUso findFirst
   */
  export type perfilUsoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * Filter, which perfilUso to fetch.
     */
    where?: perfilUsoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfilUsos to fetch.
     */
    orderBy?: perfilUsoOrderByWithRelationInput | perfilUsoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for perfilUsos.
     */
    cursor?: perfilUsoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfilUsos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfilUsos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of perfilUsos.
     */
    distinct?: PerfilUsoScalarFieldEnum | PerfilUsoScalarFieldEnum[]
  }

  /**
   * perfilUso findFirstOrThrow
   */
  export type perfilUsoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * Filter, which perfilUso to fetch.
     */
    where?: perfilUsoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfilUsos to fetch.
     */
    orderBy?: perfilUsoOrderByWithRelationInput | perfilUsoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for perfilUsos.
     */
    cursor?: perfilUsoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfilUsos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfilUsos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of perfilUsos.
     */
    distinct?: PerfilUsoScalarFieldEnum | PerfilUsoScalarFieldEnum[]
  }

  /**
   * perfilUso findMany
   */
  export type perfilUsoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * Filter, which perfilUsos to fetch.
     */
    where?: perfilUsoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfilUsos to fetch.
     */
    orderBy?: perfilUsoOrderByWithRelationInput | perfilUsoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing perfilUsos.
     */
    cursor?: perfilUsoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfilUsos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfilUsos.
     */
    skip?: number
    distinct?: PerfilUsoScalarFieldEnum | PerfilUsoScalarFieldEnum[]
  }

  /**
   * perfilUso create
   */
  export type perfilUsoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * The data needed to create a perfilUso.
     */
    data: XOR<perfilUsoCreateInput, perfilUsoUncheckedCreateInput>
  }

  /**
   * perfilUso createMany
   */
  export type perfilUsoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many perfilUsos.
     */
    data: perfilUsoCreateManyInput | perfilUsoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * perfilUso createManyAndReturn
   */
  export type perfilUsoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many perfilUsos.
     */
    data: perfilUsoCreateManyInput | perfilUsoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * perfilUso update
   */
  export type perfilUsoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * The data needed to update a perfilUso.
     */
    data: XOR<perfilUsoUpdateInput, perfilUsoUncheckedUpdateInput>
    /**
     * Choose, which perfilUso to update.
     */
    where: perfilUsoWhereUniqueInput
  }

  /**
   * perfilUso updateMany
   */
  export type perfilUsoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update perfilUsos.
     */
    data: XOR<perfilUsoUpdateManyMutationInput, perfilUsoUncheckedUpdateManyInput>
    /**
     * Filter which perfilUsos to update
     */
    where?: perfilUsoWhereInput
  }

  /**
   * perfilUso upsert
   */
  export type perfilUsoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * The filter to search for the perfilUso to update in case it exists.
     */
    where: perfilUsoWhereUniqueInput
    /**
     * In case the perfilUso found by the `where` argument doesn't exist, create a new perfilUso with this data.
     */
    create: XOR<perfilUsoCreateInput, perfilUsoUncheckedCreateInput>
    /**
     * In case the perfilUso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<perfilUsoUpdateInput, perfilUsoUncheckedUpdateInput>
  }

  /**
   * perfilUso delete
   */
  export type perfilUsoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
    /**
     * Filter which perfilUso to delete.
     */
    where: perfilUsoWhereUniqueInput
  }

  /**
   * perfilUso deleteMany
   */
  export type perfilUsoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which perfilUsos to delete
     */
    where?: perfilUsoWhereInput
  }

  /**
   * perfilUso.Usuario
   */
  export type perfilUso$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * perfilUso without action
   */
  export type perfilUsoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfilUso
     */
    select?: perfilUsoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: perfilUsoInclude<ExtArgs> | null
  }


  /**
   * Model classificacao
   */

  export type AggregateClassificacao = {
    _count: ClassificacaoCountAggregateOutputType | null
    _avg: ClassificacaoAvgAggregateOutputType | null
    _sum: ClassificacaoSumAggregateOutputType | null
    _min: ClassificacaoMinAggregateOutputType | null
    _max: ClassificacaoMaxAggregateOutputType | null
  }

  export type ClassificacaoAvgAggregateOutputType = {
    id: number | null
  }

  export type ClassificacaoSumAggregateOutputType = {
    id: number | null
  }

  export type ClassificacaoMinAggregateOutputType = {
    id: number | null
    descricao: string | null
    hexColor: string | null
    eleitoruuid: string | null
  }

  export type ClassificacaoMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
    hexColor: string | null
    eleitoruuid: string | null
  }

  export type ClassificacaoCountAggregateOutputType = {
    id: number
    descricao: number
    hexColor: number
    eleitoruuid: number
    _all: number
  }


  export type ClassificacaoAvgAggregateInputType = {
    id?: true
  }

  export type ClassificacaoSumAggregateInputType = {
    id?: true
  }

  export type ClassificacaoMinAggregateInputType = {
    id?: true
    descricao?: true
    hexColor?: true
    eleitoruuid?: true
  }

  export type ClassificacaoMaxAggregateInputType = {
    id?: true
    descricao?: true
    hexColor?: true
    eleitoruuid?: true
  }

  export type ClassificacaoCountAggregateInputType = {
    id?: true
    descricao?: true
    hexColor?: true
    eleitoruuid?: true
    _all?: true
  }

  export type ClassificacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which classificacao to aggregate.
     */
    where?: classificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of classificacaos to fetch.
     */
    orderBy?: classificacaoOrderByWithRelationInput | classificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: classificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` classificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` classificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned classificacaos
    **/
    _count?: true | ClassificacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClassificacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClassificacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClassificacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClassificacaoMaxAggregateInputType
  }

  export type GetClassificacaoAggregateType<T extends ClassificacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateClassificacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClassificacao[P]>
      : GetScalarType<T[P], AggregateClassificacao[P]>
  }




  export type classificacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: classificacaoWhereInput
    orderBy?: classificacaoOrderByWithAggregationInput | classificacaoOrderByWithAggregationInput[]
    by: ClassificacaoScalarFieldEnum[] | ClassificacaoScalarFieldEnum
    having?: classificacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClassificacaoCountAggregateInputType | true
    _avg?: ClassificacaoAvgAggregateInputType
    _sum?: ClassificacaoSumAggregateInputType
    _min?: ClassificacaoMinAggregateInputType
    _max?: ClassificacaoMaxAggregateInputType
  }

  export type ClassificacaoGroupByOutputType = {
    id: number
    descricao: string
    hexColor: string
    eleitoruuid: string
    _count: ClassificacaoCountAggregateOutputType | null
    _avg: ClassificacaoAvgAggregateOutputType | null
    _sum: ClassificacaoSumAggregateOutputType | null
    _min: ClassificacaoMinAggregateOutputType | null
    _max: ClassificacaoMaxAggregateOutputType | null
  }

  type GetClassificacaoGroupByPayload<T extends classificacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClassificacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClassificacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClassificacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ClassificacaoGroupByOutputType[P]>
        }
      >
    >


  export type classificacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    hexColor?: boolean
    eleitoruuid?: boolean
    eleitor?: boolean | classificacao$eleitorArgs<ExtArgs>
    _count?: boolean | ClassificacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["classificacao"]>

  export type classificacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    hexColor?: boolean
    eleitoruuid?: boolean
  }, ExtArgs["result"]["classificacao"]>

  export type classificacaoSelectScalar = {
    id?: boolean
    descricao?: boolean
    hexColor?: boolean
    eleitoruuid?: boolean
  }

  export type classificacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eleitor?: boolean | classificacao$eleitorArgs<ExtArgs>
    _count?: boolean | ClassificacaoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type classificacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $classificacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "classificacao"
    objects: {
      eleitor: Prisma.$EleitorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string
      hexColor: string
      eleitoruuid: string
    }, ExtArgs["result"]["classificacao"]>
    composites: {}
  }

  type classificacaoGetPayload<S extends boolean | null | undefined | classificacaoDefaultArgs> = $Result.GetResult<Prisma.$classificacaoPayload, S>

  type classificacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<classificacaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClassificacaoCountAggregateInputType | true
    }

  export interface classificacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['classificacao'], meta: { name: 'classificacao' } }
    /**
     * Find zero or one Classificacao that matches the filter.
     * @param {classificacaoFindUniqueArgs} args - Arguments to find a Classificacao
     * @example
     * // Get one Classificacao
     * const classificacao = await prisma.classificacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends classificacaoFindUniqueArgs>(args: SelectSubset<T, classificacaoFindUniqueArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Classificacao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {classificacaoFindUniqueOrThrowArgs} args - Arguments to find a Classificacao
     * @example
     * // Get one Classificacao
     * const classificacao = await prisma.classificacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends classificacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, classificacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Classificacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {classificacaoFindFirstArgs} args - Arguments to find a Classificacao
     * @example
     * // Get one Classificacao
     * const classificacao = await prisma.classificacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends classificacaoFindFirstArgs>(args?: SelectSubset<T, classificacaoFindFirstArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Classificacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {classificacaoFindFirstOrThrowArgs} args - Arguments to find a Classificacao
     * @example
     * // Get one Classificacao
     * const classificacao = await prisma.classificacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends classificacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, classificacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Classificacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {classificacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Classificacaos
     * const classificacaos = await prisma.classificacao.findMany()
     * 
     * // Get first 10 Classificacaos
     * const classificacaos = await prisma.classificacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const classificacaoWithIdOnly = await prisma.classificacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends classificacaoFindManyArgs>(args?: SelectSubset<T, classificacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Classificacao.
     * @param {classificacaoCreateArgs} args - Arguments to create a Classificacao.
     * @example
     * // Create one Classificacao
     * const Classificacao = await prisma.classificacao.create({
     *   data: {
     *     // ... data to create a Classificacao
     *   }
     * })
     * 
     */
    create<T extends classificacaoCreateArgs>(args: SelectSubset<T, classificacaoCreateArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Classificacaos.
     * @param {classificacaoCreateManyArgs} args - Arguments to create many Classificacaos.
     * @example
     * // Create many Classificacaos
     * const classificacao = await prisma.classificacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends classificacaoCreateManyArgs>(args?: SelectSubset<T, classificacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Classificacaos and returns the data saved in the database.
     * @param {classificacaoCreateManyAndReturnArgs} args - Arguments to create many Classificacaos.
     * @example
     * // Create many Classificacaos
     * const classificacao = await prisma.classificacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Classificacaos and only return the `id`
     * const classificacaoWithIdOnly = await prisma.classificacao.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends classificacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, classificacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Classificacao.
     * @param {classificacaoDeleteArgs} args - Arguments to delete one Classificacao.
     * @example
     * // Delete one Classificacao
     * const Classificacao = await prisma.classificacao.delete({
     *   where: {
     *     // ... filter to delete one Classificacao
     *   }
     * })
     * 
     */
    delete<T extends classificacaoDeleteArgs>(args: SelectSubset<T, classificacaoDeleteArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Classificacao.
     * @param {classificacaoUpdateArgs} args - Arguments to update one Classificacao.
     * @example
     * // Update one Classificacao
     * const classificacao = await prisma.classificacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends classificacaoUpdateArgs>(args: SelectSubset<T, classificacaoUpdateArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Classificacaos.
     * @param {classificacaoDeleteManyArgs} args - Arguments to filter Classificacaos to delete.
     * @example
     * // Delete a few Classificacaos
     * const { count } = await prisma.classificacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends classificacaoDeleteManyArgs>(args?: SelectSubset<T, classificacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Classificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {classificacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Classificacaos
     * const classificacao = await prisma.classificacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends classificacaoUpdateManyArgs>(args: SelectSubset<T, classificacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Classificacao.
     * @param {classificacaoUpsertArgs} args - Arguments to update or create a Classificacao.
     * @example
     * // Update or create a Classificacao
     * const classificacao = await prisma.classificacao.upsert({
     *   create: {
     *     // ... data to create a Classificacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Classificacao we want to update
     *   }
     * })
     */
    upsert<T extends classificacaoUpsertArgs>(args: SelectSubset<T, classificacaoUpsertArgs<ExtArgs>>): Prisma__classificacaoClient<$Result.GetResult<Prisma.$classificacaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Classificacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {classificacaoCountArgs} args - Arguments to filter Classificacaos to count.
     * @example
     * // Count the number of Classificacaos
     * const count = await prisma.classificacao.count({
     *   where: {
     *     // ... the filter for the Classificacaos we want to count
     *   }
     * })
    **/
    count<T extends classificacaoCountArgs>(
      args?: Subset<T, classificacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClassificacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Classificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClassificacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClassificacaoAggregateArgs>(args: Subset<T, ClassificacaoAggregateArgs>): Prisma.PrismaPromise<GetClassificacaoAggregateType<T>>

    /**
     * Group by Classificacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {classificacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends classificacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: classificacaoGroupByArgs['orderBy'] }
        : { orderBy?: classificacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, classificacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClassificacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the classificacao model
   */
  readonly fields: classificacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for classificacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__classificacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    eleitor<T extends classificacao$eleitorArgs<ExtArgs> = {}>(args?: Subset<T, classificacao$eleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the classificacao model
   */ 
  interface classificacaoFieldRefs {
    readonly id: FieldRef<"classificacao", 'Int'>
    readonly descricao: FieldRef<"classificacao", 'String'>
    readonly hexColor: FieldRef<"classificacao", 'String'>
    readonly eleitoruuid: FieldRef<"classificacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * classificacao findUnique
   */
  export type classificacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * Filter, which classificacao to fetch.
     */
    where: classificacaoWhereUniqueInput
  }

  /**
   * classificacao findUniqueOrThrow
   */
  export type classificacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * Filter, which classificacao to fetch.
     */
    where: classificacaoWhereUniqueInput
  }

  /**
   * classificacao findFirst
   */
  export type classificacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * Filter, which classificacao to fetch.
     */
    where?: classificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of classificacaos to fetch.
     */
    orderBy?: classificacaoOrderByWithRelationInput | classificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for classificacaos.
     */
    cursor?: classificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` classificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` classificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of classificacaos.
     */
    distinct?: ClassificacaoScalarFieldEnum | ClassificacaoScalarFieldEnum[]
  }

  /**
   * classificacao findFirstOrThrow
   */
  export type classificacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * Filter, which classificacao to fetch.
     */
    where?: classificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of classificacaos to fetch.
     */
    orderBy?: classificacaoOrderByWithRelationInput | classificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for classificacaos.
     */
    cursor?: classificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` classificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` classificacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of classificacaos.
     */
    distinct?: ClassificacaoScalarFieldEnum | ClassificacaoScalarFieldEnum[]
  }

  /**
   * classificacao findMany
   */
  export type classificacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * Filter, which classificacaos to fetch.
     */
    where?: classificacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of classificacaos to fetch.
     */
    orderBy?: classificacaoOrderByWithRelationInput | classificacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing classificacaos.
     */
    cursor?: classificacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` classificacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` classificacaos.
     */
    skip?: number
    distinct?: ClassificacaoScalarFieldEnum | ClassificacaoScalarFieldEnum[]
  }

  /**
   * classificacao create
   */
  export type classificacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a classificacao.
     */
    data: XOR<classificacaoCreateInput, classificacaoUncheckedCreateInput>
  }

  /**
   * classificacao createMany
   */
  export type classificacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many classificacaos.
     */
    data: classificacaoCreateManyInput | classificacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * classificacao createManyAndReturn
   */
  export type classificacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many classificacaos.
     */
    data: classificacaoCreateManyInput | classificacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * classificacao update
   */
  export type classificacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a classificacao.
     */
    data: XOR<classificacaoUpdateInput, classificacaoUncheckedUpdateInput>
    /**
     * Choose, which classificacao to update.
     */
    where: classificacaoWhereUniqueInput
  }

  /**
   * classificacao updateMany
   */
  export type classificacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update classificacaos.
     */
    data: XOR<classificacaoUpdateManyMutationInput, classificacaoUncheckedUpdateManyInput>
    /**
     * Filter which classificacaos to update
     */
    where?: classificacaoWhereInput
  }

  /**
   * classificacao upsert
   */
  export type classificacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the classificacao to update in case it exists.
     */
    where: classificacaoWhereUniqueInput
    /**
     * In case the classificacao found by the `where` argument doesn't exist, create a new classificacao with this data.
     */
    create: XOR<classificacaoCreateInput, classificacaoUncheckedCreateInput>
    /**
     * In case the classificacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<classificacaoUpdateInput, classificacaoUncheckedUpdateInput>
  }

  /**
   * classificacao delete
   */
  export type classificacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
    /**
     * Filter which classificacao to delete.
     */
    where: classificacaoWhereUniqueInput
  }

  /**
   * classificacao deleteMany
   */
  export type classificacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which classificacaos to delete
     */
    where?: classificacaoWhereInput
  }

  /**
   * classificacao.eleitor
   */
  export type classificacao$eleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    cursor?: EleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * classificacao without action
   */
  export type classificacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the classificacao
     */
    select?: classificacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: classificacaoInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    perfil: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    perfil: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    uuid: string | null
    nomeCompleto: string | null
    apelido: string | null
    isAtivo: boolean | null
    uuidCandidato: string | null
    created_at: Date | null
    updated_at: Date | null
    perfil: number | null
    dadosContatoUsuarioUuid: string | null
    enderecoUsuarioUuid: string | null
  }

  export type UsuarioMaxAggregateOutputType = {
    uuid: string | null
    nomeCompleto: string | null
    apelido: string | null
    isAtivo: boolean | null
    uuidCandidato: string | null
    created_at: Date | null
    updated_at: Date | null
    perfil: number | null
    dadosContatoUsuarioUuid: string | null
    enderecoUsuarioUuid: string | null
  }

  export type UsuarioCountAggregateOutputType = {
    uuid: number
    nomeCompleto: number
    apelido: number
    isAtivo: number
    uuidCandidato: number
    created_at: number
    updated_at: number
    perfil: number
    dadosContatoUsuarioUuid: number
    enderecoUsuarioUuid: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    perfil?: true
  }

  export type UsuarioSumAggregateInputType = {
    perfil?: true
  }

  export type UsuarioMinAggregateInputType = {
    uuid?: true
    nomeCompleto?: true
    apelido?: true
    isAtivo?: true
    uuidCandidato?: true
    created_at?: true
    updated_at?: true
    perfil?: true
    dadosContatoUsuarioUuid?: true
    enderecoUsuarioUuid?: true
  }

  export type UsuarioMaxAggregateInputType = {
    uuid?: true
    nomeCompleto?: true
    apelido?: true
    isAtivo?: true
    uuidCandidato?: true
    created_at?: true
    updated_at?: true
    perfil?: true
    dadosContatoUsuarioUuid?: true
    enderecoUsuarioUuid?: true
  }

  export type UsuarioCountAggregateInputType = {
    uuid?: true
    nomeCompleto?: true
    apelido?: true
    isAtivo?: true
    uuidCandidato?: true
    created_at?: true
    updated_at?: true
    perfil?: true
    dadosContatoUsuarioUuid?: true
    enderecoUsuarioUuid?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    uuid: string
    nomeCompleto: string
    apelido: string | null
    isAtivo: boolean
    uuidCandidato: string
    created_at: Date
    updated_at: Date
    perfil: number
    dadosContatoUsuarioUuid: string | null
    enderecoUsuarioUuid: string | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    nomeCompleto?: boolean
    apelido?: boolean
    isAtivo?: boolean
    uuidCandidato?: boolean
    created_at?: boolean
    updated_at?: boolean
    perfil?: boolean
    dadosContatoUsuarioUuid?: boolean
    enderecoUsuarioUuid?: boolean
    Perfil?: boolean | perfilUsoDefaultArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    login?: boolean | Usuario$loginArgs<ExtArgs>
    contato?: boolean | Usuario$contatoArgs<ExtArgs>
    EnderecoUsuario?: boolean | Usuario$EnderecoUsuarioArgs<ExtArgs>
    Eleitor?: boolean | Usuario$EleitorArgs<ExtArgs>
    coligacao?: boolean | Usuario$coligacaoArgs<ExtArgs>
    atendimentoCriado?: boolean | Usuario$atendimentoCriadoArgs<ExtArgs>
    atendimento?: boolean | Usuario$atendimentoArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    nomeCompleto?: boolean
    apelido?: boolean
    isAtivo?: boolean
    uuidCandidato?: boolean
    created_at?: boolean
    updated_at?: boolean
    perfil?: boolean
    dadosContatoUsuarioUuid?: boolean
    enderecoUsuarioUuid?: boolean
    Perfil?: boolean | perfilUsoDefaultArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    contato?: boolean | Usuario$contatoArgs<ExtArgs>
    EnderecoUsuario?: boolean | Usuario$EnderecoUsuarioArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    uuid?: boolean
    nomeCompleto?: boolean
    apelido?: boolean
    isAtivo?: boolean
    uuidCandidato?: boolean
    created_at?: boolean
    updated_at?: boolean
    perfil?: boolean
    dadosContatoUsuarioUuid?: boolean
    enderecoUsuarioUuid?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Perfil?: boolean | perfilUsoDefaultArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    login?: boolean | Usuario$loginArgs<ExtArgs>
    contato?: boolean | Usuario$contatoArgs<ExtArgs>
    EnderecoUsuario?: boolean | Usuario$EnderecoUsuarioArgs<ExtArgs>
    Eleitor?: boolean | Usuario$EleitorArgs<ExtArgs>
    coligacao?: boolean | Usuario$coligacaoArgs<ExtArgs>
    atendimentoCriado?: boolean | Usuario$atendimentoCriadoArgs<ExtArgs>
    atendimento?: boolean | Usuario$atendimentoArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Perfil?: boolean | perfilUsoDefaultArgs<ExtArgs>
    candidato?: boolean | CandidatoDefaultArgs<ExtArgs>
    contato?: boolean | Usuario$contatoArgs<ExtArgs>
    EnderecoUsuario?: boolean | Usuario$EnderecoUsuarioArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      Perfil: Prisma.$perfilUsoPayload<ExtArgs>
      candidato: Prisma.$CandidatoPayload<ExtArgs>
      login: Prisma.$loginPayload<ExtArgs>[]
      contato: Prisma.$DadosContatoUsuarioPayload<ExtArgs> | null
      EnderecoUsuario: Prisma.$EnderecoUsuarioPayload<ExtArgs> | null
      Eleitor: Prisma.$EleitorPayload<ExtArgs>[]
      coligacao: Prisma.$coligacaoPayload<ExtArgs>[]
      atendimentoCriado: Prisma.$atendimentoPayload<ExtArgs>[]
      atendimento: Prisma.$atendimentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      nomeCompleto: string
      apelido: string | null
      isAtivo: boolean
      uuidCandidato: string
      created_at: Date
      updated_at: Date
      perfil: number
      dadosContatoUsuarioUuid: string | null
      enderecoUsuarioUuid: string | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const usuarioWithUuidOnly = await prisma.usuario.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `uuid`
     * const usuarioWithUuidOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Perfil<T extends perfilUsoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, perfilUsoDefaultArgs<ExtArgs>>): Prisma__perfilUsoClient<$Result.GetResult<Prisma.$perfilUsoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    candidato<T extends CandidatoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CandidatoDefaultArgs<ExtArgs>>): Prisma__CandidatoClient<$Result.GetResult<Prisma.$CandidatoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    login<T extends Usuario$loginArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$loginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "findMany"> | Null>
    contato<T extends Usuario$contatoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$contatoArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    EnderecoUsuario<T extends Usuario$EnderecoUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$EnderecoUsuarioArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    Eleitor<T extends Usuario$EleitorArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$EleitorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EleitorPayload<ExtArgs>, T, "findMany"> | Null>
    coligacao<T extends Usuario$coligacaoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$coligacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coligacaoPayload<ExtArgs>, T, "findMany"> | Null>
    atendimentoCriado<T extends Usuario$atendimentoCriadoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$atendimentoCriadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findMany"> | Null>
    atendimento<T extends Usuario$atendimentoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$atendimentoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$atendimentoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly uuid: FieldRef<"Usuario", 'String'>
    readonly nomeCompleto: FieldRef<"Usuario", 'String'>
    readonly apelido: FieldRef<"Usuario", 'String'>
    readonly isAtivo: FieldRef<"Usuario", 'Boolean'>
    readonly uuidCandidato: FieldRef<"Usuario", 'String'>
    readonly created_at: FieldRef<"Usuario", 'DateTime'>
    readonly updated_at: FieldRef<"Usuario", 'DateTime'>
    readonly perfil: FieldRef<"Usuario", 'Int'>
    readonly dadosContatoUsuarioUuid: FieldRef<"Usuario", 'String'>
    readonly enderecoUsuarioUuid: FieldRef<"Usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.login
   */
  export type Usuario$loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    where?: loginWhereInput
    orderBy?: loginOrderByWithRelationInput | loginOrderByWithRelationInput[]
    cursor?: loginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LoginScalarFieldEnum | LoginScalarFieldEnum[]
  }

  /**
   * Usuario.contato
   */
  export type Usuario$contatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    where?: DadosContatoUsuarioWhereInput
  }

  /**
   * Usuario.EnderecoUsuario
   */
  export type Usuario$EnderecoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    where?: EnderecoUsuarioWhereInput
  }

  /**
   * Usuario.Eleitor
   */
  export type Usuario$EleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eleitor
     */
    select?: EleitorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EleitorInclude<ExtArgs> | null
    where?: EleitorWhereInput
    orderBy?: EleitorOrderByWithRelationInput | EleitorOrderByWithRelationInput[]
    cursor?: EleitorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EleitorScalarFieldEnum | EleitorScalarFieldEnum[]
  }

  /**
   * Usuario.coligacao
   */
  export type Usuario$coligacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the coligacao
     */
    select?: coligacaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coligacaoInclude<ExtArgs> | null
    where?: coligacaoWhereInput
    orderBy?: coligacaoOrderByWithRelationInput | coligacaoOrderByWithRelationInput[]
    cursor?: coligacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ColigacaoScalarFieldEnum | ColigacaoScalarFieldEnum[]
  }

  /**
   * Usuario.atendimentoCriado
   */
  export type Usuario$atendimentoCriadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    where?: atendimentoWhereInput
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    cursor?: atendimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * Usuario.atendimento
   */
  export type Usuario$atendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the atendimento
     */
    select?: atendimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: atendimentoInclude<ExtArgs> | null
    where?: atendimentoWhereInput
    orderBy?: atendimentoOrderByWithRelationInput | atendimentoOrderByWithRelationInput[]
    cursor?: atendimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtendimentoScalarFieldEnum | AtendimentoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model DadosContatoUsuario
   */

  export type AggregateDadosContatoUsuario = {
    _count: DadosContatoUsuarioCountAggregateOutputType | null
    _min: DadosContatoUsuarioMinAggregateOutputType | null
    _max: DadosContatoUsuarioMaxAggregateOutputType | null
  }

  export type DadosContatoUsuarioMinAggregateOutputType = {
    uuid: string | null
    whathsapp: string | null
    email: string | null
    instagram: string | null
    twitter: string | null
    facebook: string | null
  }

  export type DadosContatoUsuarioMaxAggregateOutputType = {
    uuid: string | null
    whathsapp: string | null
    email: string | null
    instagram: string | null
    twitter: string | null
    facebook: string | null
  }

  export type DadosContatoUsuarioCountAggregateOutputType = {
    uuid: number
    whathsapp: number
    email: number
    instagram: number
    twitter: number
    facebook: number
    _all: number
  }


  export type DadosContatoUsuarioMinAggregateInputType = {
    uuid?: true
    whathsapp?: true
    email?: true
    instagram?: true
    twitter?: true
    facebook?: true
  }

  export type DadosContatoUsuarioMaxAggregateInputType = {
    uuid?: true
    whathsapp?: true
    email?: true
    instagram?: true
    twitter?: true
    facebook?: true
  }

  export type DadosContatoUsuarioCountAggregateInputType = {
    uuid?: true
    whathsapp?: true
    email?: true
    instagram?: true
    twitter?: true
    facebook?: true
    _all?: true
  }

  export type DadosContatoUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosContatoUsuario to aggregate.
     */
    where?: DadosContatoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosContatoUsuarios to fetch.
     */
    orderBy?: DadosContatoUsuarioOrderByWithRelationInput | DadosContatoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DadosContatoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosContatoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosContatoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DadosContatoUsuarios
    **/
    _count?: true | DadosContatoUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DadosContatoUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DadosContatoUsuarioMaxAggregateInputType
  }

  export type GetDadosContatoUsuarioAggregateType<T extends DadosContatoUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateDadosContatoUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDadosContatoUsuario[P]>
      : GetScalarType<T[P], AggregateDadosContatoUsuario[P]>
  }




  export type DadosContatoUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DadosContatoUsuarioWhereInput
    orderBy?: DadosContatoUsuarioOrderByWithAggregationInput | DadosContatoUsuarioOrderByWithAggregationInput[]
    by: DadosContatoUsuarioScalarFieldEnum[] | DadosContatoUsuarioScalarFieldEnum
    having?: DadosContatoUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DadosContatoUsuarioCountAggregateInputType | true
    _min?: DadosContatoUsuarioMinAggregateInputType
    _max?: DadosContatoUsuarioMaxAggregateInputType
  }

  export type DadosContatoUsuarioGroupByOutputType = {
    uuid: string
    whathsapp: string
    email: string
    instagram: string
    twitter: string
    facebook: string
    _count: DadosContatoUsuarioCountAggregateOutputType | null
    _min: DadosContatoUsuarioMinAggregateOutputType | null
    _max: DadosContatoUsuarioMaxAggregateOutputType | null
  }

  type GetDadosContatoUsuarioGroupByPayload<T extends DadosContatoUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DadosContatoUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DadosContatoUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DadosContatoUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], DadosContatoUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type DadosContatoUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    whathsapp?: boolean
    email?: boolean
    instagram?: boolean
    twitter?: boolean
    facebook?: boolean
    Usuario?: boolean | DadosContatoUsuario$UsuarioArgs<ExtArgs>
    _count?: boolean | DadosContatoUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dadosContatoUsuario"]>

  export type DadosContatoUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    whathsapp?: boolean
    email?: boolean
    instagram?: boolean
    twitter?: boolean
    facebook?: boolean
  }, ExtArgs["result"]["dadosContatoUsuario"]>

  export type DadosContatoUsuarioSelectScalar = {
    uuid?: boolean
    whathsapp?: boolean
    email?: boolean
    instagram?: boolean
    twitter?: boolean
    facebook?: boolean
  }

  export type DadosContatoUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | DadosContatoUsuario$UsuarioArgs<ExtArgs>
    _count?: boolean | DadosContatoUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DadosContatoUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DadosContatoUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DadosContatoUsuario"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      whathsapp: string
      email: string
      instagram: string
      twitter: string
      facebook: string
    }, ExtArgs["result"]["dadosContatoUsuario"]>
    composites: {}
  }

  type DadosContatoUsuarioGetPayload<S extends boolean | null | undefined | DadosContatoUsuarioDefaultArgs> = $Result.GetResult<Prisma.$DadosContatoUsuarioPayload, S>

  type DadosContatoUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DadosContatoUsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DadosContatoUsuarioCountAggregateInputType | true
    }

  export interface DadosContatoUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DadosContatoUsuario'], meta: { name: 'DadosContatoUsuario' } }
    /**
     * Find zero or one DadosContatoUsuario that matches the filter.
     * @param {DadosContatoUsuarioFindUniqueArgs} args - Arguments to find a DadosContatoUsuario
     * @example
     * // Get one DadosContatoUsuario
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DadosContatoUsuarioFindUniqueArgs>(args: SelectSubset<T, DadosContatoUsuarioFindUniqueArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DadosContatoUsuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DadosContatoUsuarioFindUniqueOrThrowArgs} args - Arguments to find a DadosContatoUsuario
     * @example
     * // Get one DadosContatoUsuario
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DadosContatoUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, DadosContatoUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DadosContatoUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioFindFirstArgs} args - Arguments to find a DadosContatoUsuario
     * @example
     * // Get one DadosContatoUsuario
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DadosContatoUsuarioFindFirstArgs>(args?: SelectSubset<T, DadosContatoUsuarioFindFirstArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DadosContatoUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioFindFirstOrThrowArgs} args - Arguments to find a DadosContatoUsuario
     * @example
     * // Get one DadosContatoUsuario
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DadosContatoUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, DadosContatoUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DadosContatoUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DadosContatoUsuarios
     * const dadosContatoUsuarios = await prisma.dadosContatoUsuario.findMany()
     * 
     * // Get first 10 DadosContatoUsuarios
     * const dadosContatoUsuarios = await prisma.dadosContatoUsuario.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const dadosContatoUsuarioWithUuidOnly = await prisma.dadosContatoUsuario.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends DadosContatoUsuarioFindManyArgs>(args?: SelectSubset<T, DadosContatoUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DadosContatoUsuario.
     * @param {DadosContatoUsuarioCreateArgs} args - Arguments to create a DadosContatoUsuario.
     * @example
     * // Create one DadosContatoUsuario
     * const DadosContatoUsuario = await prisma.dadosContatoUsuario.create({
     *   data: {
     *     // ... data to create a DadosContatoUsuario
     *   }
     * })
     * 
     */
    create<T extends DadosContatoUsuarioCreateArgs>(args: SelectSubset<T, DadosContatoUsuarioCreateArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DadosContatoUsuarios.
     * @param {DadosContatoUsuarioCreateManyArgs} args - Arguments to create many DadosContatoUsuarios.
     * @example
     * // Create many DadosContatoUsuarios
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DadosContatoUsuarioCreateManyArgs>(args?: SelectSubset<T, DadosContatoUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DadosContatoUsuarios and returns the data saved in the database.
     * @param {DadosContatoUsuarioCreateManyAndReturnArgs} args - Arguments to create many DadosContatoUsuarios.
     * @example
     * // Create many DadosContatoUsuarios
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DadosContatoUsuarios and only return the `uuid`
     * const dadosContatoUsuarioWithUuidOnly = await prisma.dadosContatoUsuario.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DadosContatoUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, DadosContatoUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DadosContatoUsuario.
     * @param {DadosContatoUsuarioDeleteArgs} args - Arguments to delete one DadosContatoUsuario.
     * @example
     * // Delete one DadosContatoUsuario
     * const DadosContatoUsuario = await prisma.dadosContatoUsuario.delete({
     *   where: {
     *     // ... filter to delete one DadosContatoUsuario
     *   }
     * })
     * 
     */
    delete<T extends DadosContatoUsuarioDeleteArgs>(args: SelectSubset<T, DadosContatoUsuarioDeleteArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DadosContatoUsuario.
     * @param {DadosContatoUsuarioUpdateArgs} args - Arguments to update one DadosContatoUsuario.
     * @example
     * // Update one DadosContatoUsuario
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DadosContatoUsuarioUpdateArgs>(args: SelectSubset<T, DadosContatoUsuarioUpdateArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DadosContatoUsuarios.
     * @param {DadosContatoUsuarioDeleteManyArgs} args - Arguments to filter DadosContatoUsuarios to delete.
     * @example
     * // Delete a few DadosContatoUsuarios
     * const { count } = await prisma.dadosContatoUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DadosContatoUsuarioDeleteManyArgs>(args?: SelectSubset<T, DadosContatoUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DadosContatoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DadosContatoUsuarios
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DadosContatoUsuarioUpdateManyArgs>(args: SelectSubset<T, DadosContatoUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DadosContatoUsuario.
     * @param {DadosContatoUsuarioUpsertArgs} args - Arguments to update or create a DadosContatoUsuario.
     * @example
     * // Update or create a DadosContatoUsuario
     * const dadosContatoUsuario = await prisma.dadosContatoUsuario.upsert({
     *   create: {
     *     // ... data to create a DadosContatoUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DadosContatoUsuario we want to update
     *   }
     * })
     */
    upsert<T extends DadosContatoUsuarioUpsertArgs>(args: SelectSubset<T, DadosContatoUsuarioUpsertArgs<ExtArgs>>): Prisma__DadosContatoUsuarioClient<$Result.GetResult<Prisma.$DadosContatoUsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DadosContatoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioCountArgs} args - Arguments to filter DadosContatoUsuarios to count.
     * @example
     * // Count the number of DadosContatoUsuarios
     * const count = await prisma.dadosContatoUsuario.count({
     *   where: {
     *     // ... the filter for the DadosContatoUsuarios we want to count
     *   }
     * })
    **/
    count<T extends DadosContatoUsuarioCountArgs>(
      args?: Subset<T, DadosContatoUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DadosContatoUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DadosContatoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DadosContatoUsuarioAggregateArgs>(args: Subset<T, DadosContatoUsuarioAggregateArgs>): Prisma.PrismaPromise<GetDadosContatoUsuarioAggregateType<T>>

    /**
     * Group by DadosContatoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosContatoUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DadosContatoUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DadosContatoUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: DadosContatoUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DadosContatoUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDadosContatoUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DadosContatoUsuario model
   */
  readonly fields: DadosContatoUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DadosContatoUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DadosContatoUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends DadosContatoUsuario$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, DadosContatoUsuario$UsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DadosContatoUsuario model
   */ 
  interface DadosContatoUsuarioFieldRefs {
    readonly uuid: FieldRef<"DadosContatoUsuario", 'String'>
    readonly whathsapp: FieldRef<"DadosContatoUsuario", 'String'>
    readonly email: FieldRef<"DadosContatoUsuario", 'String'>
    readonly instagram: FieldRef<"DadosContatoUsuario", 'String'>
    readonly twitter: FieldRef<"DadosContatoUsuario", 'String'>
    readonly facebook: FieldRef<"DadosContatoUsuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DadosContatoUsuario findUnique
   */
  export type DadosContatoUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which DadosContatoUsuario to fetch.
     */
    where: DadosContatoUsuarioWhereUniqueInput
  }

  /**
   * DadosContatoUsuario findUniqueOrThrow
   */
  export type DadosContatoUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which DadosContatoUsuario to fetch.
     */
    where: DadosContatoUsuarioWhereUniqueInput
  }

  /**
   * DadosContatoUsuario findFirst
   */
  export type DadosContatoUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which DadosContatoUsuario to fetch.
     */
    where?: DadosContatoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosContatoUsuarios to fetch.
     */
    orderBy?: DadosContatoUsuarioOrderByWithRelationInput | DadosContatoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosContatoUsuarios.
     */
    cursor?: DadosContatoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosContatoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosContatoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosContatoUsuarios.
     */
    distinct?: DadosContatoUsuarioScalarFieldEnum | DadosContatoUsuarioScalarFieldEnum[]
  }

  /**
   * DadosContatoUsuario findFirstOrThrow
   */
  export type DadosContatoUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which DadosContatoUsuario to fetch.
     */
    where?: DadosContatoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosContatoUsuarios to fetch.
     */
    orderBy?: DadosContatoUsuarioOrderByWithRelationInput | DadosContatoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosContatoUsuarios.
     */
    cursor?: DadosContatoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosContatoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosContatoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosContatoUsuarios.
     */
    distinct?: DadosContatoUsuarioScalarFieldEnum | DadosContatoUsuarioScalarFieldEnum[]
  }

  /**
   * DadosContatoUsuario findMany
   */
  export type DadosContatoUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which DadosContatoUsuarios to fetch.
     */
    where?: DadosContatoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosContatoUsuarios to fetch.
     */
    orderBy?: DadosContatoUsuarioOrderByWithRelationInput | DadosContatoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DadosContatoUsuarios.
     */
    cursor?: DadosContatoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosContatoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosContatoUsuarios.
     */
    skip?: number
    distinct?: DadosContatoUsuarioScalarFieldEnum | DadosContatoUsuarioScalarFieldEnum[]
  }

  /**
   * DadosContatoUsuario create
   */
  export type DadosContatoUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a DadosContatoUsuario.
     */
    data: XOR<DadosContatoUsuarioCreateInput, DadosContatoUsuarioUncheckedCreateInput>
  }

  /**
   * DadosContatoUsuario createMany
   */
  export type DadosContatoUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DadosContatoUsuarios.
     */
    data: DadosContatoUsuarioCreateManyInput | DadosContatoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DadosContatoUsuario createManyAndReturn
   */
  export type DadosContatoUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DadosContatoUsuarios.
     */
    data: DadosContatoUsuarioCreateManyInput | DadosContatoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DadosContatoUsuario update
   */
  export type DadosContatoUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a DadosContatoUsuario.
     */
    data: XOR<DadosContatoUsuarioUpdateInput, DadosContatoUsuarioUncheckedUpdateInput>
    /**
     * Choose, which DadosContatoUsuario to update.
     */
    where: DadosContatoUsuarioWhereUniqueInput
  }

  /**
   * DadosContatoUsuario updateMany
   */
  export type DadosContatoUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DadosContatoUsuarios.
     */
    data: XOR<DadosContatoUsuarioUpdateManyMutationInput, DadosContatoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which DadosContatoUsuarios to update
     */
    where?: DadosContatoUsuarioWhereInput
  }

  /**
   * DadosContatoUsuario upsert
   */
  export type DadosContatoUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the DadosContatoUsuario to update in case it exists.
     */
    where: DadosContatoUsuarioWhereUniqueInput
    /**
     * In case the DadosContatoUsuario found by the `where` argument doesn't exist, create a new DadosContatoUsuario with this data.
     */
    create: XOR<DadosContatoUsuarioCreateInput, DadosContatoUsuarioUncheckedCreateInput>
    /**
     * In case the DadosContatoUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DadosContatoUsuarioUpdateInput, DadosContatoUsuarioUncheckedUpdateInput>
  }

  /**
   * DadosContatoUsuario delete
   */
  export type DadosContatoUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
    /**
     * Filter which DadosContatoUsuario to delete.
     */
    where: DadosContatoUsuarioWhereUniqueInput
  }

  /**
   * DadosContatoUsuario deleteMany
   */
  export type DadosContatoUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosContatoUsuarios to delete
     */
    where?: DadosContatoUsuarioWhereInput
  }

  /**
   * DadosContatoUsuario.Usuario
   */
  export type DadosContatoUsuario$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * DadosContatoUsuario without action
   */
  export type DadosContatoUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosContatoUsuario
     */
    select?: DadosContatoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosContatoUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model EnderecoUsuario
   */

  export type AggregateEnderecoUsuario = {
    _count: EnderecoUsuarioCountAggregateOutputType | null
    _min: EnderecoUsuarioMinAggregateOutputType | null
    _max: EnderecoUsuarioMaxAggregateOutputType | null
  }

  export type EnderecoUsuarioMinAggregateOutputType = {
    uuid: string | null
    endereco: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    estado: string | null
    cep: string | null
  }

  export type EnderecoUsuarioMaxAggregateOutputType = {
    uuid: string | null
    endereco: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    estado: string | null
    cep: string | null
  }

  export type EnderecoUsuarioCountAggregateOutputType = {
    uuid: number
    endereco: number
    complemento: number
    bairro: number
    cidade: number
    estado: number
    cep: number
    _all: number
  }


  export type EnderecoUsuarioMinAggregateInputType = {
    uuid?: true
    endereco?: true
    complemento?: true
    bairro?: true
    cidade?: true
    estado?: true
    cep?: true
  }

  export type EnderecoUsuarioMaxAggregateInputType = {
    uuid?: true
    endereco?: true
    complemento?: true
    bairro?: true
    cidade?: true
    estado?: true
    cep?: true
  }

  export type EnderecoUsuarioCountAggregateInputType = {
    uuid?: true
    endereco?: true
    complemento?: true
    bairro?: true
    cidade?: true
    estado?: true
    cep?: true
    _all?: true
  }

  export type EnderecoUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnderecoUsuario to aggregate.
     */
    where?: EnderecoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoUsuarios to fetch.
     */
    orderBy?: EnderecoUsuarioOrderByWithRelationInput | EnderecoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnderecoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EnderecoUsuarios
    **/
    _count?: true | EnderecoUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnderecoUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnderecoUsuarioMaxAggregateInputType
  }

  export type GetEnderecoUsuarioAggregateType<T extends EnderecoUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateEnderecoUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEnderecoUsuario[P]>
      : GetScalarType<T[P], AggregateEnderecoUsuario[P]>
  }




  export type EnderecoUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoUsuarioWhereInput
    orderBy?: EnderecoUsuarioOrderByWithAggregationInput | EnderecoUsuarioOrderByWithAggregationInput[]
    by: EnderecoUsuarioScalarFieldEnum[] | EnderecoUsuarioScalarFieldEnum
    having?: EnderecoUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnderecoUsuarioCountAggregateInputType | true
    _min?: EnderecoUsuarioMinAggregateInputType
    _max?: EnderecoUsuarioMaxAggregateInputType
  }

  export type EnderecoUsuarioGroupByOutputType = {
    uuid: string
    endereco: string
    complemento: string
    bairro: string
    cidade: string
    estado: string
    cep: string
    _count: EnderecoUsuarioCountAggregateOutputType | null
    _min: EnderecoUsuarioMinAggregateOutputType | null
    _max: EnderecoUsuarioMaxAggregateOutputType | null
  }

  type GetEnderecoUsuarioGroupByPayload<T extends EnderecoUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnderecoUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnderecoUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnderecoUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], EnderecoUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type EnderecoUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    endereco?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
    Usuario?: boolean | EnderecoUsuario$UsuarioArgs<ExtArgs>
    _count?: boolean | EnderecoUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["enderecoUsuario"]>

  export type EnderecoUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    endereco?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
  }, ExtArgs["result"]["enderecoUsuario"]>

  export type EnderecoUsuarioSelectScalar = {
    uuid?: boolean
    endereco?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    estado?: boolean
    cep?: boolean
  }

  export type EnderecoUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | EnderecoUsuario$UsuarioArgs<ExtArgs>
    _count?: boolean | EnderecoUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EnderecoUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EnderecoUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EnderecoUsuario"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      endereco: string
      complemento: string
      bairro: string
      cidade: string
      estado: string
      cep: string
    }, ExtArgs["result"]["enderecoUsuario"]>
    composites: {}
  }

  type EnderecoUsuarioGetPayload<S extends boolean | null | undefined | EnderecoUsuarioDefaultArgs> = $Result.GetResult<Prisma.$EnderecoUsuarioPayload, S>

  type EnderecoUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EnderecoUsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EnderecoUsuarioCountAggregateInputType | true
    }

  export interface EnderecoUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EnderecoUsuario'], meta: { name: 'EnderecoUsuario' } }
    /**
     * Find zero or one EnderecoUsuario that matches the filter.
     * @param {EnderecoUsuarioFindUniqueArgs} args - Arguments to find a EnderecoUsuario
     * @example
     * // Get one EnderecoUsuario
     * const enderecoUsuario = await prisma.enderecoUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnderecoUsuarioFindUniqueArgs>(args: SelectSubset<T, EnderecoUsuarioFindUniqueArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EnderecoUsuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EnderecoUsuarioFindUniqueOrThrowArgs} args - Arguments to find a EnderecoUsuario
     * @example
     * // Get one EnderecoUsuario
     * const enderecoUsuario = await prisma.enderecoUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnderecoUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, EnderecoUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EnderecoUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioFindFirstArgs} args - Arguments to find a EnderecoUsuario
     * @example
     * // Get one EnderecoUsuario
     * const enderecoUsuario = await prisma.enderecoUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnderecoUsuarioFindFirstArgs>(args?: SelectSubset<T, EnderecoUsuarioFindFirstArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EnderecoUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioFindFirstOrThrowArgs} args - Arguments to find a EnderecoUsuario
     * @example
     * // Get one EnderecoUsuario
     * const enderecoUsuario = await prisma.enderecoUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnderecoUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, EnderecoUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EnderecoUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EnderecoUsuarios
     * const enderecoUsuarios = await prisma.enderecoUsuario.findMany()
     * 
     * // Get first 10 EnderecoUsuarios
     * const enderecoUsuarios = await prisma.enderecoUsuario.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const enderecoUsuarioWithUuidOnly = await prisma.enderecoUsuario.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends EnderecoUsuarioFindManyArgs>(args?: SelectSubset<T, EnderecoUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EnderecoUsuario.
     * @param {EnderecoUsuarioCreateArgs} args - Arguments to create a EnderecoUsuario.
     * @example
     * // Create one EnderecoUsuario
     * const EnderecoUsuario = await prisma.enderecoUsuario.create({
     *   data: {
     *     // ... data to create a EnderecoUsuario
     *   }
     * })
     * 
     */
    create<T extends EnderecoUsuarioCreateArgs>(args: SelectSubset<T, EnderecoUsuarioCreateArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EnderecoUsuarios.
     * @param {EnderecoUsuarioCreateManyArgs} args - Arguments to create many EnderecoUsuarios.
     * @example
     * // Create many EnderecoUsuarios
     * const enderecoUsuario = await prisma.enderecoUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnderecoUsuarioCreateManyArgs>(args?: SelectSubset<T, EnderecoUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EnderecoUsuarios and returns the data saved in the database.
     * @param {EnderecoUsuarioCreateManyAndReturnArgs} args - Arguments to create many EnderecoUsuarios.
     * @example
     * // Create many EnderecoUsuarios
     * const enderecoUsuario = await prisma.enderecoUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EnderecoUsuarios and only return the `uuid`
     * const enderecoUsuarioWithUuidOnly = await prisma.enderecoUsuario.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnderecoUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, EnderecoUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EnderecoUsuario.
     * @param {EnderecoUsuarioDeleteArgs} args - Arguments to delete one EnderecoUsuario.
     * @example
     * // Delete one EnderecoUsuario
     * const EnderecoUsuario = await prisma.enderecoUsuario.delete({
     *   where: {
     *     // ... filter to delete one EnderecoUsuario
     *   }
     * })
     * 
     */
    delete<T extends EnderecoUsuarioDeleteArgs>(args: SelectSubset<T, EnderecoUsuarioDeleteArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EnderecoUsuario.
     * @param {EnderecoUsuarioUpdateArgs} args - Arguments to update one EnderecoUsuario.
     * @example
     * // Update one EnderecoUsuario
     * const enderecoUsuario = await prisma.enderecoUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnderecoUsuarioUpdateArgs>(args: SelectSubset<T, EnderecoUsuarioUpdateArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EnderecoUsuarios.
     * @param {EnderecoUsuarioDeleteManyArgs} args - Arguments to filter EnderecoUsuarios to delete.
     * @example
     * // Delete a few EnderecoUsuarios
     * const { count } = await prisma.enderecoUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnderecoUsuarioDeleteManyArgs>(args?: SelectSubset<T, EnderecoUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EnderecoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EnderecoUsuarios
     * const enderecoUsuario = await prisma.enderecoUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnderecoUsuarioUpdateManyArgs>(args: SelectSubset<T, EnderecoUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EnderecoUsuario.
     * @param {EnderecoUsuarioUpsertArgs} args - Arguments to update or create a EnderecoUsuario.
     * @example
     * // Update or create a EnderecoUsuario
     * const enderecoUsuario = await prisma.enderecoUsuario.upsert({
     *   create: {
     *     // ... data to create a EnderecoUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EnderecoUsuario we want to update
     *   }
     * })
     */
    upsert<T extends EnderecoUsuarioUpsertArgs>(args: SelectSubset<T, EnderecoUsuarioUpsertArgs<ExtArgs>>): Prisma__EnderecoUsuarioClient<$Result.GetResult<Prisma.$EnderecoUsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EnderecoUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioCountArgs} args - Arguments to filter EnderecoUsuarios to count.
     * @example
     * // Count the number of EnderecoUsuarios
     * const count = await prisma.enderecoUsuario.count({
     *   where: {
     *     // ... the filter for the EnderecoUsuarios we want to count
     *   }
     * })
    **/
    count<T extends EnderecoUsuarioCountArgs>(
      args?: Subset<T, EnderecoUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnderecoUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EnderecoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnderecoUsuarioAggregateArgs>(args: Subset<T, EnderecoUsuarioAggregateArgs>): Prisma.PrismaPromise<GetEnderecoUsuarioAggregateType<T>>

    /**
     * Group by EnderecoUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnderecoUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnderecoUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: EnderecoUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnderecoUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnderecoUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EnderecoUsuario model
   */
  readonly fields: EnderecoUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EnderecoUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnderecoUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends EnderecoUsuario$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, EnderecoUsuario$UsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EnderecoUsuario model
   */ 
  interface EnderecoUsuarioFieldRefs {
    readonly uuid: FieldRef<"EnderecoUsuario", 'String'>
    readonly endereco: FieldRef<"EnderecoUsuario", 'String'>
    readonly complemento: FieldRef<"EnderecoUsuario", 'String'>
    readonly bairro: FieldRef<"EnderecoUsuario", 'String'>
    readonly cidade: FieldRef<"EnderecoUsuario", 'String'>
    readonly estado: FieldRef<"EnderecoUsuario", 'String'>
    readonly cep: FieldRef<"EnderecoUsuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EnderecoUsuario findUnique
   */
  export type EnderecoUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoUsuario to fetch.
     */
    where: EnderecoUsuarioWhereUniqueInput
  }

  /**
   * EnderecoUsuario findUniqueOrThrow
   */
  export type EnderecoUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoUsuario to fetch.
     */
    where: EnderecoUsuarioWhereUniqueInput
  }

  /**
   * EnderecoUsuario findFirst
   */
  export type EnderecoUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoUsuario to fetch.
     */
    where?: EnderecoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoUsuarios to fetch.
     */
    orderBy?: EnderecoUsuarioOrderByWithRelationInput | EnderecoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnderecoUsuarios.
     */
    cursor?: EnderecoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnderecoUsuarios.
     */
    distinct?: EnderecoUsuarioScalarFieldEnum | EnderecoUsuarioScalarFieldEnum[]
  }

  /**
   * EnderecoUsuario findFirstOrThrow
   */
  export type EnderecoUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoUsuario to fetch.
     */
    where?: EnderecoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoUsuarios to fetch.
     */
    orderBy?: EnderecoUsuarioOrderByWithRelationInput | EnderecoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EnderecoUsuarios.
     */
    cursor?: EnderecoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EnderecoUsuarios.
     */
    distinct?: EnderecoUsuarioScalarFieldEnum | EnderecoUsuarioScalarFieldEnum[]
  }

  /**
   * EnderecoUsuario findMany
   */
  export type EnderecoUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EnderecoUsuarios to fetch.
     */
    where?: EnderecoUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EnderecoUsuarios to fetch.
     */
    orderBy?: EnderecoUsuarioOrderByWithRelationInput | EnderecoUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EnderecoUsuarios.
     */
    cursor?: EnderecoUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EnderecoUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EnderecoUsuarios.
     */
    skip?: number
    distinct?: EnderecoUsuarioScalarFieldEnum | EnderecoUsuarioScalarFieldEnum[]
  }

  /**
   * EnderecoUsuario create
   */
  export type EnderecoUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a EnderecoUsuario.
     */
    data: XOR<EnderecoUsuarioCreateInput, EnderecoUsuarioUncheckedCreateInput>
  }

  /**
   * EnderecoUsuario createMany
   */
  export type EnderecoUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EnderecoUsuarios.
     */
    data: EnderecoUsuarioCreateManyInput | EnderecoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EnderecoUsuario createManyAndReturn
   */
  export type EnderecoUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EnderecoUsuarios.
     */
    data: EnderecoUsuarioCreateManyInput | EnderecoUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EnderecoUsuario update
   */
  export type EnderecoUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a EnderecoUsuario.
     */
    data: XOR<EnderecoUsuarioUpdateInput, EnderecoUsuarioUncheckedUpdateInput>
    /**
     * Choose, which EnderecoUsuario to update.
     */
    where: EnderecoUsuarioWhereUniqueInput
  }

  /**
   * EnderecoUsuario updateMany
   */
  export type EnderecoUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EnderecoUsuarios.
     */
    data: XOR<EnderecoUsuarioUpdateManyMutationInput, EnderecoUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which EnderecoUsuarios to update
     */
    where?: EnderecoUsuarioWhereInput
  }

  /**
   * EnderecoUsuario upsert
   */
  export type EnderecoUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the EnderecoUsuario to update in case it exists.
     */
    where: EnderecoUsuarioWhereUniqueInput
    /**
     * In case the EnderecoUsuario found by the `where` argument doesn't exist, create a new EnderecoUsuario with this data.
     */
    create: XOR<EnderecoUsuarioCreateInput, EnderecoUsuarioUncheckedCreateInput>
    /**
     * In case the EnderecoUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnderecoUsuarioUpdateInput, EnderecoUsuarioUncheckedUpdateInput>
  }

  /**
   * EnderecoUsuario delete
   */
  export type EnderecoUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
    /**
     * Filter which EnderecoUsuario to delete.
     */
    where: EnderecoUsuarioWhereUniqueInput
  }

  /**
   * EnderecoUsuario deleteMany
   */
  export type EnderecoUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EnderecoUsuarios to delete
     */
    where?: EnderecoUsuarioWhereInput
  }

  /**
   * EnderecoUsuario.Usuario
   */
  export type EnderecoUsuario$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * EnderecoUsuario without action
   */
  export type EnderecoUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EnderecoUsuario
     */
    select?: EnderecoUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model login
   */

  export type AggregateLogin = {
    _count: LoginCountAggregateOutputType | null
    _min: LoginMinAggregateOutputType | null
    _max: LoginMaxAggregateOutputType | null
  }

  export type LoginMinAggregateOutputType = {
    Usuario_uuid: string | null
    autorizado: boolean | null
    email: string | null
    senha: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type LoginMaxAggregateOutputType = {
    Usuario_uuid: string | null
    autorizado: boolean | null
    email: string | null
    senha: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type LoginCountAggregateOutputType = {
    Usuario_uuid: number
    autorizado: number
    email: number
    senha: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type LoginMinAggregateInputType = {
    Usuario_uuid?: true
    autorizado?: true
    email?: true
    senha?: true
    created_at?: true
    updated_at?: true
  }

  export type LoginMaxAggregateInputType = {
    Usuario_uuid?: true
    autorizado?: true
    email?: true
    senha?: true
    created_at?: true
    updated_at?: true
  }

  export type LoginCountAggregateInputType = {
    Usuario_uuid?: true
    autorizado?: true
    email?: true
    senha?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type LoginAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which login to aggregate.
     */
    where?: loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logins to fetch.
     */
    orderBy?: loginOrderByWithRelationInput | loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned logins
    **/
    _count?: true | LoginCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoginMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoginMaxAggregateInputType
  }

  export type GetLoginAggregateType<T extends LoginAggregateArgs> = {
        [P in keyof T & keyof AggregateLogin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLogin[P]>
      : GetScalarType<T[P], AggregateLogin[P]>
  }




  export type loginGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: loginWhereInput
    orderBy?: loginOrderByWithAggregationInput | loginOrderByWithAggregationInput[]
    by: LoginScalarFieldEnum[] | LoginScalarFieldEnum
    having?: loginScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoginCountAggregateInputType | true
    _min?: LoginMinAggregateInputType
    _max?: LoginMaxAggregateInputType
  }

  export type LoginGroupByOutputType = {
    Usuario_uuid: string
    autorizado: boolean
    email: string
    senha: string
    created_at: Date
    updated_at: Date
    _count: LoginCountAggregateOutputType | null
    _min: LoginMinAggregateOutputType | null
    _max: LoginMaxAggregateOutputType | null
  }

  type GetLoginGroupByPayload<T extends loginGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoginGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoginGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoginGroupByOutputType[P]>
            : GetScalarType<T[P], LoginGroupByOutputType[P]>
        }
      >
    >


  export type loginSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Usuario_uuid?: boolean
    autorizado?: boolean
    email?: boolean
    senha?: boolean
    created_at?: boolean
    updated_at?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["login"]>

  export type loginSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Usuario_uuid?: boolean
    autorizado?: boolean
    email?: boolean
    senha?: boolean
    created_at?: boolean
    updated_at?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["login"]>

  export type loginSelectScalar = {
    Usuario_uuid?: boolean
    autorizado?: boolean
    email?: boolean
    senha?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type loginInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type loginIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $loginPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "login"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Usuario_uuid: string
      autorizado: boolean
      email: string
      senha: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["login"]>
    composites: {}
  }

  type loginGetPayload<S extends boolean | null | undefined | loginDefaultArgs> = $Result.GetResult<Prisma.$loginPayload, S>

  type loginCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<loginFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LoginCountAggregateInputType | true
    }

  export interface loginDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['login'], meta: { name: 'login' } }
    /**
     * Find zero or one Login that matches the filter.
     * @param {loginFindUniqueArgs} args - Arguments to find a Login
     * @example
     * // Get one Login
     * const login = await prisma.login.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends loginFindUniqueArgs>(args: SelectSubset<T, loginFindUniqueArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Login that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {loginFindUniqueOrThrowArgs} args - Arguments to find a Login
     * @example
     * // Get one Login
     * const login = await prisma.login.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends loginFindUniqueOrThrowArgs>(args: SelectSubset<T, loginFindUniqueOrThrowArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Login that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginFindFirstArgs} args - Arguments to find a Login
     * @example
     * // Get one Login
     * const login = await prisma.login.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends loginFindFirstArgs>(args?: SelectSubset<T, loginFindFirstArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Login that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginFindFirstOrThrowArgs} args - Arguments to find a Login
     * @example
     * // Get one Login
     * const login = await prisma.login.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends loginFindFirstOrThrowArgs>(args?: SelectSubset<T, loginFindFirstOrThrowArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Logins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Logins
     * const logins = await prisma.login.findMany()
     * 
     * // Get first 10 Logins
     * const logins = await prisma.login.findMany({ take: 10 })
     * 
     * // Only select the `Usuario_uuid`
     * const loginWithUsuario_uuidOnly = await prisma.login.findMany({ select: { Usuario_uuid: true } })
     * 
     */
    findMany<T extends loginFindManyArgs>(args?: SelectSubset<T, loginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Login.
     * @param {loginCreateArgs} args - Arguments to create a Login.
     * @example
     * // Create one Login
     * const Login = await prisma.login.create({
     *   data: {
     *     // ... data to create a Login
     *   }
     * })
     * 
     */
    create<T extends loginCreateArgs>(args: SelectSubset<T, loginCreateArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Logins.
     * @param {loginCreateManyArgs} args - Arguments to create many Logins.
     * @example
     * // Create many Logins
     * const login = await prisma.login.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends loginCreateManyArgs>(args?: SelectSubset<T, loginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Logins and returns the data saved in the database.
     * @param {loginCreateManyAndReturnArgs} args - Arguments to create many Logins.
     * @example
     * // Create many Logins
     * const login = await prisma.login.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Logins and only return the `Usuario_uuid`
     * const loginWithUsuario_uuidOnly = await prisma.login.createManyAndReturn({ 
     *   select: { Usuario_uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends loginCreateManyAndReturnArgs>(args?: SelectSubset<T, loginCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Login.
     * @param {loginDeleteArgs} args - Arguments to delete one Login.
     * @example
     * // Delete one Login
     * const Login = await prisma.login.delete({
     *   where: {
     *     // ... filter to delete one Login
     *   }
     * })
     * 
     */
    delete<T extends loginDeleteArgs>(args: SelectSubset<T, loginDeleteArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Login.
     * @param {loginUpdateArgs} args - Arguments to update one Login.
     * @example
     * // Update one Login
     * const login = await prisma.login.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends loginUpdateArgs>(args: SelectSubset<T, loginUpdateArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Logins.
     * @param {loginDeleteManyArgs} args - Arguments to filter Logins to delete.
     * @example
     * // Delete a few Logins
     * const { count } = await prisma.login.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends loginDeleteManyArgs>(args?: SelectSubset<T, loginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Logins
     * const login = await prisma.login.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends loginUpdateManyArgs>(args: SelectSubset<T, loginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Login.
     * @param {loginUpsertArgs} args - Arguments to update or create a Login.
     * @example
     * // Update or create a Login
     * const login = await prisma.login.upsert({
     *   create: {
     *     // ... data to create a Login
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Login we want to update
     *   }
     * })
     */
    upsert<T extends loginUpsertArgs>(args: SelectSubset<T, loginUpsertArgs<ExtArgs>>): Prisma__loginClient<$Result.GetResult<Prisma.$loginPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Logins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginCountArgs} args - Arguments to filter Logins to count.
     * @example
     * // Count the number of Logins
     * const count = await prisma.login.count({
     *   where: {
     *     // ... the filter for the Logins we want to count
     *   }
     * })
    **/
    count<T extends loginCountArgs>(
      args?: Subset<T, loginCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoginCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoginAggregateArgs>(args: Subset<T, LoginAggregateArgs>): Prisma.PrismaPromise<GetLoginAggregateType<T>>

    /**
     * Group by Login.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loginGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends loginGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: loginGroupByArgs['orderBy'] }
        : { orderBy?: loginGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, loginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the login model
   */
  readonly fields: loginFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for login.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__loginClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the login model
   */ 
  interface loginFieldRefs {
    readonly Usuario_uuid: FieldRef<"login", 'String'>
    readonly autorizado: FieldRef<"login", 'Boolean'>
    readonly email: FieldRef<"login", 'String'>
    readonly senha: FieldRef<"login", 'String'>
    readonly created_at: FieldRef<"login", 'DateTime'>
    readonly updated_at: FieldRef<"login", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * login findUnique
   */
  export type loginFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * Filter, which login to fetch.
     */
    where: loginWhereUniqueInput
  }

  /**
   * login findUniqueOrThrow
   */
  export type loginFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * Filter, which login to fetch.
     */
    where: loginWhereUniqueInput
  }

  /**
   * login findFirst
   */
  export type loginFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * Filter, which login to fetch.
     */
    where?: loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logins to fetch.
     */
    orderBy?: loginOrderByWithRelationInput | loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for logins.
     */
    cursor?: loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of logins.
     */
    distinct?: LoginScalarFieldEnum | LoginScalarFieldEnum[]
  }

  /**
   * login findFirstOrThrow
   */
  export type loginFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * Filter, which login to fetch.
     */
    where?: loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logins to fetch.
     */
    orderBy?: loginOrderByWithRelationInput | loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for logins.
     */
    cursor?: loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of logins.
     */
    distinct?: LoginScalarFieldEnum | LoginScalarFieldEnum[]
  }

  /**
   * login findMany
   */
  export type loginFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * Filter, which logins to fetch.
     */
    where?: loginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of logins to fetch.
     */
    orderBy?: loginOrderByWithRelationInput | loginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing logins.
     */
    cursor?: loginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` logins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` logins.
     */
    skip?: number
    distinct?: LoginScalarFieldEnum | LoginScalarFieldEnum[]
  }

  /**
   * login create
   */
  export type loginCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * The data needed to create a login.
     */
    data: XOR<loginCreateInput, loginUncheckedCreateInput>
  }

  /**
   * login createMany
   */
  export type loginCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many logins.
     */
    data: loginCreateManyInput | loginCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * login createManyAndReturn
   */
  export type loginCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many logins.
     */
    data: loginCreateManyInput | loginCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * login update
   */
  export type loginUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * The data needed to update a login.
     */
    data: XOR<loginUpdateInput, loginUncheckedUpdateInput>
    /**
     * Choose, which login to update.
     */
    where: loginWhereUniqueInput
  }

  /**
   * login updateMany
   */
  export type loginUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update logins.
     */
    data: XOR<loginUpdateManyMutationInput, loginUncheckedUpdateManyInput>
    /**
     * Filter which logins to update
     */
    where?: loginWhereInput
  }

  /**
   * login upsert
   */
  export type loginUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * The filter to search for the login to update in case it exists.
     */
    where: loginWhereUniqueInput
    /**
     * In case the login found by the `where` argument doesn't exist, create a new login with this data.
     */
    create: XOR<loginCreateInput, loginUncheckedCreateInput>
    /**
     * In case the login was found with the provided `where` argument, update it with this data.
     */
    update: XOR<loginUpdateInput, loginUncheckedUpdateInput>
  }

  /**
   * login delete
   */
  export type loginDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
    /**
     * Filter which login to delete.
     */
    where: loginWhereUniqueInput
  }

  /**
   * login deleteMany
   */
  export type loginDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which logins to delete
     */
    where?: loginWhereInput
  }

  /**
   * login without action
   */
  export type loginDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the login
     */
    select?: loginSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loginInclude<ExtArgs> | null
  }


  /**
   * Model blacklist
   */

  export type AggregateBlacklist = {
    _count: BlacklistCountAggregateOutputType | null
    _min: BlacklistMinAggregateOutputType | null
    _max: BlacklistMaxAggregateOutputType | null
  }

  export type BlacklistMinAggregateOutputType = {
    tokenexpirado: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type BlacklistMaxAggregateOutputType = {
    tokenexpirado: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type BlacklistCountAggregateOutputType = {
    tokenexpirado: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type BlacklistMinAggregateInputType = {
    tokenexpirado?: true
    created_at?: true
    updated_at?: true
  }

  export type BlacklistMaxAggregateInputType = {
    tokenexpirado?: true
    created_at?: true
    updated_at?: true
  }

  export type BlacklistCountAggregateInputType = {
    tokenexpirado?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type BlacklistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blacklist to aggregate.
     */
    where?: blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blacklists to fetch.
     */
    orderBy?: blacklistOrderByWithRelationInput | blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned blacklists
    **/
    _count?: true | BlacklistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlacklistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlacklistMaxAggregateInputType
  }

  export type GetBlacklistAggregateType<T extends BlacklistAggregateArgs> = {
        [P in keyof T & keyof AggregateBlacklist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlacklist[P]>
      : GetScalarType<T[P], AggregateBlacklist[P]>
  }




  export type blacklistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: blacklistWhereInput
    orderBy?: blacklistOrderByWithAggregationInput | blacklistOrderByWithAggregationInput[]
    by: BlacklistScalarFieldEnum[] | BlacklistScalarFieldEnum
    having?: blacklistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlacklistCountAggregateInputType | true
    _min?: BlacklistMinAggregateInputType
    _max?: BlacklistMaxAggregateInputType
  }

  export type BlacklistGroupByOutputType = {
    tokenexpirado: string
    created_at: Date
    updated_at: Date
    _count: BlacklistCountAggregateOutputType | null
    _min: BlacklistMinAggregateOutputType | null
    _max: BlacklistMaxAggregateOutputType | null
  }

  type GetBlacklistGroupByPayload<T extends blacklistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlacklistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlacklistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlacklistGroupByOutputType[P]>
            : GetScalarType<T[P], BlacklistGroupByOutputType[P]>
        }
      >
    >


  export type blacklistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tokenexpirado?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["blacklist"]>

  export type blacklistSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tokenexpirado?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["blacklist"]>

  export type blacklistSelectScalar = {
    tokenexpirado?: boolean
    created_at?: boolean
    updated_at?: boolean
  }


  export type $blacklistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "blacklist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      tokenexpirado: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["blacklist"]>
    composites: {}
  }

  type blacklistGetPayload<S extends boolean | null | undefined | blacklistDefaultArgs> = $Result.GetResult<Prisma.$blacklistPayload, S>

  type blacklistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<blacklistFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BlacklistCountAggregateInputType | true
    }

  export interface blacklistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['blacklist'], meta: { name: 'blacklist' } }
    /**
     * Find zero or one Blacklist that matches the filter.
     * @param {blacklistFindUniqueArgs} args - Arguments to find a Blacklist
     * @example
     * // Get one Blacklist
     * const blacklist = await prisma.blacklist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends blacklistFindUniqueArgs>(args: SelectSubset<T, blacklistFindUniqueArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Blacklist that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {blacklistFindUniqueOrThrowArgs} args - Arguments to find a Blacklist
     * @example
     * // Get one Blacklist
     * const blacklist = await prisma.blacklist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends blacklistFindUniqueOrThrowArgs>(args: SelectSubset<T, blacklistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Blacklist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blacklistFindFirstArgs} args - Arguments to find a Blacklist
     * @example
     * // Get one Blacklist
     * const blacklist = await prisma.blacklist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends blacklistFindFirstArgs>(args?: SelectSubset<T, blacklistFindFirstArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Blacklist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blacklistFindFirstOrThrowArgs} args - Arguments to find a Blacklist
     * @example
     * // Get one Blacklist
     * const blacklist = await prisma.blacklist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends blacklistFindFirstOrThrowArgs>(args?: SelectSubset<T, blacklistFindFirstOrThrowArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Blacklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blacklistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Blacklists
     * const blacklists = await prisma.blacklist.findMany()
     * 
     * // Get first 10 Blacklists
     * const blacklists = await prisma.blacklist.findMany({ take: 10 })
     * 
     * // Only select the `tokenexpirado`
     * const blacklistWithTokenexpiradoOnly = await prisma.blacklist.findMany({ select: { tokenexpirado: true } })
     * 
     */
    findMany<T extends blacklistFindManyArgs>(args?: SelectSubset<T, blacklistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Blacklist.
     * @param {blacklistCreateArgs} args - Arguments to create a Blacklist.
     * @example
     * // Create one Blacklist
     * const Blacklist = await prisma.blacklist.create({
     *   data: {
     *     // ... data to create a Blacklist
     *   }
     * })
     * 
     */
    create<T extends blacklistCreateArgs>(args: SelectSubset<T, blacklistCreateArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Blacklists.
     * @param {blacklistCreateManyArgs} args - Arguments to create many Blacklists.
     * @example
     * // Create many Blacklists
     * const blacklist = await prisma.blacklist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends blacklistCreateManyArgs>(args?: SelectSubset<T, blacklistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Blacklists and returns the data saved in the database.
     * @param {blacklistCreateManyAndReturnArgs} args - Arguments to create many Blacklists.
     * @example
     * // Create many Blacklists
     * const blacklist = await prisma.blacklist.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Blacklists and only return the `tokenexpirado`
     * const blacklistWithTokenexpiradoOnly = await prisma.blacklist.createManyAndReturn({ 
     *   select: { tokenexpirado: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends blacklistCreateManyAndReturnArgs>(args?: SelectSubset<T, blacklistCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Blacklist.
     * @param {blacklistDeleteArgs} args - Arguments to delete one Blacklist.
     * @example
     * // Delete one Blacklist
     * const Blacklist = await prisma.blacklist.delete({
     *   where: {
     *     // ... filter to delete one Blacklist
     *   }
     * })
     * 
     */
    delete<T extends blacklistDeleteArgs>(args: SelectSubset<T, blacklistDeleteArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Blacklist.
     * @param {blacklistUpdateArgs} args - Arguments to update one Blacklist.
     * @example
     * // Update one Blacklist
     * const blacklist = await prisma.blacklist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends blacklistUpdateArgs>(args: SelectSubset<T, blacklistUpdateArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Blacklists.
     * @param {blacklistDeleteManyArgs} args - Arguments to filter Blacklists to delete.
     * @example
     * // Delete a few Blacklists
     * const { count } = await prisma.blacklist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends blacklistDeleteManyArgs>(args?: SelectSubset<T, blacklistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Blacklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blacklistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Blacklists
     * const blacklist = await prisma.blacklist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends blacklistUpdateManyArgs>(args: SelectSubset<T, blacklistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Blacklist.
     * @param {blacklistUpsertArgs} args - Arguments to update or create a Blacklist.
     * @example
     * // Update or create a Blacklist
     * const blacklist = await prisma.blacklist.upsert({
     *   create: {
     *     // ... data to create a Blacklist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Blacklist we want to update
     *   }
     * })
     */
    upsert<T extends blacklistUpsertArgs>(args: SelectSubset<T, blacklistUpsertArgs<ExtArgs>>): Prisma__blacklistClient<$Result.GetResult<Prisma.$blacklistPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Blacklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blacklistCountArgs} args - Arguments to filter Blacklists to count.
     * @example
     * // Count the number of Blacklists
     * const count = await prisma.blacklist.count({
     *   where: {
     *     // ... the filter for the Blacklists we want to count
     *   }
     * })
    **/
    count<T extends blacklistCountArgs>(
      args?: Subset<T, blacklistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlacklistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Blacklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlacklistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlacklistAggregateArgs>(args: Subset<T, BlacklistAggregateArgs>): Prisma.PrismaPromise<GetBlacklistAggregateType<T>>

    /**
     * Group by Blacklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {blacklistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends blacklistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: blacklistGroupByArgs['orderBy'] }
        : { orderBy?: blacklistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, blacklistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlacklistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the blacklist model
   */
  readonly fields: blacklistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for blacklist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__blacklistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the blacklist model
   */ 
  interface blacklistFieldRefs {
    readonly tokenexpirado: FieldRef<"blacklist", 'String'>
    readonly created_at: FieldRef<"blacklist", 'DateTime'>
    readonly updated_at: FieldRef<"blacklist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * blacklist findUnique
   */
  export type blacklistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * Filter, which blacklist to fetch.
     */
    where: blacklistWhereUniqueInput
  }

  /**
   * blacklist findUniqueOrThrow
   */
  export type blacklistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * Filter, which blacklist to fetch.
     */
    where: blacklistWhereUniqueInput
  }

  /**
   * blacklist findFirst
   */
  export type blacklistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * Filter, which blacklist to fetch.
     */
    where?: blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blacklists to fetch.
     */
    orderBy?: blacklistOrderByWithRelationInput | blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blacklists.
     */
    cursor?: blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blacklists.
     */
    distinct?: BlacklistScalarFieldEnum | BlacklistScalarFieldEnum[]
  }

  /**
   * blacklist findFirstOrThrow
   */
  export type blacklistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * Filter, which blacklist to fetch.
     */
    where?: blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blacklists to fetch.
     */
    orderBy?: blacklistOrderByWithRelationInput | blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for blacklists.
     */
    cursor?: blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of blacklists.
     */
    distinct?: BlacklistScalarFieldEnum | BlacklistScalarFieldEnum[]
  }

  /**
   * blacklist findMany
   */
  export type blacklistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * Filter, which blacklists to fetch.
     */
    where?: blacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of blacklists to fetch.
     */
    orderBy?: blacklistOrderByWithRelationInput | blacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing blacklists.
     */
    cursor?: blacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` blacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` blacklists.
     */
    skip?: number
    distinct?: BlacklistScalarFieldEnum | BlacklistScalarFieldEnum[]
  }

  /**
   * blacklist create
   */
  export type blacklistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * The data needed to create a blacklist.
     */
    data: XOR<blacklistCreateInput, blacklistUncheckedCreateInput>
  }

  /**
   * blacklist createMany
   */
  export type blacklistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many blacklists.
     */
    data: blacklistCreateManyInput | blacklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * blacklist createManyAndReturn
   */
  export type blacklistCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many blacklists.
     */
    data: blacklistCreateManyInput | blacklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * blacklist update
   */
  export type blacklistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * The data needed to update a blacklist.
     */
    data: XOR<blacklistUpdateInput, blacklistUncheckedUpdateInput>
    /**
     * Choose, which blacklist to update.
     */
    where: blacklistWhereUniqueInput
  }

  /**
   * blacklist updateMany
   */
  export type blacklistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update blacklists.
     */
    data: XOR<blacklistUpdateManyMutationInput, blacklistUncheckedUpdateManyInput>
    /**
     * Filter which blacklists to update
     */
    where?: blacklistWhereInput
  }

  /**
   * blacklist upsert
   */
  export type blacklistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * The filter to search for the blacklist to update in case it exists.
     */
    where: blacklistWhereUniqueInput
    /**
     * In case the blacklist found by the `where` argument doesn't exist, create a new blacklist with this data.
     */
    create: XOR<blacklistCreateInput, blacklistUncheckedCreateInput>
    /**
     * In case the blacklist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<blacklistUpdateInput, blacklistUncheckedUpdateInput>
  }

  /**
   * blacklist delete
   */
  export type blacklistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
    /**
     * Filter which blacklist to delete.
     */
    where: blacklistWhereUniqueInput
  }

  /**
   * blacklist deleteMany
   */
  export type blacklistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which blacklists to delete
     */
    where?: blacklistWhereInput
  }

  /**
   * blacklist without action
   */
  export type blacklistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the blacklist
     */
    select?: blacklistSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ColigacaoScalarFieldEnum: {
    uuid: 'uuid',
    usuarioUuid: 'usuarioUuid',
    ano: 'ano'
  };

  export type ColigacaoScalarFieldEnum = (typeof ColigacaoScalarFieldEnum)[keyof typeof ColigacaoScalarFieldEnum]


  export const CandidatoScalarFieldEnum: {
    uuid: 'uuid',
    nomeCandidato: 'nomeCandidato',
    nomeUrna: 'nomeUrna',
    partido: 'partido',
    coligacaoUuid: 'coligacaoUuid',
    created_at: 'created_at'
  };

  export type CandidatoScalarFieldEnum = (typeof CandidatoScalarFieldEnum)[keyof typeof CandidatoScalarFieldEnum]


  export const ContatoCandidatoScalarFieldEnum: {
    uuidContato: 'uuidContato',
    uuidEmpresa: 'uuidEmpresa',
    nomeContato: 'nomeContato',
    cargo: 'cargo',
    telefone: 'telefone',
    whatsapp: 'whatsapp',
    email: 'email'
  };

  export type ContatoCandidatoScalarFieldEnum = (typeof ContatoCandidatoScalarFieldEnum)[keyof typeof ContatoCandidatoScalarFieldEnum]


  export const TipoAtendimentoScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao'
  };

  export type TipoAtendimentoScalarFieldEnum = (typeof TipoAtendimentoScalarFieldEnum)[keyof typeof TipoAtendimentoScalarFieldEnum]


  export const AtendimentoScalarFieldEnum: {
    uuid: 'uuid',
    eleitorUuid: 'eleitorUuid',
    usuarioUuid: 'usuarioUuid',
    responsavelUuid: 'responsavelUuid',
    custo: 'custo',
    dataatendimento: 'dataatendimento',
    created_at: 'created_at',
    updated_at: 'updated_at',
    tipoAtendimento: 'tipoAtendimento',
    descricao: 'descricao'
  };

  export type AtendimentoScalarFieldEnum = (typeof AtendimentoScalarFieldEnum)[keyof typeof AtendimentoScalarFieldEnum]


  export const EleitorScalarFieldEnum: {
    uuid: 'uuid',
    nomeCompleto: 'nomeCompleto',
    nomeMae: 'nomeMae',
    sexo: 'sexo',
    cpf: 'cpf',
    rg: 'rg',
    coligacaoUuid: 'coligacaoUuid',
    dataNascimento: 'dataNascimento',
    indicado_por: 'indicado_por',
    candidatoUuid: 'candidatoUuid',
    usuarioUuid: 'usuarioUuid',
    sessaoEleitoral: 'sessaoEleitoral',
    classificacaoId: 'classificacaoId',
    created_at: 'created_at'
  };

  export type EleitorScalarFieldEnum = (typeof EleitorScalarFieldEnum)[keyof typeof EleitorScalarFieldEnum]


  export const ContatoEleitorScalarFieldEnum: {
    uuid: 'uuid',
    email: 'email',
    celular: 'celular',
    eleitorUuid: 'eleitorUuid'
  };

  export type ContatoEleitorScalarFieldEnum = (typeof ContatoEleitorScalarFieldEnum)[keyof typeof ContatoEleitorScalarFieldEnum]


  export const MidiasSociaisEleitorScalarFieldEnum: {
    uuid: 'uuid',
    instagram: 'instagram',
    facebook: 'facebook',
    twitter: 'twitter',
    tiktok: 'tiktok',
    eleitorUuid: 'eleitorUuid'
  };

  export type MidiasSociaisEleitorScalarFieldEnum = (typeof MidiasSociaisEleitorScalarFieldEnum)[keyof typeof MidiasSociaisEleitorScalarFieldEnum]


  export const EnderecoEleitorScalarFieldEnum: {
    uuid: 'uuid',
    latitude: 'latitude',
    longitude: 'longitude',
    endereco: 'endereco',
    nCasa: 'nCasa',
    cep: 'cep',
    complemento: 'complemento',
    bairro: 'bairro',
    cidade: 'cidade',
    codIbge: 'codIbge',
    uf: 'uf',
    pais: 'pais',
    eleitorUuid: 'eleitorUuid'
  };

  export type EnderecoEleitorScalarFieldEnum = (typeof EnderecoEleitorScalarFieldEnum)[keyof typeof EnderecoEleitorScalarFieldEnum]


  export const DadosPessoaisEleitorScalarFieldEnum: {
    uuid: 'uuid',
    cpf: 'cpf',
    rg: 'rg',
    sessao: 'sessao',
    zona: 'zona',
    localdevotacao: 'localdevotacao',
    eleitorUuid: 'eleitorUuid'
  };

  export type DadosPessoaisEleitorScalarFieldEnum = (typeof DadosPessoaisEleitorScalarFieldEnum)[keyof typeof DadosPessoaisEleitorScalarFieldEnum]


  export const PlanejamentoLocalVotacaoScalarFieldEnum: {
    uuid: 'uuid',
    localVotacaoUuid: 'localVotacaoUuid',
    candidatoUuid: 'candidatoUuid'
  };

  export type PlanejamentoLocalVotacaoScalarFieldEnum = (typeof PlanejamentoLocalVotacaoScalarFieldEnum)[keyof typeof PlanejamentoLocalVotacaoScalarFieldEnum]


  export const ExpectativaScalarFieldEnum: {
    localdevotacao_has_CandidatoUuid: 'localdevotacao_has_CandidatoUuid',
    expectativa: 'expectativa'
  };

  export type ExpectativaScalarFieldEnum = (typeof ExpectativaScalarFieldEnum)[keyof typeof ExpectativaScalarFieldEnum]


  export const LocalVotacaoScalarFieldEnum: {
    uuid: 'uuid',
    localdevotacao: 'localdevotacao',
    updatedAt: 'updatedAt',
    createdaAt: 'createdaAt',
    totalEleitores: 'totalEleitores'
  };

  export type LocalVotacaoScalarFieldEnum = (typeof LocalVotacaoScalarFieldEnum)[keyof typeof LocalVotacaoScalarFieldEnum]


  export const EleicoesScalarFieldEnum: {
    uuid: 'uuid',
    ano: 'ano',
    descricao: 'descricao'
  };

  export type EleicoesScalarFieldEnum = (typeof EleicoesScalarFieldEnum)[keyof typeof EleicoesScalarFieldEnum]


  export const UFScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao'
  };

  export type UFScalarFieldEnum = (typeof UFScalarFieldEnum)[keyof typeof UFScalarFieldEnum]


  export const MunicipioScalarFieldEnum: {
    id: 'id',
    uFId: 'uFId',
    descricao: 'descricao'
  };

  export type MunicipioScalarFieldEnum = (typeof MunicipioScalarFieldEnum)[keyof typeof MunicipioScalarFieldEnum]


  export const CandidatosEleicaoScalarFieldEnum: {
    sequencial: 'sequencial',
    nomecandidato: 'nomecandidato',
    cargoCandidato: 'cargoCandidato',
    municipioId: 'municipioId',
    numero_urna: 'numero_urna',
    eleicoesUuid: 'eleicoesUuid'
  };

  export type CandidatosEleicaoScalarFieldEnum = (typeof CandidatosEleicaoScalarFieldEnum)[keyof typeof CandidatosEleicaoScalarFieldEnum]


  export const LocalVotacao_has_candidatoEleicaoScalarFieldEnum: {
    uuid: 'uuid',
    localVotacaoUuid: 'localVotacaoUuid',
    candidatosEleicaoSequencial: 'candidatosEleicaoSequencial'
  };

  export type LocalVotacao_has_candidatoEleicaoScalarFieldEnum = (typeof LocalVotacao_has_candidatoEleicaoScalarFieldEnum)[keyof typeof LocalVotacao_has_candidatoEleicaoScalarFieldEnum]


  export const Quantidade_votos_eleicaoScalarFieldEnum: {
    uuidLocal: 'uuidLocal',
    votos: 'votos'
  };

  export type Quantidade_votos_eleicaoScalarFieldEnum = (typeof Quantidade_votos_eleicaoScalarFieldEnum)[keyof typeof Quantidade_votos_eleicaoScalarFieldEnum]


  export const SessoesEleitoraisScalarFieldEnum: {
    uuid: 'uuid',
    sessao: 'sessao',
    zona: 'zona',
    nVotantes: 'nVotantes',
    localVotacaoUuid: 'localVotacaoUuid',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SessoesEleitoraisScalarFieldEnum = (typeof SessoesEleitoraisScalarFieldEnum)[keyof typeof SessoesEleitoraisScalarFieldEnum]


  export const EnderecoLocalVotacaoScalarFieldEnum: {
    uuid: 'uuid',
    endereco: 'endereco',
    bairro: 'bairro',
    cidade: 'cidade',
    uf: 'uf',
    cep: 'cep',
    latitude: 'latitude',
    longitude: 'longitude',
    localVotacaoUuid: 'localVotacaoUuid'
  };

  export type EnderecoLocalVotacaoScalarFieldEnum = (typeof EnderecoLocalVotacaoScalarFieldEnum)[keyof typeof EnderecoLocalVotacaoScalarFieldEnum]


  export const PerfilUsoScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao'
  };

  export type PerfilUsoScalarFieldEnum = (typeof PerfilUsoScalarFieldEnum)[keyof typeof PerfilUsoScalarFieldEnum]


  export const ClassificacaoScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao',
    hexColor: 'hexColor',
    eleitoruuid: 'eleitoruuid'
  };

  export type ClassificacaoScalarFieldEnum = (typeof ClassificacaoScalarFieldEnum)[keyof typeof ClassificacaoScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    uuid: 'uuid',
    nomeCompleto: 'nomeCompleto',
    apelido: 'apelido',
    isAtivo: 'isAtivo',
    uuidCandidato: 'uuidCandidato',
    created_at: 'created_at',
    updated_at: 'updated_at',
    perfil: 'perfil',
    dadosContatoUsuarioUuid: 'dadosContatoUsuarioUuid',
    enderecoUsuarioUuid: 'enderecoUsuarioUuid'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const DadosContatoUsuarioScalarFieldEnum: {
    uuid: 'uuid',
    whathsapp: 'whathsapp',
    email: 'email',
    instagram: 'instagram',
    twitter: 'twitter',
    facebook: 'facebook'
  };

  export type DadosContatoUsuarioScalarFieldEnum = (typeof DadosContatoUsuarioScalarFieldEnum)[keyof typeof DadosContatoUsuarioScalarFieldEnum]


  export const EnderecoUsuarioScalarFieldEnum: {
    uuid: 'uuid',
    endereco: 'endereco',
    complemento: 'complemento',
    bairro: 'bairro',
    cidade: 'cidade',
    estado: 'estado',
    cep: 'cep'
  };

  export type EnderecoUsuarioScalarFieldEnum = (typeof EnderecoUsuarioScalarFieldEnum)[keyof typeof EnderecoUsuarioScalarFieldEnum]


  export const LoginScalarFieldEnum: {
    Usuario_uuid: 'Usuario_uuid',
    autorizado: 'autorizado',
    email: 'email',
    senha: 'senha',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type LoginScalarFieldEnum = (typeof LoginScalarFieldEnum)[keyof typeof LoginScalarFieldEnum]


  export const BlacklistScalarFieldEnum: {
    tokenexpirado: 'tokenexpirado',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type BlacklistScalarFieldEnum = (typeof BlacklistScalarFieldEnum)[keyof typeof BlacklistScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type coligacaoWhereInput = {
    AND?: coligacaoWhereInput | coligacaoWhereInput[]
    OR?: coligacaoWhereInput[]
    NOT?: coligacaoWhereInput | coligacaoWhereInput[]
    uuid?: StringFilter<"coligacao"> | string
    usuarioUuid?: StringFilter<"coligacao"> | string
    ano?: IntFilter<"coligacao"> | number
    Usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    Candidatos?: CandidatoListRelationFilter
    Eleitores?: EleitorListRelationFilter
  }

  export type coligacaoOrderByWithRelationInput = {
    uuid?: SortOrder
    usuarioUuid?: SortOrder
    ano?: SortOrder
    Usuario?: UsuarioOrderByWithRelationInput
    Candidatos?: CandidatoOrderByRelationAggregateInput
    Eleitores?: EleitorOrderByRelationAggregateInput
  }

  export type coligacaoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: coligacaoWhereInput | coligacaoWhereInput[]
    OR?: coligacaoWhereInput[]
    NOT?: coligacaoWhereInput | coligacaoWhereInput[]
    usuarioUuid?: StringFilter<"coligacao"> | string
    ano?: IntFilter<"coligacao"> | number
    Usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    Candidatos?: CandidatoListRelationFilter
    Eleitores?: EleitorListRelationFilter
  }, "uuid">

  export type coligacaoOrderByWithAggregationInput = {
    uuid?: SortOrder
    usuarioUuid?: SortOrder
    ano?: SortOrder
    _count?: coligacaoCountOrderByAggregateInput
    _avg?: coligacaoAvgOrderByAggregateInput
    _max?: coligacaoMaxOrderByAggregateInput
    _min?: coligacaoMinOrderByAggregateInput
    _sum?: coligacaoSumOrderByAggregateInput
  }

  export type coligacaoScalarWhereWithAggregatesInput = {
    AND?: coligacaoScalarWhereWithAggregatesInput | coligacaoScalarWhereWithAggregatesInput[]
    OR?: coligacaoScalarWhereWithAggregatesInput[]
    NOT?: coligacaoScalarWhereWithAggregatesInput | coligacaoScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"coligacao"> | string
    usuarioUuid?: StringWithAggregatesFilter<"coligacao"> | string
    ano?: IntWithAggregatesFilter<"coligacao"> | number
  }

  export type CandidatoWhereInput = {
    AND?: CandidatoWhereInput | CandidatoWhereInput[]
    OR?: CandidatoWhereInput[]
    NOT?: CandidatoWhereInput | CandidatoWhereInput[]
    uuid?: StringFilter<"Candidato"> | string
    nomeCandidato?: StringFilter<"Candidato"> | string
    nomeUrna?: StringNullableFilter<"Candidato"> | string | null
    partido?: StringNullableFilter<"Candidato"> | string | null
    coligacaoUuid?: StringNullableFilter<"Candidato"> | string | null
    created_at?: DateTimeFilter<"Candidato"> | Date | string
    Usuario?: UsuarioListRelationFilter
    contato?: ContatoCandidatoListRelationFilter
    Eleitor?: EleitorListRelationFilter
    coligacao?: XOR<ColigacaoNullableRelationFilter, coligacaoWhereInput> | null
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoListRelationFilter
  }

  export type CandidatoOrderByWithRelationInput = {
    uuid?: SortOrder
    nomeCandidato?: SortOrder
    nomeUrna?: SortOrderInput | SortOrder
    partido?: SortOrderInput | SortOrder
    coligacaoUuid?: SortOrderInput | SortOrder
    created_at?: SortOrder
    Usuario?: UsuarioOrderByRelationAggregateInput
    contato?: ContatoCandidatoOrderByRelationAggregateInput
    Eleitor?: EleitorOrderByRelationAggregateInput
    coligacao?: coligacaoOrderByWithRelationInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoOrderByRelationAggregateInput
  }

  export type CandidatoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: CandidatoWhereInput | CandidatoWhereInput[]
    OR?: CandidatoWhereInput[]
    NOT?: CandidatoWhereInput | CandidatoWhereInput[]
    nomeCandidato?: StringFilter<"Candidato"> | string
    nomeUrna?: StringNullableFilter<"Candidato"> | string | null
    partido?: StringNullableFilter<"Candidato"> | string | null
    coligacaoUuid?: StringNullableFilter<"Candidato"> | string | null
    created_at?: DateTimeFilter<"Candidato"> | Date | string
    Usuario?: UsuarioListRelationFilter
    contato?: ContatoCandidatoListRelationFilter
    Eleitor?: EleitorListRelationFilter
    coligacao?: XOR<ColigacaoNullableRelationFilter, coligacaoWhereInput> | null
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoListRelationFilter
  }, "uuid">

  export type CandidatoOrderByWithAggregationInput = {
    uuid?: SortOrder
    nomeCandidato?: SortOrder
    nomeUrna?: SortOrderInput | SortOrder
    partido?: SortOrderInput | SortOrder
    coligacaoUuid?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: CandidatoCountOrderByAggregateInput
    _max?: CandidatoMaxOrderByAggregateInput
    _min?: CandidatoMinOrderByAggregateInput
  }

  export type CandidatoScalarWhereWithAggregatesInput = {
    AND?: CandidatoScalarWhereWithAggregatesInput | CandidatoScalarWhereWithAggregatesInput[]
    OR?: CandidatoScalarWhereWithAggregatesInput[]
    NOT?: CandidatoScalarWhereWithAggregatesInput | CandidatoScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Candidato"> | string
    nomeCandidato?: StringWithAggregatesFilter<"Candidato"> | string
    nomeUrna?: StringNullableWithAggregatesFilter<"Candidato"> | string | null
    partido?: StringNullableWithAggregatesFilter<"Candidato"> | string | null
    coligacaoUuid?: StringNullableWithAggregatesFilter<"Candidato"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Candidato"> | Date | string
  }

  export type ContatoCandidatoWhereInput = {
    AND?: ContatoCandidatoWhereInput | ContatoCandidatoWhereInput[]
    OR?: ContatoCandidatoWhereInput[]
    NOT?: ContatoCandidatoWhereInput | ContatoCandidatoWhereInput[]
    uuidContato?: StringFilter<"ContatoCandidato"> | string
    uuidEmpresa?: StringFilter<"ContatoCandidato"> | string
    nomeContato?: StringFilter<"ContatoCandidato"> | string
    cargo?: StringFilter<"ContatoCandidato"> | string
    telefone?: StringFilter<"ContatoCandidato"> | string
    whatsapp?: StringNullableFilter<"ContatoCandidato"> | string | null
    email?: StringFilter<"ContatoCandidato"> | string
    Candidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
  }

  export type ContatoCandidatoOrderByWithRelationInput = {
    uuidContato?: SortOrder
    uuidEmpresa?: SortOrder
    nomeContato?: SortOrder
    cargo?: SortOrder
    telefone?: SortOrder
    whatsapp?: SortOrderInput | SortOrder
    email?: SortOrder
    Candidato?: CandidatoOrderByWithRelationInput
  }

  export type ContatoCandidatoWhereUniqueInput = Prisma.AtLeast<{
    uuidContato?: string
    AND?: ContatoCandidatoWhereInput | ContatoCandidatoWhereInput[]
    OR?: ContatoCandidatoWhereInput[]
    NOT?: ContatoCandidatoWhereInput | ContatoCandidatoWhereInput[]
    uuidEmpresa?: StringFilter<"ContatoCandidato"> | string
    nomeContato?: StringFilter<"ContatoCandidato"> | string
    cargo?: StringFilter<"ContatoCandidato"> | string
    telefone?: StringFilter<"ContatoCandidato"> | string
    whatsapp?: StringNullableFilter<"ContatoCandidato"> | string | null
    email?: StringFilter<"ContatoCandidato"> | string
    Candidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
  }, "uuidContato">

  export type ContatoCandidatoOrderByWithAggregationInput = {
    uuidContato?: SortOrder
    uuidEmpresa?: SortOrder
    nomeContato?: SortOrder
    cargo?: SortOrder
    telefone?: SortOrder
    whatsapp?: SortOrderInput | SortOrder
    email?: SortOrder
    _count?: ContatoCandidatoCountOrderByAggregateInput
    _max?: ContatoCandidatoMaxOrderByAggregateInput
    _min?: ContatoCandidatoMinOrderByAggregateInput
  }

  export type ContatoCandidatoScalarWhereWithAggregatesInput = {
    AND?: ContatoCandidatoScalarWhereWithAggregatesInput | ContatoCandidatoScalarWhereWithAggregatesInput[]
    OR?: ContatoCandidatoScalarWhereWithAggregatesInput[]
    NOT?: ContatoCandidatoScalarWhereWithAggregatesInput | ContatoCandidatoScalarWhereWithAggregatesInput[]
    uuidContato?: StringWithAggregatesFilter<"ContatoCandidato"> | string
    uuidEmpresa?: StringWithAggregatesFilter<"ContatoCandidato"> | string
    nomeContato?: StringWithAggregatesFilter<"ContatoCandidato"> | string
    cargo?: StringWithAggregatesFilter<"ContatoCandidato"> | string
    telefone?: StringWithAggregatesFilter<"ContatoCandidato"> | string
    whatsapp?: StringNullableWithAggregatesFilter<"ContatoCandidato"> | string | null
    email?: StringWithAggregatesFilter<"ContatoCandidato"> | string
  }

  export type tipoAtendimentoWhereInput = {
    AND?: tipoAtendimentoWhereInput | tipoAtendimentoWhereInput[]
    OR?: tipoAtendimentoWhereInput[]
    NOT?: tipoAtendimentoWhereInput | tipoAtendimentoWhereInput[]
    id?: IntFilter<"tipoAtendimento"> | number
    descricao?: StringFilter<"tipoAtendimento"> | string
    atendimento?: AtendimentoListRelationFilter
  }

  export type tipoAtendimentoOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    atendimento?: atendimentoOrderByRelationAggregateInput
  }

  export type tipoAtendimentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tipoAtendimentoWhereInput | tipoAtendimentoWhereInput[]
    OR?: tipoAtendimentoWhereInput[]
    NOT?: tipoAtendimentoWhereInput | tipoAtendimentoWhereInput[]
    descricao?: StringFilter<"tipoAtendimento"> | string
    atendimento?: AtendimentoListRelationFilter
  }, "id">

  export type tipoAtendimentoOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    _count?: tipoAtendimentoCountOrderByAggregateInput
    _avg?: tipoAtendimentoAvgOrderByAggregateInput
    _max?: tipoAtendimentoMaxOrderByAggregateInput
    _min?: tipoAtendimentoMinOrderByAggregateInput
    _sum?: tipoAtendimentoSumOrderByAggregateInput
  }

  export type tipoAtendimentoScalarWhereWithAggregatesInput = {
    AND?: tipoAtendimentoScalarWhereWithAggregatesInput | tipoAtendimentoScalarWhereWithAggregatesInput[]
    OR?: tipoAtendimentoScalarWhereWithAggregatesInput[]
    NOT?: tipoAtendimentoScalarWhereWithAggregatesInput | tipoAtendimentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipoAtendimento"> | number
    descricao?: StringWithAggregatesFilter<"tipoAtendimento"> | string
  }

  export type atendimentoWhereInput = {
    AND?: atendimentoWhereInput | atendimentoWhereInput[]
    OR?: atendimentoWhereInput[]
    NOT?: atendimentoWhereInput | atendimentoWhereInput[]
    uuid?: StringFilter<"atendimento"> | string
    eleitorUuid?: StringFilter<"atendimento"> | string
    usuarioUuid?: StringFilter<"atendimento"> | string
    responsavelUuid?: StringFilter<"atendimento"> | string
    custo?: FloatFilter<"atendimento"> | number
    dataatendimento?: DateTimeFilter<"atendimento"> | Date | string
    created_at?: DateTimeFilter<"atendimento"> | Date | string
    updated_at?: DateTimeNullableFilter<"atendimento"> | Date | string | null
    tipoAtendimento?: IntNullableFilter<"atendimento"> | number | null
    descricao?: StringNullableFilter<"atendimento"> | string | null
    criado_por?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    responsavel?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
    atendimento?: XOR<TipoAtendimentoNullableRelationFilter, tipoAtendimentoWhereInput> | null
  }

  export type atendimentoOrderByWithRelationInput = {
    uuid?: SortOrder
    eleitorUuid?: SortOrder
    usuarioUuid?: SortOrder
    responsavelUuid?: SortOrder
    custo?: SortOrder
    dataatendimento?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    tipoAtendimento?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    criado_por?: UsuarioOrderByWithRelationInput
    responsavel?: UsuarioOrderByWithRelationInput
    eleitor?: EleitorOrderByWithRelationInput
    atendimento?: tipoAtendimentoOrderByWithRelationInput
  }

  export type atendimentoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: atendimentoWhereInput | atendimentoWhereInput[]
    OR?: atendimentoWhereInput[]
    NOT?: atendimentoWhereInput | atendimentoWhereInput[]
    eleitorUuid?: StringFilter<"atendimento"> | string
    usuarioUuid?: StringFilter<"atendimento"> | string
    responsavelUuid?: StringFilter<"atendimento"> | string
    custo?: FloatFilter<"atendimento"> | number
    dataatendimento?: DateTimeFilter<"atendimento"> | Date | string
    created_at?: DateTimeFilter<"atendimento"> | Date | string
    updated_at?: DateTimeNullableFilter<"atendimento"> | Date | string | null
    tipoAtendimento?: IntNullableFilter<"atendimento"> | number | null
    descricao?: StringNullableFilter<"atendimento"> | string | null
    criado_por?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    responsavel?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
    atendimento?: XOR<TipoAtendimentoNullableRelationFilter, tipoAtendimentoWhereInput> | null
  }, "uuid">

  export type atendimentoOrderByWithAggregationInput = {
    uuid?: SortOrder
    eleitorUuid?: SortOrder
    usuarioUuid?: SortOrder
    responsavelUuid?: SortOrder
    custo?: SortOrder
    dataatendimento?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    tipoAtendimento?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    _count?: atendimentoCountOrderByAggregateInput
    _avg?: atendimentoAvgOrderByAggregateInput
    _max?: atendimentoMaxOrderByAggregateInput
    _min?: atendimentoMinOrderByAggregateInput
    _sum?: atendimentoSumOrderByAggregateInput
  }

  export type atendimentoScalarWhereWithAggregatesInput = {
    AND?: atendimentoScalarWhereWithAggregatesInput | atendimentoScalarWhereWithAggregatesInput[]
    OR?: atendimentoScalarWhereWithAggregatesInput[]
    NOT?: atendimentoScalarWhereWithAggregatesInput | atendimentoScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"atendimento"> | string
    eleitorUuid?: StringWithAggregatesFilter<"atendimento"> | string
    usuarioUuid?: StringWithAggregatesFilter<"atendimento"> | string
    responsavelUuid?: StringWithAggregatesFilter<"atendimento"> | string
    custo?: FloatWithAggregatesFilter<"atendimento"> | number
    dataatendimento?: DateTimeWithAggregatesFilter<"atendimento"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"atendimento"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"atendimento"> | Date | string | null
    tipoAtendimento?: IntNullableWithAggregatesFilter<"atendimento"> | number | null
    descricao?: StringNullableWithAggregatesFilter<"atendimento"> | string | null
  }

  export type EleitorWhereInput = {
    AND?: EleitorWhereInput | EleitorWhereInput[]
    OR?: EleitorWhereInput[]
    NOT?: EleitorWhereInput | EleitorWhereInput[]
    uuid?: StringFilter<"Eleitor"> | string
    nomeCompleto?: StringFilter<"Eleitor"> | string
    nomeMae?: StringFilter<"Eleitor"> | string
    sexo?: StringFilter<"Eleitor"> | string
    cpf?: StringFilter<"Eleitor"> | string
    rg?: StringFilter<"Eleitor"> | string
    coligacaoUuid?: StringNullableFilter<"Eleitor"> | string | null
    dataNascimento?: DateTimeNullableFilter<"Eleitor"> | Date | string | null
    indicado_por?: StringNullableFilter<"Eleitor"> | string | null
    candidatoUuid?: StringFilter<"Eleitor"> | string
    usuarioUuid?: StringNullableFilter<"Eleitor"> | string | null
    sessaoEleitoral?: IntNullableFilter<"Eleitor"> | number | null
    classificacaoId?: IntNullableFilter<"Eleitor"> | number | null
    created_at?: DateTimeFilter<"Eleitor"> | Date | string
    Formiguinha?: XOR<EleitorNullableRelationFilter, EleitorWhereInput> | null
    sessaoeleitoral?: XOR<LocalVotacaoNullableRelationFilter, LocalVotacaoWhereInput> | null
    criado_por?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    candidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
    classificacao?: XOR<ClassificacaoNullableRelationFilter, classificacaoWhereInput> | null
    coligacao?: XOR<ColigacaoNullableRelationFilter, coligacaoWhereInput> | null
    Indicacoes?: EleitorListRelationFilter
    contatoEleitor?: ContatoEleitorListRelationFilter
    MidiasSociaisEleitor?: MidiasSociaisEleitorListRelationFilter
    DadosPessoaisEleitor?: DadosPessoaisEleitorListRelationFilter
    EnderecoEleitor?: EnderecoEleitorListRelationFilter
    atendimento?: AtendimentoListRelationFilter
  }

  export type EleitorOrderByWithRelationInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    nomeMae?: SortOrder
    sexo?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    coligacaoUuid?: SortOrderInput | SortOrder
    dataNascimento?: SortOrderInput | SortOrder
    indicado_por?: SortOrderInput | SortOrder
    candidatoUuid?: SortOrder
    usuarioUuid?: SortOrderInput | SortOrder
    sessaoEleitoral?: SortOrderInput | SortOrder
    classificacaoId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    Formiguinha?: EleitorOrderByWithRelationInput
    sessaoeleitoral?: LocalVotacaoOrderByWithRelationInput
    criado_por?: UsuarioOrderByWithRelationInput
    candidato?: CandidatoOrderByWithRelationInput
    classificacao?: classificacaoOrderByWithRelationInput
    coligacao?: coligacaoOrderByWithRelationInput
    Indicacoes?: EleitorOrderByRelationAggregateInput
    contatoEleitor?: contatoEleitorOrderByRelationAggregateInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorOrderByRelationAggregateInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorOrderByRelationAggregateInput
    EnderecoEleitor?: EnderecoEleitorOrderByRelationAggregateInput
    atendimento?: atendimentoOrderByRelationAggregateInput
  }

  export type EleitorWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: EleitorWhereInput | EleitorWhereInput[]
    OR?: EleitorWhereInput[]
    NOT?: EleitorWhereInput | EleitorWhereInput[]
    nomeCompleto?: StringFilter<"Eleitor"> | string
    nomeMae?: StringFilter<"Eleitor"> | string
    sexo?: StringFilter<"Eleitor"> | string
    cpf?: StringFilter<"Eleitor"> | string
    rg?: StringFilter<"Eleitor"> | string
    coligacaoUuid?: StringNullableFilter<"Eleitor"> | string | null
    dataNascimento?: DateTimeNullableFilter<"Eleitor"> | Date | string | null
    indicado_por?: StringNullableFilter<"Eleitor"> | string | null
    candidatoUuid?: StringFilter<"Eleitor"> | string
    usuarioUuid?: StringNullableFilter<"Eleitor"> | string | null
    sessaoEleitoral?: IntNullableFilter<"Eleitor"> | number | null
    classificacaoId?: IntNullableFilter<"Eleitor"> | number | null
    created_at?: DateTimeFilter<"Eleitor"> | Date | string
    Formiguinha?: XOR<EleitorNullableRelationFilter, EleitorWhereInput> | null
    sessaoeleitoral?: XOR<LocalVotacaoNullableRelationFilter, LocalVotacaoWhereInput> | null
    criado_por?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    candidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
    classificacao?: XOR<ClassificacaoNullableRelationFilter, classificacaoWhereInput> | null
    coligacao?: XOR<ColigacaoNullableRelationFilter, coligacaoWhereInput> | null
    Indicacoes?: EleitorListRelationFilter
    contatoEleitor?: ContatoEleitorListRelationFilter
    MidiasSociaisEleitor?: MidiasSociaisEleitorListRelationFilter
    DadosPessoaisEleitor?: DadosPessoaisEleitorListRelationFilter
    EnderecoEleitor?: EnderecoEleitorListRelationFilter
    atendimento?: AtendimentoListRelationFilter
  }, "uuid">

  export type EleitorOrderByWithAggregationInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    nomeMae?: SortOrder
    sexo?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    coligacaoUuid?: SortOrderInput | SortOrder
    dataNascimento?: SortOrderInput | SortOrder
    indicado_por?: SortOrderInput | SortOrder
    candidatoUuid?: SortOrder
    usuarioUuid?: SortOrderInput | SortOrder
    sessaoEleitoral?: SortOrderInput | SortOrder
    classificacaoId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: EleitorCountOrderByAggregateInput
    _avg?: EleitorAvgOrderByAggregateInput
    _max?: EleitorMaxOrderByAggregateInput
    _min?: EleitorMinOrderByAggregateInput
    _sum?: EleitorSumOrderByAggregateInput
  }

  export type EleitorScalarWhereWithAggregatesInput = {
    AND?: EleitorScalarWhereWithAggregatesInput | EleitorScalarWhereWithAggregatesInput[]
    OR?: EleitorScalarWhereWithAggregatesInput[]
    NOT?: EleitorScalarWhereWithAggregatesInput | EleitorScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Eleitor"> | string
    nomeCompleto?: StringWithAggregatesFilter<"Eleitor"> | string
    nomeMae?: StringWithAggregatesFilter<"Eleitor"> | string
    sexo?: StringWithAggregatesFilter<"Eleitor"> | string
    cpf?: StringWithAggregatesFilter<"Eleitor"> | string
    rg?: StringWithAggregatesFilter<"Eleitor"> | string
    coligacaoUuid?: StringNullableWithAggregatesFilter<"Eleitor"> | string | null
    dataNascimento?: DateTimeNullableWithAggregatesFilter<"Eleitor"> | Date | string | null
    indicado_por?: StringNullableWithAggregatesFilter<"Eleitor"> | string | null
    candidatoUuid?: StringWithAggregatesFilter<"Eleitor"> | string
    usuarioUuid?: StringNullableWithAggregatesFilter<"Eleitor"> | string | null
    sessaoEleitoral?: IntNullableWithAggregatesFilter<"Eleitor"> | number | null
    classificacaoId?: IntNullableWithAggregatesFilter<"Eleitor"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Eleitor"> | Date | string
  }

  export type contatoEleitorWhereInput = {
    AND?: contatoEleitorWhereInput | contatoEleitorWhereInput[]
    OR?: contatoEleitorWhereInput[]
    NOT?: contatoEleitorWhereInput | contatoEleitorWhereInput[]
    uuid?: StringFilter<"contatoEleitor"> | string
    email?: StringFilter<"contatoEleitor"> | string
    celular?: StringFilter<"contatoEleitor"> | string
    eleitorUuid?: StringFilter<"contatoEleitor"> | string
    Eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
  }

  export type contatoEleitorOrderByWithRelationInput = {
    uuid?: SortOrder
    email?: SortOrder
    celular?: SortOrder
    eleitorUuid?: SortOrder
    Eleitor?: EleitorOrderByWithRelationInput
  }

  export type contatoEleitorWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: contatoEleitorWhereInput | contatoEleitorWhereInput[]
    OR?: contatoEleitorWhereInput[]
    NOT?: contatoEleitorWhereInput | contatoEleitorWhereInput[]
    email?: StringFilter<"contatoEleitor"> | string
    celular?: StringFilter<"contatoEleitor"> | string
    eleitorUuid?: StringFilter<"contatoEleitor"> | string
    Eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
  }, "uuid">

  export type contatoEleitorOrderByWithAggregationInput = {
    uuid?: SortOrder
    email?: SortOrder
    celular?: SortOrder
    eleitorUuid?: SortOrder
    _count?: contatoEleitorCountOrderByAggregateInput
    _max?: contatoEleitorMaxOrderByAggregateInput
    _min?: contatoEleitorMinOrderByAggregateInput
  }

  export type contatoEleitorScalarWhereWithAggregatesInput = {
    AND?: contatoEleitorScalarWhereWithAggregatesInput | contatoEleitorScalarWhereWithAggregatesInput[]
    OR?: contatoEleitorScalarWhereWithAggregatesInput[]
    NOT?: contatoEleitorScalarWhereWithAggregatesInput | contatoEleitorScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"contatoEleitor"> | string
    email?: StringWithAggregatesFilter<"contatoEleitor"> | string
    celular?: StringWithAggregatesFilter<"contatoEleitor"> | string
    eleitorUuid?: StringWithAggregatesFilter<"contatoEleitor"> | string
  }

  export type MidiasSociaisEleitorWhereInput = {
    AND?: MidiasSociaisEleitorWhereInput | MidiasSociaisEleitorWhereInput[]
    OR?: MidiasSociaisEleitorWhereInput[]
    NOT?: MidiasSociaisEleitorWhereInput | MidiasSociaisEleitorWhereInput[]
    uuid?: StringFilter<"MidiasSociaisEleitor"> | string
    instagram?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    facebook?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    twitter?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    tiktok?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    eleitorUuid?: StringFilter<"MidiasSociaisEleitor"> | string
    Eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
  }

  export type MidiasSociaisEleitorOrderByWithRelationInput = {
    uuid?: SortOrder
    instagram?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    tiktok?: SortOrderInput | SortOrder
    eleitorUuid?: SortOrder
    Eleitor?: EleitorOrderByWithRelationInput
  }

  export type MidiasSociaisEleitorWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: MidiasSociaisEleitorWhereInput | MidiasSociaisEleitorWhereInput[]
    OR?: MidiasSociaisEleitorWhereInput[]
    NOT?: MidiasSociaisEleitorWhereInput | MidiasSociaisEleitorWhereInput[]
    instagram?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    facebook?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    twitter?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    tiktok?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    eleitorUuid?: StringFilter<"MidiasSociaisEleitor"> | string
    Eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
  }, "uuid">

  export type MidiasSociaisEleitorOrderByWithAggregationInput = {
    uuid?: SortOrder
    instagram?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    tiktok?: SortOrderInput | SortOrder
    eleitorUuid?: SortOrder
    _count?: MidiasSociaisEleitorCountOrderByAggregateInput
    _max?: MidiasSociaisEleitorMaxOrderByAggregateInput
    _min?: MidiasSociaisEleitorMinOrderByAggregateInput
  }

  export type MidiasSociaisEleitorScalarWhereWithAggregatesInput = {
    AND?: MidiasSociaisEleitorScalarWhereWithAggregatesInput | MidiasSociaisEleitorScalarWhereWithAggregatesInput[]
    OR?: MidiasSociaisEleitorScalarWhereWithAggregatesInput[]
    NOT?: MidiasSociaisEleitorScalarWhereWithAggregatesInput | MidiasSociaisEleitorScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"MidiasSociaisEleitor"> | string
    instagram?: StringNullableWithAggregatesFilter<"MidiasSociaisEleitor"> | string | null
    facebook?: StringNullableWithAggregatesFilter<"MidiasSociaisEleitor"> | string | null
    twitter?: StringNullableWithAggregatesFilter<"MidiasSociaisEleitor"> | string | null
    tiktok?: StringNullableWithAggregatesFilter<"MidiasSociaisEleitor"> | string | null
    eleitorUuid?: StringWithAggregatesFilter<"MidiasSociaisEleitor"> | string
  }

  export type EnderecoEleitorWhereInput = {
    AND?: EnderecoEleitorWhereInput | EnderecoEleitorWhereInput[]
    OR?: EnderecoEleitorWhereInput[]
    NOT?: EnderecoEleitorWhereInput | EnderecoEleitorWhereInput[]
    uuid?: StringFilter<"EnderecoEleitor"> | string
    latitude?: FloatFilter<"EnderecoEleitor"> | number
    longitude?: FloatFilter<"EnderecoEleitor"> | number
    endereco?: StringNullableFilter<"EnderecoEleitor"> | string | null
    nCasa?: StringNullableFilter<"EnderecoEleitor"> | string | null
    cep?: StringNullableFilter<"EnderecoEleitor"> | string | null
    complemento?: StringNullableFilter<"EnderecoEleitor"> | string | null
    bairro?: StringNullableFilter<"EnderecoEleitor"> | string | null
    cidade?: StringNullableFilter<"EnderecoEleitor"> | string | null
    codIbge?: StringNullableFilter<"EnderecoEleitor"> | string | null
    uf?: StringNullableFilter<"EnderecoEleitor"> | string | null
    pais?: StringNullableFilter<"EnderecoEleitor"> | string | null
    eleitorUuid?: StringNullableFilter<"EnderecoEleitor"> | string | null
    Eleitor?: XOR<EleitorNullableRelationFilter, EleitorWhereInput> | null
  }

  export type EnderecoEleitorOrderByWithRelationInput = {
    uuid?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    endereco?: SortOrderInput | SortOrder
    nCasa?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    codIbge?: SortOrderInput | SortOrder
    uf?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    eleitorUuid?: SortOrderInput | SortOrder
    Eleitor?: EleitorOrderByWithRelationInput
  }

  export type EnderecoEleitorWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: EnderecoEleitorWhereInput | EnderecoEleitorWhereInput[]
    OR?: EnderecoEleitorWhereInput[]
    NOT?: EnderecoEleitorWhereInput | EnderecoEleitorWhereInput[]
    latitude?: FloatFilter<"EnderecoEleitor"> | number
    longitude?: FloatFilter<"EnderecoEleitor"> | number
    endereco?: StringNullableFilter<"EnderecoEleitor"> | string | null
    nCasa?: StringNullableFilter<"EnderecoEleitor"> | string | null
    cep?: StringNullableFilter<"EnderecoEleitor"> | string | null
    complemento?: StringNullableFilter<"EnderecoEleitor"> | string | null
    bairro?: StringNullableFilter<"EnderecoEleitor"> | string | null
    cidade?: StringNullableFilter<"EnderecoEleitor"> | string | null
    codIbge?: StringNullableFilter<"EnderecoEleitor"> | string | null
    uf?: StringNullableFilter<"EnderecoEleitor"> | string | null
    pais?: StringNullableFilter<"EnderecoEleitor"> | string | null
    eleitorUuid?: StringNullableFilter<"EnderecoEleitor"> | string | null
    Eleitor?: XOR<EleitorNullableRelationFilter, EleitorWhereInput> | null
  }, "uuid">

  export type EnderecoEleitorOrderByWithAggregationInput = {
    uuid?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    endereco?: SortOrderInput | SortOrder
    nCasa?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    codIbge?: SortOrderInput | SortOrder
    uf?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    eleitorUuid?: SortOrderInput | SortOrder
    _count?: EnderecoEleitorCountOrderByAggregateInput
    _avg?: EnderecoEleitorAvgOrderByAggregateInput
    _max?: EnderecoEleitorMaxOrderByAggregateInput
    _min?: EnderecoEleitorMinOrderByAggregateInput
    _sum?: EnderecoEleitorSumOrderByAggregateInput
  }

  export type EnderecoEleitorScalarWhereWithAggregatesInput = {
    AND?: EnderecoEleitorScalarWhereWithAggregatesInput | EnderecoEleitorScalarWhereWithAggregatesInput[]
    OR?: EnderecoEleitorScalarWhereWithAggregatesInput[]
    NOT?: EnderecoEleitorScalarWhereWithAggregatesInput | EnderecoEleitorScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"EnderecoEleitor"> | string
    latitude?: FloatWithAggregatesFilter<"EnderecoEleitor"> | number
    longitude?: FloatWithAggregatesFilter<"EnderecoEleitor"> | number
    endereco?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    nCasa?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    cep?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    complemento?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    codIbge?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    uf?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    pais?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
    eleitorUuid?: StringNullableWithAggregatesFilter<"EnderecoEleitor"> | string | null
  }

  export type DadosPessoaisEleitorWhereInput = {
    AND?: DadosPessoaisEleitorWhereInput | DadosPessoaisEleitorWhereInput[]
    OR?: DadosPessoaisEleitorWhereInput[]
    NOT?: DadosPessoaisEleitorWhereInput | DadosPessoaisEleitorWhereInput[]
    uuid?: StringFilter<"DadosPessoaisEleitor"> | string
    cpf?: StringNullableFilter<"DadosPessoaisEleitor"> | string | null
    rg?: StringNullableFilter<"DadosPessoaisEleitor"> | string | null
    sessao?: StringFilter<"DadosPessoaisEleitor"> | string
    zona?: StringFilter<"DadosPessoaisEleitor"> | string
    localdevotacao?: StringFilter<"DadosPessoaisEleitor"> | string
    eleitorUuid?: StringFilter<"DadosPessoaisEleitor"> | string
    eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
  }

  export type DadosPessoaisEleitorOrderByWithRelationInput = {
    uuid?: SortOrder
    cpf?: SortOrderInput | SortOrder
    rg?: SortOrderInput | SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    localdevotacao?: SortOrder
    eleitorUuid?: SortOrder
    eleitor?: EleitorOrderByWithRelationInput
  }

  export type DadosPessoaisEleitorWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: DadosPessoaisEleitorWhereInput | DadosPessoaisEleitorWhereInput[]
    OR?: DadosPessoaisEleitorWhereInput[]
    NOT?: DadosPessoaisEleitorWhereInput | DadosPessoaisEleitorWhereInput[]
    cpf?: StringNullableFilter<"DadosPessoaisEleitor"> | string | null
    rg?: StringNullableFilter<"DadosPessoaisEleitor"> | string | null
    sessao?: StringFilter<"DadosPessoaisEleitor"> | string
    zona?: StringFilter<"DadosPessoaisEleitor"> | string
    localdevotacao?: StringFilter<"DadosPessoaisEleitor"> | string
    eleitorUuid?: StringFilter<"DadosPessoaisEleitor"> | string
    eleitor?: XOR<EleitorRelationFilter, EleitorWhereInput>
  }, "uuid">

  export type DadosPessoaisEleitorOrderByWithAggregationInput = {
    uuid?: SortOrder
    cpf?: SortOrderInput | SortOrder
    rg?: SortOrderInput | SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    localdevotacao?: SortOrder
    eleitorUuid?: SortOrder
    _count?: DadosPessoaisEleitorCountOrderByAggregateInput
    _max?: DadosPessoaisEleitorMaxOrderByAggregateInput
    _min?: DadosPessoaisEleitorMinOrderByAggregateInput
  }

  export type DadosPessoaisEleitorScalarWhereWithAggregatesInput = {
    AND?: DadosPessoaisEleitorScalarWhereWithAggregatesInput | DadosPessoaisEleitorScalarWhereWithAggregatesInput[]
    OR?: DadosPessoaisEleitorScalarWhereWithAggregatesInput[]
    NOT?: DadosPessoaisEleitorScalarWhereWithAggregatesInput | DadosPessoaisEleitorScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"DadosPessoaisEleitor"> | string
    cpf?: StringNullableWithAggregatesFilter<"DadosPessoaisEleitor"> | string | null
    rg?: StringNullableWithAggregatesFilter<"DadosPessoaisEleitor"> | string | null
    sessao?: StringWithAggregatesFilter<"DadosPessoaisEleitor"> | string
    zona?: StringWithAggregatesFilter<"DadosPessoaisEleitor"> | string
    localdevotacao?: StringWithAggregatesFilter<"DadosPessoaisEleitor"> | string
    eleitorUuid?: StringWithAggregatesFilter<"DadosPessoaisEleitor"> | string
  }

  export type PlanejamentoLocalVotacaoWhereInput = {
    AND?: PlanejamentoLocalVotacaoWhereInput | PlanejamentoLocalVotacaoWhereInput[]
    OR?: PlanejamentoLocalVotacaoWhereInput[]
    NOT?: PlanejamentoLocalVotacaoWhereInput | PlanejamentoLocalVotacaoWhereInput[]
    uuid?: StringFilter<"PlanejamentoLocalVotacao"> | string
    localVotacaoUuid?: IntFilter<"PlanejamentoLocalVotacao"> | number
    candidatoUuid?: StringFilter<"PlanejamentoLocalVotacao"> | string
    cadandidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
    Local?: XOR<LocalVotacaoRelationFilter, LocalVotacaoWhereInput>
    Expectativa?: ExpectativaListRelationFilter
  }

  export type PlanejamentoLocalVotacaoOrderByWithRelationInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatoUuid?: SortOrder
    cadandidato?: CandidatoOrderByWithRelationInput
    Local?: LocalVotacaoOrderByWithRelationInput
    Expectativa?: ExpectativaOrderByRelationAggregateInput
  }

  export type PlanejamentoLocalVotacaoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: PlanejamentoLocalVotacaoWhereInput | PlanejamentoLocalVotacaoWhereInput[]
    OR?: PlanejamentoLocalVotacaoWhereInput[]
    NOT?: PlanejamentoLocalVotacaoWhereInput | PlanejamentoLocalVotacaoWhereInput[]
    localVotacaoUuid?: IntFilter<"PlanejamentoLocalVotacao"> | number
    candidatoUuid?: StringFilter<"PlanejamentoLocalVotacao"> | string
    cadandidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
    Local?: XOR<LocalVotacaoRelationFilter, LocalVotacaoWhereInput>
    Expectativa?: ExpectativaListRelationFilter
  }, "uuid">

  export type PlanejamentoLocalVotacaoOrderByWithAggregationInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatoUuid?: SortOrder
    _count?: PlanejamentoLocalVotacaoCountOrderByAggregateInput
    _avg?: PlanejamentoLocalVotacaoAvgOrderByAggregateInput
    _max?: PlanejamentoLocalVotacaoMaxOrderByAggregateInput
    _min?: PlanejamentoLocalVotacaoMinOrderByAggregateInput
    _sum?: PlanejamentoLocalVotacaoSumOrderByAggregateInput
  }

  export type PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput = {
    AND?: PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput | PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput[]
    OR?: PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput[]
    NOT?: PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput | PlanejamentoLocalVotacaoScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"PlanejamentoLocalVotacao"> | string
    localVotacaoUuid?: IntWithAggregatesFilter<"PlanejamentoLocalVotacao"> | number
    candidatoUuid?: StringWithAggregatesFilter<"PlanejamentoLocalVotacao"> | string
  }

  export type ExpectativaWhereInput = {
    AND?: ExpectativaWhereInput | ExpectativaWhereInput[]
    OR?: ExpectativaWhereInput[]
    NOT?: ExpectativaWhereInput | ExpectativaWhereInput[]
    localdevotacao_has_CandidatoUuid?: StringFilter<"Expectativa"> | string
    expectativa?: FloatFilter<"Expectativa"> | number
    localvotacao?: XOR<PlanejamentoLocalVotacaoRelationFilter, PlanejamentoLocalVotacaoWhereInput>
  }

  export type ExpectativaOrderByWithRelationInput = {
    localdevotacao_has_CandidatoUuid?: SortOrder
    expectativa?: SortOrder
    localvotacao?: PlanejamentoLocalVotacaoOrderByWithRelationInput
  }

  export type ExpectativaWhereUniqueInput = Prisma.AtLeast<{
    localdevotacao_has_CandidatoUuid?: string
    AND?: ExpectativaWhereInput | ExpectativaWhereInput[]
    OR?: ExpectativaWhereInput[]
    NOT?: ExpectativaWhereInput | ExpectativaWhereInput[]
    expectativa?: FloatFilter<"Expectativa"> | number
    localvotacao?: XOR<PlanejamentoLocalVotacaoRelationFilter, PlanejamentoLocalVotacaoWhereInput>
  }, "localdevotacao_has_CandidatoUuid">

  export type ExpectativaOrderByWithAggregationInput = {
    localdevotacao_has_CandidatoUuid?: SortOrder
    expectativa?: SortOrder
    _count?: ExpectativaCountOrderByAggregateInput
    _avg?: ExpectativaAvgOrderByAggregateInput
    _max?: ExpectativaMaxOrderByAggregateInput
    _min?: ExpectativaMinOrderByAggregateInput
    _sum?: ExpectativaSumOrderByAggregateInput
  }

  export type ExpectativaScalarWhereWithAggregatesInput = {
    AND?: ExpectativaScalarWhereWithAggregatesInput | ExpectativaScalarWhereWithAggregatesInput[]
    OR?: ExpectativaScalarWhereWithAggregatesInput[]
    NOT?: ExpectativaScalarWhereWithAggregatesInput | ExpectativaScalarWhereWithAggregatesInput[]
    localdevotacao_has_CandidatoUuid?: StringWithAggregatesFilter<"Expectativa"> | string
    expectativa?: FloatWithAggregatesFilter<"Expectativa"> | number
  }

  export type LocalVotacaoWhereInput = {
    AND?: LocalVotacaoWhereInput | LocalVotacaoWhereInput[]
    OR?: LocalVotacaoWhereInput[]
    NOT?: LocalVotacaoWhereInput | LocalVotacaoWhereInput[]
    uuid?: IntFilter<"LocalVotacao"> | number
    localdevotacao?: StringFilter<"LocalVotacao"> | string
    updatedAt?: DateTimeFilter<"LocalVotacao"> | Date | string
    createdaAt?: DateTimeFilter<"LocalVotacao"> | Date | string
    totalEleitores?: IntFilter<"LocalVotacao"> | number
    endereco?: EnderecoLocalVotacaoListRelationFilter
    sessoesEleitorais?: SessoesEleitoraisListRelationFilter
    Eleitor?: EleitorListRelationFilter
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoListRelationFilter
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoListRelationFilter
  }

  export type LocalVotacaoOrderByWithRelationInput = {
    uuid?: SortOrder
    localdevotacao?: SortOrder
    updatedAt?: SortOrder
    createdaAt?: SortOrder
    totalEleitores?: SortOrder
    endereco?: EnderecoLocalVotacaoOrderByRelationAggregateInput
    sessoesEleitorais?: SessoesEleitoraisOrderByRelationAggregateInput
    Eleitor?: EleitorOrderByRelationAggregateInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoOrderByRelationAggregateInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoOrderByRelationAggregateInput
  }

  export type LocalVotacaoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: number
    AND?: LocalVotacaoWhereInput | LocalVotacaoWhereInput[]
    OR?: LocalVotacaoWhereInput[]
    NOT?: LocalVotacaoWhereInput | LocalVotacaoWhereInput[]
    localdevotacao?: StringFilter<"LocalVotacao"> | string
    updatedAt?: DateTimeFilter<"LocalVotacao"> | Date | string
    createdaAt?: DateTimeFilter<"LocalVotacao"> | Date | string
    totalEleitores?: IntFilter<"LocalVotacao"> | number
    endereco?: EnderecoLocalVotacaoListRelationFilter
    sessoesEleitorais?: SessoesEleitoraisListRelationFilter
    Eleitor?: EleitorListRelationFilter
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoListRelationFilter
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoListRelationFilter
  }, "uuid">

  export type LocalVotacaoOrderByWithAggregationInput = {
    uuid?: SortOrder
    localdevotacao?: SortOrder
    updatedAt?: SortOrder
    createdaAt?: SortOrder
    totalEleitores?: SortOrder
    _count?: LocalVotacaoCountOrderByAggregateInput
    _avg?: LocalVotacaoAvgOrderByAggregateInput
    _max?: LocalVotacaoMaxOrderByAggregateInput
    _min?: LocalVotacaoMinOrderByAggregateInput
    _sum?: LocalVotacaoSumOrderByAggregateInput
  }

  export type LocalVotacaoScalarWhereWithAggregatesInput = {
    AND?: LocalVotacaoScalarWhereWithAggregatesInput | LocalVotacaoScalarWhereWithAggregatesInput[]
    OR?: LocalVotacaoScalarWhereWithAggregatesInput[]
    NOT?: LocalVotacaoScalarWhereWithAggregatesInput | LocalVotacaoScalarWhereWithAggregatesInput[]
    uuid?: IntWithAggregatesFilter<"LocalVotacao"> | number
    localdevotacao?: StringWithAggregatesFilter<"LocalVotacao"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"LocalVotacao"> | Date | string
    createdaAt?: DateTimeWithAggregatesFilter<"LocalVotacao"> | Date | string
    totalEleitores?: IntWithAggregatesFilter<"LocalVotacao"> | number
  }

  export type EleicoesWhereInput = {
    AND?: EleicoesWhereInput | EleicoesWhereInput[]
    OR?: EleicoesWhereInput[]
    NOT?: EleicoesWhereInput | EleicoesWhereInput[]
    uuid?: StringFilter<"Eleicoes"> | string
    ano?: IntFilter<"Eleicoes"> | number
    descricao?: StringFilter<"Eleicoes"> | string
    CandidatosEleicao?: CandidatosEleicaoListRelationFilter
  }

  export type EleicoesOrderByWithRelationInput = {
    uuid?: SortOrder
    ano?: SortOrder
    descricao?: SortOrder
    CandidatosEleicao?: CandidatosEleicaoOrderByRelationAggregateInput
  }

  export type EleicoesWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: EleicoesWhereInput | EleicoesWhereInput[]
    OR?: EleicoesWhereInput[]
    NOT?: EleicoesWhereInput | EleicoesWhereInput[]
    ano?: IntFilter<"Eleicoes"> | number
    descricao?: StringFilter<"Eleicoes"> | string
    CandidatosEleicao?: CandidatosEleicaoListRelationFilter
  }, "uuid">

  export type EleicoesOrderByWithAggregationInput = {
    uuid?: SortOrder
    ano?: SortOrder
    descricao?: SortOrder
    _count?: EleicoesCountOrderByAggregateInput
    _avg?: EleicoesAvgOrderByAggregateInput
    _max?: EleicoesMaxOrderByAggregateInput
    _min?: EleicoesMinOrderByAggregateInput
    _sum?: EleicoesSumOrderByAggregateInput
  }

  export type EleicoesScalarWhereWithAggregatesInput = {
    AND?: EleicoesScalarWhereWithAggregatesInput | EleicoesScalarWhereWithAggregatesInput[]
    OR?: EleicoesScalarWhereWithAggregatesInput[]
    NOT?: EleicoesScalarWhereWithAggregatesInput | EleicoesScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Eleicoes"> | string
    ano?: IntWithAggregatesFilter<"Eleicoes"> | number
    descricao?: StringWithAggregatesFilter<"Eleicoes"> | string
  }

  export type UFWhereInput = {
    AND?: UFWhereInput | UFWhereInput[]
    OR?: UFWhereInput[]
    NOT?: UFWhereInput | UFWhereInput[]
    id?: IntFilter<"UF"> | number
    descricao?: StringFilter<"UF"> | string
    municipio?: MunicipioListRelationFilter
  }

  export type UFOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    municipio?: MunicipioOrderByRelationAggregateInput
  }

  export type UFWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UFWhereInput | UFWhereInput[]
    OR?: UFWhereInput[]
    NOT?: UFWhereInput | UFWhereInput[]
    descricao?: StringFilter<"UF"> | string
    municipio?: MunicipioListRelationFilter
  }, "id">

  export type UFOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    _count?: UFCountOrderByAggregateInput
    _avg?: UFAvgOrderByAggregateInput
    _max?: UFMaxOrderByAggregateInput
    _min?: UFMinOrderByAggregateInput
    _sum?: UFSumOrderByAggregateInput
  }

  export type UFScalarWhereWithAggregatesInput = {
    AND?: UFScalarWhereWithAggregatesInput | UFScalarWhereWithAggregatesInput[]
    OR?: UFScalarWhereWithAggregatesInput[]
    NOT?: UFScalarWhereWithAggregatesInput | UFScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UF"> | number
    descricao?: StringWithAggregatesFilter<"UF"> | string
  }

  export type MunicipioWhereInput = {
    AND?: MunicipioWhereInput | MunicipioWhereInput[]
    OR?: MunicipioWhereInput[]
    NOT?: MunicipioWhereInput | MunicipioWhereInput[]
    id?: IntFilter<"Municipio"> | number
    uFId?: IntFilter<"Municipio"> | number
    descricao?: StringFilter<"Municipio"> | string
    uf?: XOR<UFRelationFilter, UFWhereInput>
    CandidatosEleicao?: CandidatosEleicaoListRelationFilter
  }

  export type MunicipioOrderByWithRelationInput = {
    id?: SortOrder
    uFId?: SortOrder
    descricao?: SortOrder
    uf?: UFOrderByWithRelationInput
    CandidatosEleicao?: CandidatosEleicaoOrderByRelationAggregateInput
  }

  export type MunicipioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MunicipioWhereInput | MunicipioWhereInput[]
    OR?: MunicipioWhereInput[]
    NOT?: MunicipioWhereInput | MunicipioWhereInput[]
    uFId?: IntFilter<"Municipio"> | number
    descricao?: StringFilter<"Municipio"> | string
    uf?: XOR<UFRelationFilter, UFWhereInput>
    CandidatosEleicao?: CandidatosEleicaoListRelationFilter
  }, "id">

  export type MunicipioOrderByWithAggregationInput = {
    id?: SortOrder
    uFId?: SortOrder
    descricao?: SortOrder
    _count?: MunicipioCountOrderByAggregateInput
    _avg?: MunicipioAvgOrderByAggregateInput
    _max?: MunicipioMaxOrderByAggregateInput
    _min?: MunicipioMinOrderByAggregateInput
    _sum?: MunicipioSumOrderByAggregateInput
  }

  export type MunicipioScalarWhereWithAggregatesInput = {
    AND?: MunicipioScalarWhereWithAggregatesInput | MunicipioScalarWhereWithAggregatesInput[]
    OR?: MunicipioScalarWhereWithAggregatesInput[]
    NOT?: MunicipioScalarWhereWithAggregatesInput | MunicipioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Municipio"> | number
    uFId?: IntWithAggregatesFilter<"Municipio"> | number
    descricao?: StringWithAggregatesFilter<"Municipio"> | string
  }

  export type CandidatosEleicaoWhereInput = {
    AND?: CandidatosEleicaoWhereInput | CandidatosEleicaoWhereInput[]
    OR?: CandidatosEleicaoWhereInput[]
    NOT?: CandidatosEleicaoWhereInput | CandidatosEleicaoWhereInput[]
    sequencial?: BigIntFilter<"CandidatosEleicao"> | bigint | number
    nomecandidato?: StringFilter<"CandidatosEleicao"> | string
    cargoCandidato?: StringFilter<"CandidatosEleicao"> | string
    municipioId?: IntFilter<"CandidatosEleicao"> | number
    numero_urna?: IntFilter<"CandidatosEleicao"> | number
    eleicoesUuid?: StringFilter<"CandidatosEleicao"> | string
    eleicao?: XOR<EleicoesRelationFilter, EleicoesWhereInput>
    municipio?: XOR<MunicipioRelationFilter, MunicipioWhereInput>
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoListRelationFilter
  }

  export type CandidatosEleicaoOrderByWithRelationInput = {
    sequencial?: SortOrder
    nomecandidato?: SortOrder
    cargoCandidato?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
    eleicoesUuid?: SortOrder
    eleicao?: EleicoesOrderByWithRelationInput
    municipio?: MunicipioOrderByWithRelationInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoOrderByRelationAggregateInput
  }

  export type CandidatosEleicaoWhereUniqueInput = Prisma.AtLeast<{
    sequencial?: bigint | number
    AND?: CandidatosEleicaoWhereInput | CandidatosEleicaoWhereInput[]
    OR?: CandidatosEleicaoWhereInput[]
    NOT?: CandidatosEleicaoWhereInput | CandidatosEleicaoWhereInput[]
    nomecandidato?: StringFilter<"CandidatosEleicao"> | string
    cargoCandidato?: StringFilter<"CandidatosEleicao"> | string
    municipioId?: IntFilter<"CandidatosEleicao"> | number
    numero_urna?: IntFilter<"CandidatosEleicao"> | number
    eleicoesUuid?: StringFilter<"CandidatosEleicao"> | string
    eleicao?: XOR<EleicoesRelationFilter, EleicoesWhereInput>
    municipio?: XOR<MunicipioRelationFilter, MunicipioWhereInput>
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoListRelationFilter
  }, "sequencial">

  export type CandidatosEleicaoOrderByWithAggregationInput = {
    sequencial?: SortOrder
    nomecandidato?: SortOrder
    cargoCandidato?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
    eleicoesUuid?: SortOrder
    _count?: CandidatosEleicaoCountOrderByAggregateInput
    _avg?: CandidatosEleicaoAvgOrderByAggregateInput
    _max?: CandidatosEleicaoMaxOrderByAggregateInput
    _min?: CandidatosEleicaoMinOrderByAggregateInput
    _sum?: CandidatosEleicaoSumOrderByAggregateInput
  }

  export type CandidatosEleicaoScalarWhereWithAggregatesInput = {
    AND?: CandidatosEleicaoScalarWhereWithAggregatesInput | CandidatosEleicaoScalarWhereWithAggregatesInput[]
    OR?: CandidatosEleicaoScalarWhereWithAggregatesInput[]
    NOT?: CandidatosEleicaoScalarWhereWithAggregatesInput | CandidatosEleicaoScalarWhereWithAggregatesInput[]
    sequencial?: BigIntWithAggregatesFilter<"CandidatosEleicao"> | bigint | number
    nomecandidato?: StringWithAggregatesFilter<"CandidatosEleicao"> | string
    cargoCandidato?: StringWithAggregatesFilter<"CandidatosEleicao"> | string
    municipioId?: IntWithAggregatesFilter<"CandidatosEleicao"> | number
    numero_urna?: IntWithAggregatesFilter<"CandidatosEleicao"> | number
    eleicoesUuid?: StringWithAggregatesFilter<"CandidatosEleicao"> | string
  }

  export type LocalVotacao_has_candidatoEleicaoWhereInput = {
    AND?: LocalVotacao_has_candidatoEleicaoWhereInput | LocalVotacao_has_candidatoEleicaoWhereInput[]
    OR?: LocalVotacao_has_candidatoEleicaoWhereInput[]
    NOT?: LocalVotacao_has_candidatoEleicaoWhereInput | LocalVotacao_has_candidatoEleicaoWhereInput[]
    uuid?: StringFilter<"LocalVotacao_has_candidatoEleicao"> | string
    localVotacaoUuid?: IntFilter<"LocalVotacao_has_candidatoEleicao"> | number
    candidatosEleicaoSequencial?: BigIntFilter<"LocalVotacao_has_candidatoEleicao"> | bigint | number
    localvontacao?: XOR<LocalVotacaoRelationFilter, LocalVotacaoWhereInput>
    candidatoEleicao?: XOR<CandidatosEleicaoRelationFilter, CandidatosEleicaoWhereInput>
    quantidade_votos_eleicao?: Quantidade_votos_eleicaoListRelationFilter
  }

  export type LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
    localvontacao?: LocalVotacaoOrderByWithRelationInput
    candidatoEleicao?: CandidatosEleicaoOrderByWithRelationInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoOrderByRelationAggregateInput
  }

  export type LocalVotacao_has_candidatoEleicaoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: LocalVotacao_has_candidatoEleicaoWhereInput | LocalVotacao_has_candidatoEleicaoWhereInput[]
    OR?: LocalVotacao_has_candidatoEleicaoWhereInput[]
    NOT?: LocalVotacao_has_candidatoEleicaoWhereInput | LocalVotacao_has_candidatoEleicaoWhereInput[]
    localVotacaoUuid?: IntFilter<"LocalVotacao_has_candidatoEleicao"> | number
    candidatosEleicaoSequencial?: BigIntFilter<"LocalVotacao_has_candidatoEleicao"> | bigint | number
    localvontacao?: XOR<LocalVotacaoRelationFilter, LocalVotacaoWhereInput>
    candidatoEleicao?: XOR<CandidatosEleicaoRelationFilter, CandidatosEleicaoWhereInput>
    quantidade_votos_eleicao?: Quantidade_votos_eleicaoListRelationFilter
  }, "uuid">

  export type LocalVotacao_has_candidatoEleicaoOrderByWithAggregationInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
    _count?: LocalVotacao_has_candidatoEleicaoCountOrderByAggregateInput
    _avg?: LocalVotacao_has_candidatoEleicaoAvgOrderByAggregateInput
    _max?: LocalVotacao_has_candidatoEleicaoMaxOrderByAggregateInput
    _min?: LocalVotacao_has_candidatoEleicaoMinOrderByAggregateInput
    _sum?: LocalVotacao_has_candidatoEleicaoSumOrderByAggregateInput
  }

  export type LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput = {
    AND?: LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput | LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput[]
    OR?: LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput[]
    NOT?: LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput | LocalVotacao_has_candidatoEleicaoScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"LocalVotacao_has_candidatoEleicao"> | string
    localVotacaoUuid?: IntWithAggregatesFilter<"LocalVotacao_has_candidatoEleicao"> | number
    candidatosEleicaoSequencial?: BigIntWithAggregatesFilter<"LocalVotacao_has_candidatoEleicao"> | bigint | number
  }

  export type quantidade_votos_eleicaoWhereInput = {
    AND?: quantidade_votos_eleicaoWhereInput | quantidade_votos_eleicaoWhereInput[]
    OR?: quantidade_votos_eleicaoWhereInput[]
    NOT?: quantidade_votos_eleicaoWhereInput | quantidade_votos_eleicaoWhereInput[]
    uuidLocal?: StringFilter<"quantidade_votos_eleicao"> | string
    votos?: IntFilter<"quantidade_votos_eleicao"> | number
    localvotacao?: XOR<LocalVotacao_has_candidatoEleicaoRelationFilter, LocalVotacao_has_candidatoEleicaoWhereInput>
  }

  export type quantidade_votos_eleicaoOrderByWithRelationInput = {
    uuidLocal?: SortOrder
    votos?: SortOrder
    localvotacao?: LocalVotacao_has_candidatoEleicaoOrderByWithRelationInput
  }

  export type quantidade_votos_eleicaoWhereUniqueInput = Prisma.AtLeast<{
    uuidLocal?: string
    AND?: quantidade_votos_eleicaoWhereInput | quantidade_votos_eleicaoWhereInput[]
    OR?: quantidade_votos_eleicaoWhereInput[]
    NOT?: quantidade_votos_eleicaoWhereInput | quantidade_votos_eleicaoWhereInput[]
    votos?: IntFilter<"quantidade_votos_eleicao"> | number
    localvotacao?: XOR<LocalVotacao_has_candidatoEleicaoRelationFilter, LocalVotacao_has_candidatoEleicaoWhereInput>
  }, "uuidLocal">

  export type quantidade_votos_eleicaoOrderByWithAggregationInput = {
    uuidLocal?: SortOrder
    votos?: SortOrder
    _count?: quantidade_votos_eleicaoCountOrderByAggregateInput
    _avg?: quantidade_votos_eleicaoAvgOrderByAggregateInput
    _max?: quantidade_votos_eleicaoMaxOrderByAggregateInput
    _min?: quantidade_votos_eleicaoMinOrderByAggregateInput
    _sum?: quantidade_votos_eleicaoSumOrderByAggregateInput
  }

  export type quantidade_votos_eleicaoScalarWhereWithAggregatesInput = {
    AND?: quantidade_votos_eleicaoScalarWhereWithAggregatesInput | quantidade_votos_eleicaoScalarWhereWithAggregatesInput[]
    OR?: quantidade_votos_eleicaoScalarWhereWithAggregatesInput[]
    NOT?: quantidade_votos_eleicaoScalarWhereWithAggregatesInput | quantidade_votos_eleicaoScalarWhereWithAggregatesInput[]
    uuidLocal?: StringWithAggregatesFilter<"quantidade_votos_eleicao"> | string
    votos?: IntWithAggregatesFilter<"quantidade_votos_eleicao"> | number
  }

  export type SessoesEleitoraisWhereInput = {
    AND?: SessoesEleitoraisWhereInput | SessoesEleitoraisWhereInput[]
    OR?: SessoesEleitoraisWhereInput[]
    NOT?: SessoesEleitoraisWhereInput | SessoesEleitoraisWhereInput[]
    uuid?: StringFilter<"SessoesEleitorais"> | string
    sessao?: StringFilter<"SessoesEleitorais"> | string
    zona?: StringFilter<"SessoesEleitorais"> | string
    nVotantes?: IntFilter<"SessoesEleitorais"> | number
    localVotacaoUuid?: IntNullableFilter<"SessoesEleitorais"> | number | null
    createdAt?: DateTimeFilter<"SessoesEleitorais"> | Date | string
    updatedAt?: DateTimeFilter<"SessoesEleitorais"> | Date | string
    LocalVotacao?: XOR<LocalVotacaoNullableRelationFilter, LocalVotacaoWhereInput> | null
  }

  export type SessoesEleitoraisOrderByWithRelationInput = {
    uuid?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    LocalVotacao?: LocalVotacaoOrderByWithRelationInput
  }

  export type SessoesEleitoraisWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: SessoesEleitoraisWhereInput | SessoesEleitoraisWhereInput[]
    OR?: SessoesEleitoraisWhereInput[]
    NOT?: SessoesEleitoraisWhereInput | SessoesEleitoraisWhereInput[]
    sessao?: StringFilter<"SessoesEleitorais"> | string
    zona?: StringFilter<"SessoesEleitorais"> | string
    nVotantes?: IntFilter<"SessoesEleitorais"> | number
    localVotacaoUuid?: IntNullableFilter<"SessoesEleitorais"> | number | null
    createdAt?: DateTimeFilter<"SessoesEleitorais"> | Date | string
    updatedAt?: DateTimeFilter<"SessoesEleitorais"> | Date | string
    LocalVotacao?: XOR<LocalVotacaoNullableRelationFilter, LocalVotacaoWhereInput> | null
  }, "uuid">

  export type SessoesEleitoraisOrderByWithAggregationInput = {
    uuid?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SessoesEleitoraisCountOrderByAggregateInput
    _avg?: SessoesEleitoraisAvgOrderByAggregateInput
    _max?: SessoesEleitoraisMaxOrderByAggregateInput
    _min?: SessoesEleitoraisMinOrderByAggregateInput
    _sum?: SessoesEleitoraisSumOrderByAggregateInput
  }

  export type SessoesEleitoraisScalarWhereWithAggregatesInput = {
    AND?: SessoesEleitoraisScalarWhereWithAggregatesInput | SessoesEleitoraisScalarWhereWithAggregatesInput[]
    OR?: SessoesEleitoraisScalarWhereWithAggregatesInput[]
    NOT?: SessoesEleitoraisScalarWhereWithAggregatesInput | SessoesEleitoraisScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"SessoesEleitorais"> | string
    sessao?: StringWithAggregatesFilter<"SessoesEleitorais"> | string
    zona?: StringWithAggregatesFilter<"SessoesEleitorais"> | string
    nVotantes?: IntWithAggregatesFilter<"SessoesEleitorais"> | number
    localVotacaoUuid?: IntNullableWithAggregatesFilter<"SessoesEleitorais"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"SessoesEleitorais"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SessoesEleitorais"> | Date | string
  }

  export type EnderecoLocalVotacaoWhereInput = {
    AND?: EnderecoLocalVotacaoWhereInput | EnderecoLocalVotacaoWhereInput[]
    OR?: EnderecoLocalVotacaoWhereInput[]
    NOT?: EnderecoLocalVotacaoWhereInput | EnderecoLocalVotacaoWhereInput[]
    uuid?: StringFilter<"EnderecoLocalVotacao"> | string
    endereco?: StringFilter<"EnderecoLocalVotacao"> | string
    bairro?: StringFilter<"EnderecoLocalVotacao"> | string
    cidade?: StringFilter<"EnderecoLocalVotacao"> | string
    uf?: StringFilter<"EnderecoLocalVotacao"> | string
    cep?: IntFilter<"EnderecoLocalVotacao"> | number
    latitude?: FloatFilter<"EnderecoLocalVotacao"> | number
    longitude?: FloatFilter<"EnderecoLocalVotacao"> | number
    localVotacaoUuid?: IntNullableFilter<"EnderecoLocalVotacao"> | number | null
    LocalVotacao?: XOR<LocalVotacaoNullableRelationFilter, LocalVotacaoWhereInput> | null
  }

  export type EnderecoLocalVotacaoOrderByWithRelationInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrderInput | SortOrder
    LocalVotacao?: LocalVotacaoOrderByWithRelationInput
  }

  export type EnderecoLocalVotacaoWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: EnderecoLocalVotacaoWhereInput | EnderecoLocalVotacaoWhereInput[]
    OR?: EnderecoLocalVotacaoWhereInput[]
    NOT?: EnderecoLocalVotacaoWhereInput | EnderecoLocalVotacaoWhereInput[]
    endereco?: StringFilter<"EnderecoLocalVotacao"> | string
    bairro?: StringFilter<"EnderecoLocalVotacao"> | string
    cidade?: StringFilter<"EnderecoLocalVotacao"> | string
    uf?: StringFilter<"EnderecoLocalVotacao"> | string
    cep?: IntFilter<"EnderecoLocalVotacao"> | number
    latitude?: FloatFilter<"EnderecoLocalVotacao"> | number
    longitude?: FloatFilter<"EnderecoLocalVotacao"> | number
    localVotacaoUuid?: IntNullableFilter<"EnderecoLocalVotacao"> | number | null
    LocalVotacao?: XOR<LocalVotacaoNullableRelationFilter, LocalVotacaoWhereInput> | null
  }, "uuid">

  export type EnderecoLocalVotacaoOrderByWithAggregationInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrderInput | SortOrder
    _count?: EnderecoLocalVotacaoCountOrderByAggregateInput
    _avg?: EnderecoLocalVotacaoAvgOrderByAggregateInput
    _max?: EnderecoLocalVotacaoMaxOrderByAggregateInput
    _min?: EnderecoLocalVotacaoMinOrderByAggregateInput
    _sum?: EnderecoLocalVotacaoSumOrderByAggregateInput
  }

  export type EnderecoLocalVotacaoScalarWhereWithAggregatesInput = {
    AND?: EnderecoLocalVotacaoScalarWhereWithAggregatesInput | EnderecoLocalVotacaoScalarWhereWithAggregatesInput[]
    OR?: EnderecoLocalVotacaoScalarWhereWithAggregatesInput[]
    NOT?: EnderecoLocalVotacaoScalarWhereWithAggregatesInput | EnderecoLocalVotacaoScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"EnderecoLocalVotacao"> | string
    endereco?: StringWithAggregatesFilter<"EnderecoLocalVotacao"> | string
    bairro?: StringWithAggregatesFilter<"EnderecoLocalVotacao"> | string
    cidade?: StringWithAggregatesFilter<"EnderecoLocalVotacao"> | string
    uf?: StringWithAggregatesFilter<"EnderecoLocalVotacao"> | string
    cep?: IntWithAggregatesFilter<"EnderecoLocalVotacao"> | number
    latitude?: FloatWithAggregatesFilter<"EnderecoLocalVotacao"> | number
    longitude?: FloatWithAggregatesFilter<"EnderecoLocalVotacao"> | number
    localVotacaoUuid?: IntNullableWithAggregatesFilter<"EnderecoLocalVotacao"> | number | null
  }

  export type perfilUsoWhereInput = {
    AND?: perfilUsoWhereInput | perfilUsoWhereInput[]
    OR?: perfilUsoWhereInput[]
    NOT?: perfilUsoWhereInput | perfilUsoWhereInput[]
    id?: IntFilter<"perfilUso"> | number
    descricao?: StringFilter<"perfilUso"> | string
    Usuario?: UsuarioListRelationFilter
  }

  export type perfilUsoOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    Usuario?: UsuarioOrderByRelationAggregateInput
  }

  export type perfilUsoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: perfilUsoWhereInput | perfilUsoWhereInput[]
    OR?: perfilUsoWhereInput[]
    NOT?: perfilUsoWhereInput | perfilUsoWhereInput[]
    descricao?: StringFilter<"perfilUso"> | string
    Usuario?: UsuarioListRelationFilter
  }, "id">

  export type perfilUsoOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    _count?: perfilUsoCountOrderByAggregateInput
    _avg?: perfilUsoAvgOrderByAggregateInput
    _max?: perfilUsoMaxOrderByAggregateInput
    _min?: perfilUsoMinOrderByAggregateInput
    _sum?: perfilUsoSumOrderByAggregateInput
  }

  export type perfilUsoScalarWhereWithAggregatesInput = {
    AND?: perfilUsoScalarWhereWithAggregatesInput | perfilUsoScalarWhereWithAggregatesInput[]
    OR?: perfilUsoScalarWhereWithAggregatesInput[]
    NOT?: perfilUsoScalarWhereWithAggregatesInput | perfilUsoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"perfilUso"> | number
    descricao?: StringWithAggregatesFilter<"perfilUso"> | string
  }

  export type classificacaoWhereInput = {
    AND?: classificacaoWhereInput | classificacaoWhereInput[]
    OR?: classificacaoWhereInput[]
    NOT?: classificacaoWhereInput | classificacaoWhereInput[]
    id?: IntFilter<"classificacao"> | number
    descricao?: StringFilter<"classificacao"> | string
    hexColor?: StringFilter<"classificacao"> | string
    eleitoruuid?: StringFilter<"classificacao"> | string
    eleitor?: EleitorListRelationFilter
  }

  export type classificacaoOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    hexColor?: SortOrder
    eleitoruuid?: SortOrder
    eleitor?: EleitorOrderByRelationAggregateInput
  }

  export type classificacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: classificacaoWhereInput | classificacaoWhereInput[]
    OR?: classificacaoWhereInput[]
    NOT?: classificacaoWhereInput | classificacaoWhereInput[]
    descricao?: StringFilter<"classificacao"> | string
    hexColor?: StringFilter<"classificacao"> | string
    eleitoruuid?: StringFilter<"classificacao"> | string
    eleitor?: EleitorListRelationFilter
  }, "id">

  export type classificacaoOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    hexColor?: SortOrder
    eleitoruuid?: SortOrder
    _count?: classificacaoCountOrderByAggregateInput
    _avg?: classificacaoAvgOrderByAggregateInput
    _max?: classificacaoMaxOrderByAggregateInput
    _min?: classificacaoMinOrderByAggregateInput
    _sum?: classificacaoSumOrderByAggregateInput
  }

  export type classificacaoScalarWhereWithAggregatesInput = {
    AND?: classificacaoScalarWhereWithAggregatesInput | classificacaoScalarWhereWithAggregatesInput[]
    OR?: classificacaoScalarWhereWithAggregatesInput[]
    NOT?: classificacaoScalarWhereWithAggregatesInput | classificacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"classificacao"> | number
    descricao?: StringWithAggregatesFilter<"classificacao"> | string
    hexColor?: StringWithAggregatesFilter<"classificacao"> | string
    eleitoruuid?: StringWithAggregatesFilter<"classificacao"> | string
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    uuid?: StringFilter<"Usuario"> | string
    nomeCompleto?: StringFilter<"Usuario"> | string
    apelido?: StringNullableFilter<"Usuario"> | string | null
    isAtivo?: BoolFilter<"Usuario"> | boolean
    uuidCandidato?: StringFilter<"Usuario"> | string
    created_at?: DateTimeFilter<"Usuario"> | Date | string
    updated_at?: DateTimeFilter<"Usuario"> | Date | string
    perfil?: IntFilter<"Usuario"> | number
    dadosContatoUsuarioUuid?: StringNullableFilter<"Usuario"> | string | null
    enderecoUsuarioUuid?: StringNullableFilter<"Usuario"> | string | null
    Perfil?: XOR<PerfilUsoRelationFilter, perfilUsoWhereInput>
    candidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
    login?: LoginListRelationFilter
    contato?: XOR<DadosContatoUsuarioNullableRelationFilter, DadosContatoUsuarioWhereInput> | null
    EnderecoUsuario?: XOR<EnderecoUsuarioNullableRelationFilter, EnderecoUsuarioWhereInput> | null
    Eleitor?: EleitorListRelationFilter
    coligacao?: ColigacaoListRelationFilter
    atendimentoCriado?: AtendimentoListRelationFilter
    atendimento?: AtendimentoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    apelido?: SortOrderInput | SortOrder
    isAtivo?: SortOrder
    uuidCandidato?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    perfil?: SortOrder
    dadosContatoUsuarioUuid?: SortOrderInput | SortOrder
    enderecoUsuarioUuid?: SortOrderInput | SortOrder
    Perfil?: perfilUsoOrderByWithRelationInput
    candidato?: CandidatoOrderByWithRelationInput
    login?: loginOrderByRelationAggregateInput
    contato?: DadosContatoUsuarioOrderByWithRelationInput
    EnderecoUsuario?: EnderecoUsuarioOrderByWithRelationInput
    Eleitor?: EleitorOrderByRelationAggregateInput
    coligacao?: coligacaoOrderByRelationAggregateInput
    atendimentoCriado?: atendimentoOrderByRelationAggregateInput
    atendimento?: atendimentoOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nomeCompleto?: StringFilter<"Usuario"> | string
    apelido?: StringNullableFilter<"Usuario"> | string | null
    isAtivo?: BoolFilter<"Usuario"> | boolean
    uuidCandidato?: StringFilter<"Usuario"> | string
    created_at?: DateTimeFilter<"Usuario"> | Date | string
    updated_at?: DateTimeFilter<"Usuario"> | Date | string
    perfil?: IntFilter<"Usuario"> | number
    dadosContatoUsuarioUuid?: StringNullableFilter<"Usuario"> | string | null
    enderecoUsuarioUuid?: StringNullableFilter<"Usuario"> | string | null
    Perfil?: XOR<PerfilUsoRelationFilter, perfilUsoWhereInput>
    candidato?: XOR<CandidatoRelationFilter, CandidatoWhereInput>
    login?: LoginListRelationFilter
    contato?: XOR<DadosContatoUsuarioNullableRelationFilter, DadosContatoUsuarioWhereInput> | null
    EnderecoUsuario?: XOR<EnderecoUsuarioNullableRelationFilter, EnderecoUsuarioWhereInput> | null
    Eleitor?: EleitorListRelationFilter
    coligacao?: ColigacaoListRelationFilter
    atendimentoCriado?: AtendimentoListRelationFilter
    atendimento?: AtendimentoListRelationFilter
  }, "uuid">

  export type UsuarioOrderByWithAggregationInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    apelido?: SortOrderInput | SortOrder
    isAtivo?: SortOrder
    uuidCandidato?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    perfil?: SortOrder
    dadosContatoUsuarioUuid?: SortOrderInput | SortOrder
    enderecoUsuarioUuid?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Usuario"> | string
    nomeCompleto?: StringWithAggregatesFilter<"Usuario"> | string
    apelido?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    isAtivo?: BoolWithAggregatesFilter<"Usuario"> | boolean
    uuidCandidato?: StringWithAggregatesFilter<"Usuario"> | string
    created_at?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    perfil?: IntWithAggregatesFilter<"Usuario"> | number
    dadosContatoUsuarioUuid?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    enderecoUsuarioUuid?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
  }

  export type DadosContatoUsuarioWhereInput = {
    AND?: DadosContatoUsuarioWhereInput | DadosContatoUsuarioWhereInput[]
    OR?: DadosContatoUsuarioWhereInput[]
    NOT?: DadosContatoUsuarioWhereInput | DadosContatoUsuarioWhereInput[]
    uuid?: StringFilter<"DadosContatoUsuario"> | string
    whathsapp?: StringFilter<"DadosContatoUsuario"> | string
    email?: StringFilter<"DadosContatoUsuario"> | string
    instagram?: StringFilter<"DadosContatoUsuario"> | string
    twitter?: StringFilter<"DadosContatoUsuario"> | string
    facebook?: StringFilter<"DadosContatoUsuario"> | string
    Usuario?: UsuarioListRelationFilter
  }

  export type DadosContatoUsuarioOrderByWithRelationInput = {
    uuid?: SortOrder
    whathsapp?: SortOrder
    email?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    facebook?: SortOrder
    Usuario?: UsuarioOrderByRelationAggregateInput
  }

  export type DadosContatoUsuarioWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: DadosContatoUsuarioWhereInput | DadosContatoUsuarioWhereInput[]
    OR?: DadosContatoUsuarioWhereInput[]
    NOT?: DadosContatoUsuarioWhereInput | DadosContatoUsuarioWhereInput[]
    whathsapp?: StringFilter<"DadosContatoUsuario"> | string
    email?: StringFilter<"DadosContatoUsuario"> | string
    instagram?: StringFilter<"DadosContatoUsuario"> | string
    twitter?: StringFilter<"DadosContatoUsuario"> | string
    facebook?: StringFilter<"DadosContatoUsuario"> | string
    Usuario?: UsuarioListRelationFilter
  }, "uuid">

  export type DadosContatoUsuarioOrderByWithAggregationInput = {
    uuid?: SortOrder
    whathsapp?: SortOrder
    email?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    facebook?: SortOrder
    _count?: DadosContatoUsuarioCountOrderByAggregateInput
    _max?: DadosContatoUsuarioMaxOrderByAggregateInput
    _min?: DadosContatoUsuarioMinOrderByAggregateInput
  }

  export type DadosContatoUsuarioScalarWhereWithAggregatesInput = {
    AND?: DadosContatoUsuarioScalarWhereWithAggregatesInput | DadosContatoUsuarioScalarWhereWithAggregatesInput[]
    OR?: DadosContatoUsuarioScalarWhereWithAggregatesInput[]
    NOT?: DadosContatoUsuarioScalarWhereWithAggregatesInput | DadosContatoUsuarioScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"DadosContatoUsuario"> | string
    whathsapp?: StringWithAggregatesFilter<"DadosContatoUsuario"> | string
    email?: StringWithAggregatesFilter<"DadosContatoUsuario"> | string
    instagram?: StringWithAggregatesFilter<"DadosContatoUsuario"> | string
    twitter?: StringWithAggregatesFilter<"DadosContatoUsuario"> | string
    facebook?: StringWithAggregatesFilter<"DadosContatoUsuario"> | string
  }

  export type EnderecoUsuarioWhereInput = {
    AND?: EnderecoUsuarioWhereInput | EnderecoUsuarioWhereInput[]
    OR?: EnderecoUsuarioWhereInput[]
    NOT?: EnderecoUsuarioWhereInput | EnderecoUsuarioWhereInput[]
    uuid?: StringFilter<"EnderecoUsuario"> | string
    endereco?: StringFilter<"EnderecoUsuario"> | string
    complemento?: StringFilter<"EnderecoUsuario"> | string
    bairro?: StringFilter<"EnderecoUsuario"> | string
    cidade?: StringFilter<"EnderecoUsuario"> | string
    estado?: StringFilter<"EnderecoUsuario"> | string
    cep?: StringFilter<"EnderecoUsuario"> | string
    Usuario?: UsuarioListRelationFilter
  }

  export type EnderecoUsuarioOrderByWithRelationInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
    Usuario?: UsuarioOrderByRelationAggregateInput
  }

  export type EnderecoUsuarioWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: EnderecoUsuarioWhereInput | EnderecoUsuarioWhereInput[]
    OR?: EnderecoUsuarioWhereInput[]
    NOT?: EnderecoUsuarioWhereInput | EnderecoUsuarioWhereInput[]
    endereco?: StringFilter<"EnderecoUsuario"> | string
    complemento?: StringFilter<"EnderecoUsuario"> | string
    bairro?: StringFilter<"EnderecoUsuario"> | string
    cidade?: StringFilter<"EnderecoUsuario"> | string
    estado?: StringFilter<"EnderecoUsuario"> | string
    cep?: StringFilter<"EnderecoUsuario"> | string
    Usuario?: UsuarioListRelationFilter
  }, "uuid">

  export type EnderecoUsuarioOrderByWithAggregationInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
    _count?: EnderecoUsuarioCountOrderByAggregateInput
    _max?: EnderecoUsuarioMaxOrderByAggregateInput
    _min?: EnderecoUsuarioMinOrderByAggregateInput
  }

  export type EnderecoUsuarioScalarWhereWithAggregatesInput = {
    AND?: EnderecoUsuarioScalarWhereWithAggregatesInput | EnderecoUsuarioScalarWhereWithAggregatesInput[]
    OR?: EnderecoUsuarioScalarWhereWithAggregatesInput[]
    NOT?: EnderecoUsuarioScalarWhereWithAggregatesInput | EnderecoUsuarioScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
    endereco?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
    complemento?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
    bairro?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
    cidade?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
    estado?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
    cep?: StringWithAggregatesFilter<"EnderecoUsuario"> | string
  }

  export type loginWhereInput = {
    AND?: loginWhereInput | loginWhereInput[]
    OR?: loginWhereInput[]
    NOT?: loginWhereInput | loginWhereInput[]
    Usuario_uuid?: StringFilter<"login"> | string
    autorizado?: BoolFilter<"login"> | boolean
    email?: StringFilter<"login"> | string
    senha?: StringFilter<"login"> | string
    created_at?: DateTimeFilter<"login"> | Date | string
    updated_at?: DateTimeFilter<"login"> | Date | string
    Usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type loginOrderByWithRelationInput = {
    Usuario_uuid?: SortOrder
    autorizado?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Usuario?: UsuarioOrderByWithRelationInput
  }

  export type loginWhereUniqueInput = Prisma.AtLeast<{
    Usuario_uuid?: string
    email?: string
    AND?: loginWhereInput | loginWhereInput[]
    OR?: loginWhereInput[]
    NOT?: loginWhereInput | loginWhereInput[]
    autorizado?: BoolFilter<"login"> | boolean
    senha?: StringFilter<"login"> | string
    created_at?: DateTimeFilter<"login"> | Date | string
    updated_at?: DateTimeFilter<"login"> | Date | string
    Usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "Usuario_uuid" | "email">

  export type loginOrderByWithAggregationInput = {
    Usuario_uuid?: SortOrder
    autorizado?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: loginCountOrderByAggregateInput
    _max?: loginMaxOrderByAggregateInput
    _min?: loginMinOrderByAggregateInput
  }

  export type loginScalarWhereWithAggregatesInput = {
    AND?: loginScalarWhereWithAggregatesInput | loginScalarWhereWithAggregatesInput[]
    OR?: loginScalarWhereWithAggregatesInput[]
    NOT?: loginScalarWhereWithAggregatesInput | loginScalarWhereWithAggregatesInput[]
    Usuario_uuid?: StringWithAggregatesFilter<"login"> | string
    autorizado?: BoolWithAggregatesFilter<"login"> | boolean
    email?: StringWithAggregatesFilter<"login"> | string
    senha?: StringWithAggregatesFilter<"login"> | string
    created_at?: DateTimeWithAggregatesFilter<"login"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"login"> | Date | string
  }

  export type blacklistWhereInput = {
    AND?: blacklistWhereInput | blacklistWhereInput[]
    OR?: blacklistWhereInput[]
    NOT?: blacklistWhereInput | blacklistWhereInput[]
    tokenexpirado?: StringFilter<"blacklist"> | string
    created_at?: DateTimeFilter<"blacklist"> | Date | string
    updated_at?: DateTimeFilter<"blacklist"> | Date | string
  }

  export type blacklistOrderByWithRelationInput = {
    tokenexpirado?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type blacklistWhereUniqueInput = Prisma.AtLeast<{
    tokenexpirado?: string
    AND?: blacklistWhereInput | blacklistWhereInput[]
    OR?: blacklistWhereInput[]
    NOT?: blacklistWhereInput | blacklistWhereInput[]
    created_at?: DateTimeFilter<"blacklist"> | Date | string
    updated_at?: DateTimeFilter<"blacklist"> | Date | string
  }, "tokenexpirado">

  export type blacklistOrderByWithAggregationInput = {
    tokenexpirado?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: blacklistCountOrderByAggregateInput
    _max?: blacklistMaxOrderByAggregateInput
    _min?: blacklistMinOrderByAggregateInput
  }

  export type blacklistScalarWhereWithAggregatesInput = {
    AND?: blacklistScalarWhereWithAggregatesInput | blacklistScalarWhereWithAggregatesInput[]
    OR?: blacklistScalarWhereWithAggregatesInput[]
    NOT?: blacklistScalarWhereWithAggregatesInput | blacklistScalarWhereWithAggregatesInput[]
    tokenexpirado?: StringWithAggregatesFilter<"blacklist"> | string
    created_at?: DateTimeWithAggregatesFilter<"blacklist"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"blacklist"> | Date | string
  }

  export type coligacaoCreateInput = {
    uuid?: string
    ano: number
    Usuario: UsuarioCreateNestedOneWithoutColigacaoInput
    Candidatos?: CandidatoCreateNestedManyWithoutColigacaoInput
    Eleitores?: EleitorCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoUncheckedCreateInput = {
    uuid?: string
    usuarioUuid: string
    ano: number
    Candidatos?: CandidatoUncheckedCreateNestedManyWithoutColigacaoInput
    Eleitores?: EleitorUncheckedCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Usuario?: UsuarioUpdateOneRequiredWithoutColigacaoNestedInput
    Candidatos?: CandidatoUpdateManyWithoutColigacaoNestedInput
    Eleitores?: EleitorUpdateManyWithoutColigacaoNestedInput
  }

  export type coligacaoUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Candidatos?: CandidatoUncheckedUpdateManyWithoutColigacaoNestedInput
    Eleitores?: EleitorUncheckedUpdateManyWithoutColigacaoNestedInput
  }

  export type coligacaoCreateManyInput = {
    uuid?: string
    usuarioUuid: string
    ano: number
  }

  export type coligacaoUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
  }

  export type coligacaoUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
  }

  export type CandidatoCreateInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    Usuario?: UsuarioCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorCreateNestedManyWithoutCandidatoInput
    coligacao?: coligacaoCreateNestedOneWithoutCandidatosInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoUncheckedCreateInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    coligacaoUuid?: string | null
    created_at?: Date | string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoUncheckedCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCandidatoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUpdateManyWithoutCandidatoNestedInput
    coligacao?: coligacaoUpdateOneWithoutCandidatosNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUncheckedUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCandidatoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoCreateManyInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    coligacaoUuid?: string | null
    created_at?: Date | string
  }

  export type CandidatoUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CandidatoUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContatoCandidatoCreateInput = {
    uuidContato?: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp?: string | null
    email: string
    Candidato: CandidatoCreateNestedOneWithoutContatoInput
  }

  export type ContatoCandidatoUncheckedCreateInput = {
    uuidContato?: string
    uuidEmpresa: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp?: string | null
    email: string
  }

  export type ContatoCandidatoUpdateInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    Candidato?: CandidatoUpdateOneRequiredWithoutContatoNestedInput
  }

  export type ContatoCandidatoUncheckedUpdateInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    uuidEmpresa?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ContatoCandidatoCreateManyInput = {
    uuidContato?: string
    uuidEmpresa: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp?: string | null
    email: string
  }

  export type ContatoCandidatoUpdateManyMutationInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ContatoCandidatoUncheckedUpdateManyInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    uuidEmpresa?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type tipoAtendimentoCreateInput = {
    descricao: string
    atendimento?: atendimentoCreateNestedManyWithoutAtendimentoInput
  }

  export type tipoAtendimentoUncheckedCreateInput = {
    id?: number
    descricao: string
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutAtendimentoInput
  }

  export type tipoAtendimentoUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    atendimento?: atendimentoUpdateManyWithoutAtendimentoNestedInput
  }

  export type tipoAtendimentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    atendimento?: atendimentoUncheckedUpdateManyWithoutAtendimentoNestedInput
  }

  export type tipoAtendimentoCreateManyInput = {
    id?: number
    descricao: string
  }

  export type tipoAtendimentoUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tipoAtendimentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type atendimentoCreateInput = {
    uuid?: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
    criado_por: UsuarioCreateNestedOneWithoutAtendimentoCriadoInput
    responsavel: UsuarioCreateNestedOneWithoutAtendimentoInput
    eleitor: EleitorCreateNestedOneWithoutAtendimentoInput
    atendimento?: tipoAtendimentoCreateNestedOneWithoutAtendimentoInput
  }

  export type atendimentoUncheckedCreateInput = {
    uuid?: string
    eleitorUuid: string
    usuarioUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type atendimentoUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_por?: UsuarioUpdateOneRequiredWithoutAtendimentoCriadoNestedInput
    responsavel?: UsuarioUpdateOneRequiredWithoutAtendimentoNestedInput
    eleitor?: EleitorUpdateOneRequiredWithoutAtendimentoNestedInput
    atendimento?: tipoAtendimentoUpdateOneWithoutAtendimentoNestedInput
  }

  export type atendimentoUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoCreateManyInput = {
    uuid?: string
    eleitorUuid: string
    usuarioUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type atendimentoUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EleitorCreateInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorCreateManyInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
  }

  export type EleitorUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EleitorUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contatoEleitorCreateInput = {
    uuid?: string
    email: string
    celular: string
    Eleitor: EleitorCreateNestedOneWithoutContatoEleitorInput
  }

  export type contatoEleitorUncheckedCreateInput = {
    uuid?: string
    email: string
    celular: string
    eleitorUuid: string
  }

  export type contatoEleitorUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
    Eleitor?: EleitorUpdateOneRequiredWithoutContatoEleitorNestedInput
  }

  export type contatoEleitorUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
  }

  export type contatoEleitorCreateManyInput = {
    uuid?: string
    email: string
    celular: string
    eleitorUuid: string
  }

  export type contatoEleitorUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
  }

  export type contatoEleitorUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
  }

  export type MidiasSociaisEleitorCreateInput = {
    uuid?: string
    instagram?: string | null
    facebook?: string | null
    twitter?: string | null
    tiktok?: string | null
    Eleitor: EleitorCreateNestedOneWithoutMidiasSociaisEleitorInput
  }

  export type MidiasSociaisEleitorUncheckedCreateInput = {
    uuid?: string
    instagram?: string | null
    facebook?: string | null
    twitter?: string | null
    tiktok?: string | null
    eleitorUuid: string
  }

  export type MidiasSociaisEleitorUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    Eleitor?: EleitorUpdateOneRequiredWithoutMidiasSociaisEleitorNestedInput
  }

  export type MidiasSociaisEleitorUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    eleitorUuid?: StringFieldUpdateOperationsInput | string
  }

  export type MidiasSociaisEleitorCreateManyInput = {
    uuid?: string
    instagram?: string | null
    facebook?: string | null
    twitter?: string | null
    tiktok?: string | null
    eleitorUuid: string
  }

  export type MidiasSociaisEleitorUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MidiasSociaisEleitorUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
    eleitorUuid?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoEleitorCreateInput = {
    uuid?: string
    latitude: number
    longitude: number
    endereco?: string | null
    nCasa?: string | null
    cep?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    codIbge?: string | null
    uf?: string | null
    pais?: string | null
    Eleitor?: EleitorCreateNestedOneWithoutEnderecoEleitorInput
  }

  export type EnderecoEleitorUncheckedCreateInput = {
    uuid?: string
    latitude: number
    longitude: number
    endereco?: string | null
    nCasa?: string | null
    cep?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    codIbge?: string | null
    uf?: string | null
    pais?: string | null
    eleitorUuid?: string | null
  }

  export type EnderecoEleitorUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    Eleitor?: EleitorUpdateOneWithoutEnderecoEleitorNestedInput
  }

  export type EnderecoEleitorUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    eleitorUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoEleitorCreateManyInput = {
    uuid?: string
    latitude: number
    longitude: number
    endereco?: string | null
    nCasa?: string | null
    cep?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    codIbge?: string | null
    uf?: string | null
    pais?: string | null
    eleitorUuid?: string | null
  }

  export type EnderecoEleitorUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoEleitorUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    eleitorUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DadosPessoaisEleitorCreateInput = {
    uuid?: string
    cpf?: string | null
    rg?: string | null
    sessao: string
    zona: string
    localdevotacao: string
    eleitor: EleitorCreateNestedOneWithoutDadosPessoaisEleitorInput
  }

  export type DadosPessoaisEleitorUncheckedCreateInput = {
    uuid?: string
    cpf?: string | null
    rg?: string | null
    sessao: string
    zona: string
    localdevotacao: string
    eleitorUuid: string
  }

  export type DadosPessoaisEleitorUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
    eleitor?: EleitorUpdateOneRequiredWithoutDadosPessoaisEleitorNestedInput
  }

  export type DadosPessoaisEleitorUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
  }

  export type DadosPessoaisEleitorCreateManyInput = {
    uuid?: string
    cpf?: string | null
    rg?: string | null
    sessao: string
    zona: string
    localdevotacao: string
    eleitorUuid: string
  }

  export type DadosPessoaisEleitorUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
  }

  export type DadosPessoaisEleitorUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
  }

  export type PlanejamentoLocalVotacaoCreateInput = {
    uuid?: string
    cadandidato: CandidatoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput
    Local: LocalVotacaoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput
    Expectativa?: ExpectativaCreateNestedManyWithoutLocalvotacaoInput
  }

  export type PlanejamentoLocalVotacaoUncheckedCreateInput = {
    uuid?: string
    localVotacaoUuid: number
    candidatoUuid: string
    Expectativa?: ExpectativaUncheckedCreateNestedManyWithoutLocalvotacaoInput
  }

  export type PlanejamentoLocalVotacaoUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cadandidato?: CandidatoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput
    Local?: LocalVotacaoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput
    Expectativa?: ExpectativaUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    Expectativa?: ExpectativaUncheckedUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoCreateManyInput = {
    uuid?: string
    localVotacaoUuid: number
    candidatoUuid: string
  }

  export type PlanejamentoLocalVotacaoUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    candidatoUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ExpectativaCreateInput = {
    expectativa?: number
    localvotacao: PlanejamentoLocalVotacaoCreateNestedOneWithoutExpectativaInput
  }

  export type ExpectativaUncheckedCreateInput = {
    localdevotacao_has_CandidatoUuid: string
    expectativa?: number
  }

  export type ExpectativaUpdateInput = {
    expectativa?: FloatFieldUpdateOperationsInput | number
    localvotacao?: PlanejamentoLocalVotacaoUpdateOneRequiredWithoutExpectativaNestedInput
  }

  export type ExpectativaUncheckedUpdateInput = {
    localdevotacao_has_CandidatoUuid?: StringFieldUpdateOperationsInput | string
    expectativa?: FloatFieldUpdateOperationsInput | number
  }

  export type ExpectativaCreateManyInput = {
    localdevotacao_has_CandidatoUuid: string
    expectativa?: number
  }

  export type ExpectativaUpdateManyMutationInput = {
    expectativa?: FloatFieldUpdateOperationsInput | number
  }

  export type ExpectativaUncheckedUpdateManyInput = {
    localdevotacao_has_CandidatoUuid?: StringFieldUpdateOperationsInput | string
    expectativa?: FloatFieldUpdateOperationsInput | number
  }

  export type LocalVotacaoCreateInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoUncheckedCreateInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoUncheckedCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoUpdateInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoUncheckedUpdateInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoCreateManyInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
  }

  export type LocalVotacaoUpdateManyMutationInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
  }

  export type LocalVotacaoUncheckedUpdateManyInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
  }

  export type EleicoesCreateInput = {
    uuid?: string
    ano: number
    descricao: string
    CandidatosEleicao?: CandidatosEleicaoCreateNestedManyWithoutEleicaoInput
  }

  export type EleicoesUncheckedCreateInput = {
    uuid?: string
    ano: number
    descricao: string
    CandidatosEleicao?: CandidatosEleicaoUncheckedCreateNestedManyWithoutEleicaoInput
  }

  export type EleicoesUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    CandidatosEleicao?: CandidatosEleicaoUpdateManyWithoutEleicaoNestedInput
  }

  export type EleicoesUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    CandidatosEleicao?: CandidatosEleicaoUncheckedUpdateManyWithoutEleicaoNestedInput
  }

  export type EleicoesCreateManyInput = {
    uuid?: string
    ano: number
    descricao: string
  }

  export type EleicoesUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type EleicoesUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type UFCreateInput = {
    descricao: string
    municipio?: MunicipioCreateNestedManyWithoutUfInput
  }

  export type UFUncheckedCreateInput = {
    id?: number
    descricao: string
    municipio?: MunicipioUncheckedCreateNestedManyWithoutUfInput
  }

  export type UFUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    municipio?: MunicipioUpdateManyWithoutUfNestedInput
  }

  export type UFUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    municipio?: MunicipioUncheckedUpdateManyWithoutUfNestedInput
  }

  export type UFCreateManyInput = {
    id?: number
    descricao: string
  }

  export type UFUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type UFUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type MunicipioCreateInput = {
    descricao: string
    uf: UFCreateNestedOneWithoutMunicipioInput
    CandidatosEleicao?: CandidatosEleicaoCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioUncheckedCreateInput = {
    id?: number
    uFId: number
    descricao: string
    CandidatosEleicao?: CandidatosEleicaoUncheckedCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    uf?: UFUpdateOneRequiredWithoutMunicipioNestedInput
    CandidatosEleicao?: CandidatosEleicaoUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    uFId?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    CandidatosEleicao?: CandidatosEleicaoUncheckedUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioCreateManyInput = {
    id?: number
    uFId: number
    descricao: string
  }

  export type MunicipioUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type MunicipioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    uFId?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type CandidatosEleicaoCreateInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    numero_urna: number
    eleicao: EleicoesCreateNestedOneWithoutCandidatosEleicaoInput
    municipio: MunicipioCreateNestedOneWithoutCandidatosEleicaoInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutCandidatoEleicaoInput
  }

  export type CandidatosEleicaoUncheckedCreateInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    municipioId: number
    numero_urna: number
    eleicoesUuid: string
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutCandidatoEleicaoInput
  }

  export type CandidatosEleicaoUpdateInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicao?: EleicoesUpdateOneRequiredWithoutCandidatosEleicaoNestedInput
    municipio?: MunicipioUpdateOneRequiredWithoutCandidatosEleicaoNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutCandidatoEleicaoNestedInput
  }

  export type CandidatosEleicaoUncheckedUpdateInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    municipioId?: IntFieldUpdateOperationsInput | number
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicoesUuid?: StringFieldUpdateOperationsInput | string
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutCandidatoEleicaoNestedInput
  }

  export type CandidatosEleicaoCreateManyInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    municipioId: number
    numero_urna: number
    eleicoesUuid: string
  }

  export type CandidatosEleicaoUpdateManyMutationInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
  }

  export type CandidatosEleicaoUncheckedUpdateManyInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    municipioId?: IntFieldUpdateOperationsInput | number
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicoesUuid?: StringFieldUpdateOperationsInput | string
  }

  export type LocalVotacao_has_candidatoEleicaoCreateInput = {
    uuid?: string
    localvontacao: LocalVotacaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput
    candidatoEleicao: CandidatosEleicaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoCreateNestedManyWithoutLocalvotacaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedCreateInput = {
    uuid?: string
    localVotacaoUuid: number
    candidatosEleicaoSequencial: bigint | number
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUncheckedCreateNestedManyWithoutLocalvotacaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localvontacao?: LocalVotacaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput
    candidatoEleicao?: CandidatosEleicaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    candidatosEleicaoSequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUncheckedUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoCreateManyInput = {
    uuid?: string
    localVotacaoUuid: number
    candidatosEleicaoSequencial: bigint | number
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    candidatosEleicaoSequencial?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type quantidade_votos_eleicaoCreateInput = {
    votos: number
    localvotacao: LocalVotacao_has_candidatoEleicaoCreateNestedOneWithoutQuantidade_votos_eleicaoInput
  }

  export type quantidade_votos_eleicaoUncheckedCreateInput = {
    uuidLocal: string
    votos: number
  }

  export type quantidade_votos_eleicaoUpdateInput = {
    votos?: IntFieldUpdateOperationsInput | number
    localvotacao?: LocalVotacao_has_candidatoEleicaoUpdateOneRequiredWithoutQuantidade_votos_eleicaoNestedInput
  }

  export type quantidade_votos_eleicaoUncheckedUpdateInput = {
    uuidLocal?: StringFieldUpdateOperationsInput | string
    votos?: IntFieldUpdateOperationsInput | number
  }

  export type quantidade_votos_eleicaoCreateManyInput = {
    uuidLocal: string
    votos: number
  }

  export type quantidade_votos_eleicaoUpdateManyMutationInput = {
    votos?: IntFieldUpdateOperationsInput | number
  }

  export type quantidade_votos_eleicaoUncheckedUpdateManyInput = {
    uuidLocal?: StringFieldUpdateOperationsInput | string
    votos?: IntFieldUpdateOperationsInput | number
  }

  export type SessoesEleitoraisCreateInput = {
    uuid?: string
    sessao: string
    zona: string
    nVotantes: number
    createdAt?: Date | string
    updatedAt?: Date | string
    LocalVotacao?: LocalVotacaoCreateNestedOneWithoutSessoesEleitoraisInput
  }

  export type SessoesEleitoraisUncheckedCreateInput = {
    uuid?: string
    sessao: string
    zona: string
    nVotantes: number
    localVotacaoUuid?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessoesEleitoraisUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    LocalVotacao?: LocalVotacaoUpdateOneWithoutSessoesEleitoraisNestedInput
  }

  export type SessoesEleitoraisUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    localVotacaoUuid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessoesEleitoraisCreateManyInput = {
    uuid?: string
    sessao: string
    zona: string
    nVotantes: number
    localVotacaoUuid?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessoesEleitoraisUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessoesEleitoraisUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    localVotacaoUuid?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EnderecoLocalVotacaoCreateInput = {
    uuid?: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
    LocalVotacao?: LocalVotacaoCreateNestedOneWithoutEnderecoInput
  }

  export type EnderecoLocalVotacaoUncheckedCreateInput = {
    uuid?: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
    localVotacaoUuid?: number | null
  }

  export type EnderecoLocalVotacaoUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    LocalVotacao?: LocalVotacaoUpdateOneWithoutEnderecoNestedInput
  }

  export type EnderecoLocalVotacaoUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    localVotacaoUuid?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EnderecoLocalVotacaoCreateManyInput = {
    uuid?: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
    localVotacaoUuid?: number | null
  }

  export type EnderecoLocalVotacaoUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type EnderecoLocalVotacaoUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    localVotacaoUuid?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type perfilUsoCreateInput = {
    descricao: string
    Usuario?: UsuarioCreateNestedManyWithoutPerfilInput
  }

  export type perfilUsoUncheckedCreateInput = {
    id?: number
    descricao: string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutPerfilInput
  }

  export type perfilUsoUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateManyWithoutPerfilNestedInput
  }

  export type perfilUsoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutPerfilNestedInput
  }

  export type perfilUsoCreateManyInput = {
    id?: number
    descricao: string
  }

  export type perfilUsoUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type perfilUsoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type classificacaoCreateInput = {
    descricao: string
    hexColor: string
    eleitoruuid: string
    eleitor?: EleitorCreateNestedManyWithoutClassificacaoInput
  }

  export type classificacaoUncheckedCreateInput = {
    id?: number
    descricao: string
    hexColor: string
    eleitoruuid: string
    eleitor?: EleitorUncheckedCreateNestedManyWithoutClassificacaoInput
  }

  export type classificacaoUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    eleitoruuid?: StringFieldUpdateOperationsInput | string
    eleitor?: EleitorUpdateManyWithoutClassificacaoNestedInput
  }

  export type classificacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    eleitoruuid?: StringFieldUpdateOperationsInput | string
    eleitor?: EleitorUncheckedUpdateManyWithoutClassificacaoNestedInput
  }

  export type classificacaoCreateManyInput = {
    id?: number
    descricao: string
    hexColor: string
    eleitoruuid: string
  }

  export type classificacaoUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    eleitoruuid?: StringFieldUpdateOperationsInput | string
  }

  export type classificacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    eleitoruuid?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioCreateInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioCreateManyInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DadosContatoUsuarioCreateInput = {
    uuid?: string
    whathsapp: string
    email: string
    instagram: string
    twitter: string
    facebook: string
    Usuario?: UsuarioCreateNestedManyWithoutContatoInput
  }

  export type DadosContatoUsuarioUncheckedCreateInput = {
    uuid?: string
    whathsapp: string
    email: string
    instagram: string
    twitter: string
    facebook: string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutContatoInput
  }

  export type DadosContatoUsuarioUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    whathsapp?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    instagram?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    facebook?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateManyWithoutContatoNestedInput
  }

  export type DadosContatoUsuarioUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    whathsapp?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    instagram?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    facebook?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutContatoNestedInput
  }

  export type DadosContatoUsuarioCreateManyInput = {
    uuid?: string
    whathsapp: string
    email: string
    instagram: string
    twitter: string
    facebook: string
  }

  export type DadosContatoUsuarioUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    whathsapp?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    instagram?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    facebook?: StringFieldUpdateOperationsInput | string
  }

  export type DadosContatoUsuarioUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    whathsapp?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    instagram?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    facebook?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoUsuarioCreateInput = {
    uuid?: string
    endereco: string
    complemento: string
    bairro: string
    cidade: string
    estado: string
    cep: string
    Usuario?: UsuarioCreateNestedManyWithoutEnderecoUsuarioInput
  }

  export type EnderecoUsuarioUncheckedCreateInput = {
    uuid?: string
    endereco: string
    complemento: string
    bairro: string
    cidade: string
    estado: string
    cep: string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutEnderecoUsuarioInput
  }

  export type EnderecoUsuarioUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    complemento?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateManyWithoutEnderecoUsuarioNestedInput
  }

  export type EnderecoUsuarioUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    complemento?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutEnderecoUsuarioNestedInput
  }

  export type EnderecoUsuarioCreateManyInput = {
    uuid?: string
    endereco: string
    complemento: string
    bairro: string
    cidade: string
    estado: string
    cep: string
  }

  export type EnderecoUsuarioUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    complemento?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoUsuarioUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    complemento?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
  }

  export type loginCreateInput = {
    autorizado: boolean
    email: string
    senha: string
    created_at?: Date | string
    updated_at?: Date | string
    Usuario?: UsuarioCreateNestedOneWithoutLoginInput
  }

  export type loginUncheckedCreateInput = {
    Usuario_uuid?: string
    autorizado: boolean
    email: string
    senha: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type loginUpdateInput = {
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateOneRequiredWithoutLoginNestedInput
  }

  export type loginUncheckedUpdateInput = {
    Usuario_uuid?: StringFieldUpdateOperationsInput | string
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type loginCreateManyInput = {
    Usuario_uuid?: string
    autorizado: boolean
    email: string
    senha: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type loginUpdateManyMutationInput = {
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type loginUncheckedUpdateManyInput = {
    Usuario_uuid?: StringFieldUpdateOperationsInput | string
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type blacklistCreateInput = {
    tokenexpirado: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type blacklistUncheckedCreateInput = {
    tokenexpirado: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type blacklistUpdateInput = {
    tokenexpirado?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type blacklistUncheckedUpdateInput = {
    tokenexpirado?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type blacklistCreateManyInput = {
    tokenexpirado: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type blacklistUpdateManyMutationInput = {
    tokenexpirado?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type blacklistUncheckedUpdateManyInput = {
    tokenexpirado?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type CandidatoListRelationFilter = {
    every?: CandidatoWhereInput
    some?: CandidatoWhereInput
    none?: CandidatoWhereInput
  }

  export type EleitorListRelationFilter = {
    every?: EleitorWhereInput
    some?: EleitorWhereInput
    none?: EleitorWhereInput
  }

  export type CandidatoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EleitorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type coligacaoCountOrderByAggregateInput = {
    uuid?: SortOrder
    usuarioUuid?: SortOrder
    ano?: SortOrder
  }

  export type coligacaoAvgOrderByAggregateInput = {
    ano?: SortOrder
  }

  export type coligacaoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    usuarioUuid?: SortOrder
    ano?: SortOrder
  }

  export type coligacaoMinOrderByAggregateInput = {
    uuid?: SortOrder
    usuarioUuid?: SortOrder
    ano?: SortOrder
  }

  export type coligacaoSumOrderByAggregateInput = {
    ano?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type ContatoCandidatoListRelationFilter = {
    every?: ContatoCandidatoWhereInput
    some?: ContatoCandidatoWhereInput
    none?: ContatoCandidatoWhereInput
  }

  export type ColigacaoNullableRelationFilter = {
    is?: coligacaoWhereInput | null
    isNot?: coligacaoWhereInput | null
  }

  export type PlanejamentoLocalVotacaoListRelationFilter = {
    every?: PlanejamentoLocalVotacaoWhereInput
    some?: PlanejamentoLocalVotacaoWhereInput
    none?: PlanejamentoLocalVotacaoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContatoCandidatoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PlanejamentoLocalVotacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CandidatoCountOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCandidato?: SortOrder
    nomeUrna?: SortOrder
    partido?: SortOrder
    coligacaoUuid?: SortOrder
    created_at?: SortOrder
  }

  export type CandidatoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCandidato?: SortOrder
    nomeUrna?: SortOrder
    partido?: SortOrder
    coligacaoUuid?: SortOrder
    created_at?: SortOrder
  }

  export type CandidatoMinOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCandidato?: SortOrder
    nomeUrna?: SortOrder
    partido?: SortOrder
    coligacaoUuid?: SortOrder
    created_at?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type CandidatoRelationFilter = {
    is?: CandidatoWhereInput
    isNot?: CandidatoWhereInput
  }

  export type ContatoCandidatoCountOrderByAggregateInput = {
    uuidContato?: SortOrder
    uuidEmpresa?: SortOrder
    nomeContato?: SortOrder
    cargo?: SortOrder
    telefone?: SortOrder
    whatsapp?: SortOrder
    email?: SortOrder
  }

  export type ContatoCandidatoMaxOrderByAggregateInput = {
    uuidContato?: SortOrder
    uuidEmpresa?: SortOrder
    nomeContato?: SortOrder
    cargo?: SortOrder
    telefone?: SortOrder
    whatsapp?: SortOrder
    email?: SortOrder
  }

  export type ContatoCandidatoMinOrderByAggregateInput = {
    uuidContato?: SortOrder
    uuidEmpresa?: SortOrder
    nomeContato?: SortOrder
    cargo?: SortOrder
    telefone?: SortOrder
    whatsapp?: SortOrder
    email?: SortOrder
  }

  export type AtendimentoListRelationFilter = {
    every?: atendimentoWhereInput
    some?: atendimentoWhereInput
    none?: atendimentoWhereInput
  }

  export type atendimentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipoAtendimentoCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type tipoAtendimentoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoAtendimentoMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type tipoAtendimentoMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type tipoAtendimentoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EleitorRelationFilter = {
    is?: EleitorWhereInput
    isNot?: EleitorWhereInput
  }

  export type TipoAtendimentoNullableRelationFilter = {
    is?: tipoAtendimentoWhereInput | null
    isNot?: tipoAtendimentoWhereInput | null
  }

  export type atendimentoCountOrderByAggregateInput = {
    uuid?: SortOrder
    eleitorUuid?: SortOrder
    usuarioUuid?: SortOrder
    responsavelUuid?: SortOrder
    custo?: SortOrder
    dataatendimento?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tipoAtendimento?: SortOrder
    descricao?: SortOrder
  }

  export type atendimentoAvgOrderByAggregateInput = {
    custo?: SortOrder
    tipoAtendimento?: SortOrder
  }

  export type atendimentoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    eleitorUuid?: SortOrder
    usuarioUuid?: SortOrder
    responsavelUuid?: SortOrder
    custo?: SortOrder
    dataatendimento?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tipoAtendimento?: SortOrder
    descricao?: SortOrder
  }

  export type atendimentoMinOrderByAggregateInput = {
    uuid?: SortOrder
    eleitorUuid?: SortOrder
    usuarioUuid?: SortOrder
    responsavelUuid?: SortOrder
    custo?: SortOrder
    dataatendimento?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tipoAtendimento?: SortOrder
    descricao?: SortOrder
  }

  export type atendimentoSumOrderByAggregateInput = {
    custo?: SortOrder
    tipoAtendimento?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EleitorNullableRelationFilter = {
    is?: EleitorWhereInput | null
    isNot?: EleitorWhereInput | null
  }

  export type LocalVotacaoNullableRelationFilter = {
    is?: LocalVotacaoWhereInput | null
    isNot?: LocalVotacaoWhereInput | null
  }

  export type UsuarioNullableRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type ClassificacaoNullableRelationFilter = {
    is?: classificacaoWhereInput | null
    isNot?: classificacaoWhereInput | null
  }

  export type ContatoEleitorListRelationFilter = {
    every?: contatoEleitorWhereInput
    some?: contatoEleitorWhereInput
    none?: contatoEleitorWhereInput
  }

  export type MidiasSociaisEleitorListRelationFilter = {
    every?: MidiasSociaisEleitorWhereInput
    some?: MidiasSociaisEleitorWhereInput
    none?: MidiasSociaisEleitorWhereInput
  }

  export type DadosPessoaisEleitorListRelationFilter = {
    every?: DadosPessoaisEleitorWhereInput
    some?: DadosPessoaisEleitorWhereInput
    none?: DadosPessoaisEleitorWhereInput
  }

  export type EnderecoEleitorListRelationFilter = {
    every?: EnderecoEleitorWhereInput
    some?: EnderecoEleitorWhereInput
    none?: EnderecoEleitorWhereInput
  }

  export type contatoEleitorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MidiasSociaisEleitorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DadosPessoaisEleitorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EnderecoEleitorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EleitorCountOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    nomeMae?: SortOrder
    sexo?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    coligacaoUuid?: SortOrder
    dataNascimento?: SortOrder
    indicado_por?: SortOrder
    candidatoUuid?: SortOrder
    usuarioUuid?: SortOrder
    sessaoEleitoral?: SortOrder
    classificacaoId?: SortOrder
    created_at?: SortOrder
  }

  export type EleitorAvgOrderByAggregateInput = {
    sessaoEleitoral?: SortOrder
    classificacaoId?: SortOrder
  }

  export type EleitorMaxOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    nomeMae?: SortOrder
    sexo?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    coligacaoUuid?: SortOrder
    dataNascimento?: SortOrder
    indicado_por?: SortOrder
    candidatoUuid?: SortOrder
    usuarioUuid?: SortOrder
    sessaoEleitoral?: SortOrder
    classificacaoId?: SortOrder
    created_at?: SortOrder
  }

  export type EleitorMinOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    nomeMae?: SortOrder
    sexo?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    coligacaoUuid?: SortOrder
    dataNascimento?: SortOrder
    indicado_por?: SortOrder
    candidatoUuid?: SortOrder
    usuarioUuid?: SortOrder
    sessaoEleitoral?: SortOrder
    classificacaoId?: SortOrder
    created_at?: SortOrder
  }

  export type EleitorSumOrderByAggregateInput = {
    sessaoEleitoral?: SortOrder
    classificacaoId?: SortOrder
  }

  export type contatoEleitorCountOrderByAggregateInput = {
    uuid?: SortOrder
    email?: SortOrder
    celular?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type contatoEleitorMaxOrderByAggregateInput = {
    uuid?: SortOrder
    email?: SortOrder
    celular?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type contatoEleitorMinOrderByAggregateInput = {
    uuid?: SortOrder
    email?: SortOrder
    celular?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type MidiasSociaisEleitorCountOrderByAggregateInput = {
    uuid?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    twitter?: SortOrder
    tiktok?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type MidiasSociaisEleitorMaxOrderByAggregateInput = {
    uuid?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    twitter?: SortOrder
    tiktok?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type MidiasSociaisEleitorMinOrderByAggregateInput = {
    uuid?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    twitter?: SortOrder
    tiktok?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type EnderecoEleitorCountOrderByAggregateInput = {
    uuid?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    endereco?: SortOrder
    nCasa?: SortOrder
    cep?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    codIbge?: SortOrder
    uf?: SortOrder
    pais?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type EnderecoEleitorAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type EnderecoEleitorMaxOrderByAggregateInput = {
    uuid?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    endereco?: SortOrder
    nCasa?: SortOrder
    cep?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    codIbge?: SortOrder
    uf?: SortOrder
    pais?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type EnderecoEleitorMinOrderByAggregateInput = {
    uuid?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    endereco?: SortOrder
    nCasa?: SortOrder
    cep?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    codIbge?: SortOrder
    uf?: SortOrder
    pais?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type EnderecoEleitorSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type DadosPessoaisEleitorCountOrderByAggregateInput = {
    uuid?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    localdevotacao?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type DadosPessoaisEleitorMaxOrderByAggregateInput = {
    uuid?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    localdevotacao?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type DadosPessoaisEleitorMinOrderByAggregateInput = {
    uuid?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    localdevotacao?: SortOrder
    eleitorUuid?: SortOrder
  }

  export type LocalVotacaoRelationFilter = {
    is?: LocalVotacaoWhereInput
    isNot?: LocalVotacaoWhereInput
  }

  export type ExpectativaListRelationFilter = {
    every?: ExpectativaWhereInput
    some?: ExpectativaWhereInput
    none?: ExpectativaWhereInput
  }

  export type ExpectativaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PlanejamentoLocalVotacaoCountOrderByAggregateInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatoUuid?: SortOrder
  }

  export type PlanejamentoLocalVotacaoAvgOrderByAggregateInput = {
    localVotacaoUuid?: SortOrder
  }

  export type PlanejamentoLocalVotacaoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatoUuid?: SortOrder
  }

  export type PlanejamentoLocalVotacaoMinOrderByAggregateInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatoUuid?: SortOrder
  }

  export type PlanejamentoLocalVotacaoSumOrderByAggregateInput = {
    localVotacaoUuid?: SortOrder
  }

  export type PlanejamentoLocalVotacaoRelationFilter = {
    is?: PlanejamentoLocalVotacaoWhereInput
    isNot?: PlanejamentoLocalVotacaoWhereInput
  }

  export type ExpectativaCountOrderByAggregateInput = {
    localdevotacao_has_CandidatoUuid?: SortOrder
    expectativa?: SortOrder
  }

  export type ExpectativaAvgOrderByAggregateInput = {
    expectativa?: SortOrder
  }

  export type ExpectativaMaxOrderByAggregateInput = {
    localdevotacao_has_CandidatoUuid?: SortOrder
    expectativa?: SortOrder
  }

  export type ExpectativaMinOrderByAggregateInput = {
    localdevotacao_has_CandidatoUuid?: SortOrder
    expectativa?: SortOrder
  }

  export type ExpectativaSumOrderByAggregateInput = {
    expectativa?: SortOrder
  }

  export type EnderecoLocalVotacaoListRelationFilter = {
    every?: EnderecoLocalVotacaoWhereInput
    some?: EnderecoLocalVotacaoWhereInput
    none?: EnderecoLocalVotacaoWhereInput
  }

  export type SessoesEleitoraisListRelationFilter = {
    every?: SessoesEleitoraisWhereInput
    some?: SessoesEleitoraisWhereInput
    none?: SessoesEleitoraisWhereInput
  }

  export type LocalVotacao_has_candidatoEleicaoListRelationFilter = {
    every?: LocalVotacao_has_candidatoEleicaoWhereInput
    some?: LocalVotacao_has_candidatoEleicaoWhereInput
    none?: LocalVotacao_has_candidatoEleicaoWhereInput
  }

  export type EnderecoLocalVotacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessoesEleitoraisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LocalVotacaoCountOrderByAggregateInput = {
    uuid?: SortOrder
    localdevotacao?: SortOrder
    updatedAt?: SortOrder
    createdaAt?: SortOrder
    totalEleitores?: SortOrder
  }

  export type LocalVotacaoAvgOrderByAggregateInput = {
    uuid?: SortOrder
    totalEleitores?: SortOrder
  }

  export type LocalVotacaoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    localdevotacao?: SortOrder
    updatedAt?: SortOrder
    createdaAt?: SortOrder
    totalEleitores?: SortOrder
  }

  export type LocalVotacaoMinOrderByAggregateInput = {
    uuid?: SortOrder
    localdevotacao?: SortOrder
    updatedAt?: SortOrder
    createdaAt?: SortOrder
    totalEleitores?: SortOrder
  }

  export type LocalVotacaoSumOrderByAggregateInput = {
    uuid?: SortOrder
    totalEleitores?: SortOrder
  }

  export type CandidatosEleicaoListRelationFilter = {
    every?: CandidatosEleicaoWhereInput
    some?: CandidatosEleicaoWhereInput
    none?: CandidatosEleicaoWhereInput
  }

  export type CandidatosEleicaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EleicoesCountOrderByAggregateInput = {
    uuid?: SortOrder
    ano?: SortOrder
    descricao?: SortOrder
  }

  export type EleicoesAvgOrderByAggregateInput = {
    ano?: SortOrder
  }

  export type EleicoesMaxOrderByAggregateInput = {
    uuid?: SortOrder
    ano?: SortOrder
    descricao?: SortOrder
  }

  export type EleicoesMinOrderByAggregateInput = {
    uuid?: SortOrder
    ano?: SortOrder
    descricao?: SortOrder
  }

  export type EleicoesSumOrderByAggregateInput = {
    ano?: SortOrder
  }

  export type MunicipioListRelationFilter = {
    every?: MunicipioWhereInput
    some?: MunicipioWhereInput
    none?: MunicipioWhereInput
  }

  export type MunicipioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UFCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type UFAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UFMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type UFMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type UFSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UFRelationFilter = {
    is?: UFWhereInput
    isNot?: UFWhereInput
  }

  export type MunicipioCountOrderByAggregateInput = {
    id?: SortOrder
    uFId?: SortOrder
    descricao?: SortOrder
  }

  export type MunicipioAvgOrderByAggregateInput = {
    id?: SortOrder
    uFId?: SortOrder
  }

  export type MunicipioMaxOrderByAggregateInput = {
    id?: SortOrder
    uFId?: SortOrder
    descricao?: SortOrder
  }

  export type MunicipioMinOrderByAggregateInput = {
    id?: SortOrder
    uFId?: SortOrder
    descricao?: SortOrder
  }

  export type MunicipioSumOrderByAggregateInput = {
    id?: SortOrder
    uFId?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type EleicoesRelationFilter = {
    is?: EleicoesWhereInput
    isNot?: EleicoesWhereInput
  }

  export type MunicipioRelationFilter = {
    is?: MunicipioWhereInput
    isNot?: MunicipioWhereInput
  }

  export type CandidatosEleicaoCountOrderByAggregateInput = {
    sequencial?: SortOrder
    nomecandidato?: SortOrder
    cargoCandidato?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
    eleicoesUuid?: SortOrder
  }

  export type CandidatosEleicaoAvgOrderByAggregateInput = {
    sequencial?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
  }

  export type CandidatosEleicaoMaxOrderByAggregateInput = {
    sequencial?: SortOrder
    nomecandidato?: SortOrder
    cargoCandidato?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
    eleicoesUuid?: SortOrder
  }

  export type CandidatosEleicaoMinOrderByAggregateInput = {
    sequencial?: SortOrder
    nomecandidato?: SortOrder
    cargoCandidato?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
    eleicoesUuid?: SortOrder
  }

  export type CandidatosEleicaoSumOrderByAggregateInput = {
    sequencial?: SortOrder
    municipioId?: SortOrder
    numero_urna?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type CandidatosEleicaoRelationFilter = {
    is?: CandidatosEleicaoWhereInput
    isNot?: CandidatosEleicaoWhereInput
  }

  export type Quantidade_votos_eleicaoListRelationFilter = {
    every?: quantidade_votos_eleicaoWhereInput
    some?: quantidade_votos_eleicaoWhereInput
    none?: quantidade_votos_eleicaoWhereInput
  }

  export type quantidade_votos_eleicaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoCountOrderByAggregateInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoAvgOrderByAggregateInput = {
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoMinOrderByAggregateInput = {
    uuid?: SortOrder
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoSumOrderByAggregateInput = {
    localVotacaoUuid?: SortOrder
    candidatosEleicaoSequencial?: SortOrder
  }

  export type LocalVotacao_has_candidatoEleicaoRelationFilter = {
    is?: LocalVotacao_has_candidatoEleicaoWhereInput
    isNot?: LocalVotacao_has_candidatoEleicaoWhereInput
  }

  export type quantidade_votos_eleicaoCountOrderByAggregateInput = {
    uuidLocal?: SortOrder
    votos?: SortOrder
  }

  export type quantidade_votos_eleicaoAvgOrderByAggregateInput = {
    votos?: SortOrder
  }

  export type quantidade_votos_eleicaoMaxOrderByAggregateInput = {
    uuidLocal?: SortOrder
    votos?: SortOrder
  }

  export type quantidade_votos_eleicaoMinOrderByAggregateInput = {
    uuidLocal?: SortOrder
    votos?: SortOrder
  }

  export type quantidade_votos_eleicaoSumOrderByAggregateInput = {
    votos?: SortOrder
  }

  export type SessoesEleitoraisCountOrderByAggregateInput = {
    uuid?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessoesEleitoraisAvgOrderByAggregateInput = {
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type SessoesEleitoraisMaxOrderByAggregateInput = {
    uuid?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessoesEleitoraisMinOrderByAggregateInput = {
    uuid?: SortOrder
    sessao?: SortOrder
    zona?: SortOrder
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessoesEleitoraisSumOrderByAggregateInput = {
    nVotantes?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type EnderecoLocalVotacaoCountOrderByAggregateInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type EnderecoLocalVotacaoAvgOrderByAggregateInput = {
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type EnderecoLocalVotacaoMaxOrderByAggregateInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type EnderecoLocalVotacaoMinOrderByAggregateInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type EnderecoLocalVotacaoSumOrderByAggregateInput = {
    cep?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    localVotacaoUuid?: SortOrder
  }

  export type perfilUsoCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type perfilUsoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type perfilUsoMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type perfilUsoMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
  }

  export type perfilUsoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type classificacaoCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    hexColor?: SortOrder
    eleitoruuid?: SortOrder
  }

  export type classificacaoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type classificacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    hexColor?: SortOrder
    eleitoruuid?: SortOrder
  }

  export type classificacaoMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    hexColor?: SortOrder
    eleitoruuid?: SortOrder
  }

  export type classificacaoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type PerfilUsoRelationFilter = {
    is?: perfilUsoWhereInput
    isNot?: perfilUsoWhereInput
  }

  export type LoginListRelationFilter = {
    every?: loginWhereInput
    some?: loginWhereInput
    none?: loginWhereInput
  }

  export type DadosContatoUsuarioNullableRelationFilter = {
    is?: DadosContatoUsuarioWhereInput | null
    isNot?: DadosContatoUsuarioWhereInput | null
  }

  export type EnderecoUsuarioNullableRelationFilter = {
    is?: EnderecoUsuarioWhereInput | null
    isNot?: EnderecoUsuarioWhereInput | null
  }

  export type ColigacaoListRelationFilter = {
    every?: coligacaoWhereInput
    some?: coligacaoWhereInput
    none?: coligacaoWhereInput
  }

  export type loginOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type coligacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    apelido?: SortOrder
    isAtivo?: SortOrder
    uuidCandidato?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    perfil?: SortOrder
    dadosContatoUsuarioUuid?: SortOrder
    enderecoUsuarioUuid?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    perfil?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    apelido?: SortOrder
    isAtivo?: SortOrder
    uuidCandidato?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    perfil?: SortOrder
    dadosContatoUsuarioUuid?: SortOrder
    enderecoUsuarioUuid?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    uuid?: SortOrder
    nomeCompleto?: SortOrder
    apelido?: SortOrder
    isAtivo?: SortOrder
    uuidCandidato?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    perfil?: SortOrder
    dadosContatoUsuarioUuid?: SortOrder
    enderecoUsuarioUuid?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    perfil?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DadosContatoUsuarioCountOrderByAggregateInput = {
    uuid?: SortOrder
    whathsapp?: SortOrder
    email?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    facebook?: SortOrder
  }

  export type DadosContatoUsuarioMaxOrderByAggregateInput = {
    uuid?: SortOrder
    whathsapp?: SortOrder
    email?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    facebook?: SortOrder
  }

  export type DadosContatoUsuarioMinOrderByAggregateInput = {
    uuid?: SortOrder
    whathsapp?: SortOrder
    email?: SortOrder
    instagram?: SortOrder
    twitter?: SortOrder
    facebook?: SortOrder
  }

  export type EnderecoUsuarioCountOrderByAggregateInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
  }

  export type EnderecoUsuarioMaxOrderByAggregateInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
  }

  export type EnderecoUsuarioMinOrderByAggregateInput = {
    uuid?: SortOrder
    endereco?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    cep?: SortOrder
  }

  export type loginCountOrderByAggregateInput = {
    Usuario_uuid?: SortOrder
    autorizado?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type loginMaxOrderByAggregateInput = {
    Usuario_uuid?: SortOrder
    autorizado?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type loginMinOrderByAggregateInput = {
    Usuario_uuid?: SortOrder
    autorizado?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type blacklistCountOrderByAggregateInput = {
    tokenexpirado?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type blacklistMaxOrderByAggregateInput = {
    tokenexpirado?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type blacklistMinOrderByAggregateInput = {
    tokenexpirado?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UsuarioCreateNestedOneWithoutColigacaoInput = {
    create?: XOR<UsuarioCreateWithoutColigacaoInput, UsuarioUncheckedCreateWithoutColigacaoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutColigacaoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CandidatoCreateNestedManyWithoutColigacaoInput = {
    create?: XOR<CandidatoCreateWithoutColigacaoInput, CandidatoUncheckedCreateWithoutColigacaoInput> | CandidatoCreateWithoutColigacaoInput[] | CandidatoUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: CandidatoCreateOrConnectWithoutColigacaoInput | CandidatoCreateOrConnectWithoutColigacaoInput[]
    createMany?: CandidatoCreateManyColigacaoInputEnvelope
    connect?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
  }

  export type EleitorCreateNestedManyWithoutColigacaoInput = {
    create?: XOR<EleitorCreateWithoutColigacaoInput, EleitorUncheckedCreateWithoutColigacaoInput> | EleitorCreateWithoutColigacaoInput[] | EleitorUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutColigacaoInput | EleitorCreateOrConnectWithoutColigacaoInput[]
    createMany?: EleitorCreateManyColigacaoInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type CandidatoUncheckedCreateNestedManyWithoutColigacaoInput = {
    create?: XOR<CandidatoCreateWithoutColigacaoInput, CandidatoUncheckedCreateWithoutColigacaoInput> | CandidatoCreateWithoutColigacaoInput[] | CandidatoUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: CandidatoCreateOrConnectWithoutColigacaoInput | CandidatoCreateOrConnectWithoutColigacaoInput[]
    createMany?: CandidatoCreateManyColigacaoInputEnvelope
    connect?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
  }

  export type EleitorUncheckedCreateNestedManyWithoutColigacaoInput = {
    create?: XOR<EleitorCreateWithoutColigacaoInput, EleitorUncheckedCreateWithoutColigacaoInput> | EleitorCreateWithoutColigacaoInput[] | EleitorUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutColigacaoInput | EleitorCreateOrConnectWithoutColigacaoInput[]
    createMany?: EleitorCreateManyColigacaoInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioUpdateOneRequiredWithoutColigacaoNestedInput = {
    create?: XOR<UsuarioCreateWithoutColigacaoInput, UsuarioUncheckedCreateWithoutColigacaoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutColigacaoInput
    upsert?: UsuarioUpsertWithoutColigacaoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutColigacaoInput, UsuarioUpdateWithoutColigacaoInput>, UsuarioUncheckedUpdateWithoutColigacaoInput>
  }

  export type CandidatoUpdateManyWithoutColigacaoNestedInput = {
    create?: XOR<CandidatoCreateWithoutColigacaoInput, CandidatoUncheckedCreateWithoutColigacaoInput> | CandidatoCreateWithoutColigacaoInput[] | CandidatoUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: CandidatoCreateOrConnectWithoutColigacaoInput | CandidatoCreateOrConnectWithoutColigacaoInput[]
    upsert?: CandidatoUpsertWithWhereUniqueWithoutColigacaoInput | CandidatoUpsertWithWhereUniqueWithoutColigacaoInput[]
    createMany?: CandidatoCreateManyColigacaoInputEnvelope
    set?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    disconnect?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    delete?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    connect?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    update?: CandidatoUpdateWithWhereUniqueWithoutColigacaoInput | CandidatoUpdateWithWhereUniqueWithoutColigacaoInput[]
    updateMany?: CandidatoUpdateManyWithWhereWithoutColigacaoInput | CandidatoUpdateManyWithWhereWithoutColigacaoInput[]
    deleteMany?: CandidatoScalarWhereInput | CandidatoScalarWhereInput[]
  }

  export type EleitorUpdateManyWithoutColigacaoNestedInput = {
    create?: XOR<EleitorCreateWithoutColigacaoInput, EleitorUncheckedCreateWithoutColigacaoInput> | EleitorCreateWithoutColigacaoInput[] | EleitorUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutColigacaoInput | EleitorCreateOrConnectWithoutColigacaoInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutColigacaoInput | EleitorUpsertWithWhereUniqueWithoutColigacaoInput[]
    createMany?: EleitorCreateManyColigacaoInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutColigacaoInput | EleitorUpdateWithWhereUniqueWithoutColigacaoInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutColigacaoInput | EleitorUpdateManyWithWhereWithoutColigacaoInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type CandidatoUncheckedUpdateManyWithoutColigacaoNestedInput = {
    create?: XOR<CandidatoCreateWithoutColigacaoInput, CandidatoUncheckedCreateWithoutColigacaoInput> | CandidatoCreateWithoutColigacaoInput[] | CandidatoUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: CandidatoCreateOrConnectWithoutColigacaoInput | CandidatoCreateOrConnectWithoutColigacaoInput[]
    upsert?: CandidatoUpsertWithWhereUniqueWithoutColigacaoInput | CandidatoUpsertWithWhereUniqueWithoutColigacaoInput[]
    createMany?: CandidatoCreateManyColigacaoInputEnvelope
    set?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    disconnect?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    delete?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    connect?: CandidatoWhereUniqueInput | CandidatoWhereUniqueInput[]
    update?: CandidatoUpdateWithWhereUniqueWithoutColigacaoInput | CandidatoUpdateWithWhereUniqueWithoutColigacaoInput[]
    updateMany?: CandidatoUpdateManyWithWhereWithoutColigacaoInput | CandidatoUpdateManyWithWhereWithoutColigacaoInput[]
    deleteMany?: CandidatoScalarWhereInput | CandidatoScalarWhereInput[]
  }

  export type EleitorUncheckedUpdateManyWithoutColigacaoNestedInput = {
    create?: XOR<EleitorCreateWithoutColigacaoInput, EleitorUncheckedCreateWithoutColigacaoInput> | EleitorCreateWithoutColigacaoInput[] | EleitorUncheckedCreateWithoutColigacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutColigacaoInput | EleitorCreateOrConnectWithoutColigacaoInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutColigacaoInput | EleitorUpsertWithWhereUniqueWithoutColigacaoInput[]
    createMany?: EleitorCreateManyColigacaoInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutColigacaoInput | EleitorUpdateWithWhereUniqueWithoutColigacaoInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutColigacaoInput | EleitorUpdateManyWithWhereWithoutColigacaoInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type UsuarioCreateNestedManyWithoutCandidatoInput = {
    create?: XOR<UsuarioCreateWithoutCandidatoInput, UsuarioUncheckedCreateWithoutCandidatoInput> | UsuarioCreateWithoutCandidatoInput[] | UsuarioUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutCandidatoInput | UsuarioCreateOrConnectWithoutCandidatoInput[]
    createMany?: UsuarioCreateManyCandidatoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type ContatoCandidatoCreateNestedManyWithoutCandidatoInput = {
    create?: XOR<ContatoCandidatoCreateWithoutCandidatoInput, ContatoCandidatoUncheckedCreateWithoutCandidatoInput> | ContatoCandidatoCreateWithoutCandidatoInput[] | ContatoCandidatoUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: ContatoCandidatoCreateOrConnectWithoutCandidatoInput | ContatoCandidatoCreateOrConnectWithoutCandidatoInput[]
    createMany?: ContatoCandidatoCreateManyCandidatoInputEnvelope
    connect?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
  }

  export type EleitorCreateNestedManyWithoutCandidatoInput = {
    create?: XOR<EleitorCreateWithoutCandidatoInput, EleitorUncheckedCreateWithoutCandidatoInput> | EleitorCreateWithoutCandidatoInput[] | EleitorUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCandidatoInput | EleitorCreateOrConnectWithoutCandidatoInput[]
    createMany?: EleitorCreateManyCandidatoInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type coligacaoCreateNestedOneWithoutCandidatosInput = {
    create?: XOR<coligacaoCreateWithoutCandidatosInput, coligacaoUncheckedCreateWithoutCandidatosInput>
    connectOrCreate?: coligacaoCreateOrConnectWithoutCandidatosInput
    connect?: coligacaoWhereUniqueInput
  }

  export type PlanejamentoLocalVotacaoCreateNestedManyWithoutCadandidatoInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput> | PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyCadandidatoInputEnvelope
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutCandidatoInput = {
    create?: XOR<UsuarioCreateWithoutCandidatoInput, UsuarioUncheckedCreateWithoutCandidatoInput> | UsuarioCreateWithoutCandidatoInput[] | UsuarioUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutCandidatoInput | UsuarioCreateOrConnectWithoutCandidatoInput[]
    createMany?: UsuarioCreateManyCandidatoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type ContatoCandidatoUncheckedCreateNestedManyWithoutCandidatoInput = {
    create?: XOR<ContatoCandidatoCreateWithoutCandidatoInput, ContatoCandidatoUncheckedCreateWithoutCandidatoInput> | ContatoCandidatoCreateWithoutCandidatoInput[] | ContatoCandidatoUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: ContatoCandidatoCreateOrConnectWithoutCandidatoInput | ContatoCandidatoCreateOrConnectWithoutCandidatoInput[]
    createMany?: ContatoCandidatoCreateManyCandidatoInputEnvelope
    connect?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
  }

  export type EleitorUncheckedCreateNestedManyWithoutCandidatoInput = {
    create?: XOR<EleitorCreateWithoutCandidatoInput, EleitorUncheckedCreateWithoutCandidatoInput> | EleitorCreateWithoutCandidatoInput[] | EleitorUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCandidatoInput | EleitorCreateOrConnectWithoutCandidatoInput[]
    createMany?: EleitorCreateManyCandidatoInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutCadandidatoInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput> | PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyCadandidatoInputEnvelope
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateManyWithoutCandidatoNestedInput = {
    create?: XOR<UsuarioCreateWithoutCandidatoInput, UsuarioUncheckedCreateWithoutCandidatoInput> | UsuarioCreateWithoutCandidatoInput[] | UsuarioUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutCandidatoInput | UsuarioCreateOrConnectWithoutCandidatoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutCandidatoInput | UsuarioUpsertWithWhereUniqueWithoutCandidatoInput[]
    createMany?: UsuarioCreateManyCandidatoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutCandidatoInput | UsuarioUpdateWithWhereUniqueWithoutCandidatoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutCandidatoInput | UsuarioUpdateManyWithWhereWithoutCandidatoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ContatoCandidatoUpdateManyWithoutCandidatoNestedInput = {
    create?: XOR<ContatoCandidatoCreateWithoutCandidatoInput, ContatoCandidatoUncheckedCreateWithoutCandidatoInput> | ContatoCandidatoCreateWithoutCandidatoInput[] | ContatoCandidatoUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: ContatoCandidatoCreateOrConnectWithoutCandidatoInput | ContatoCandidatoCreateOrConnectWithoutCandidatoInput[]
    upsert?: ContatoCandidatoUpsertWithWhereUniqueWithoutCandidatoInput | ContatoCandidatoUpsertWithWhereUniqueWithoutCandidatoInput[]
    createMany?: ContatoCandidatoCreateManyCandidatoInputEnvelope
    set?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    disconnect?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    delete?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    connect?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    update?: ContatoCandidatoUpdateWithWhereUniqueWithoutCandidatoInput | ContatoCandidatoUpdateWithWhereUniqueWithoutCandidatoInput[]
    updateMany?: ContatoCandidatoUpdateManyWithWhereWithoutCandidatoInput | ContatoCandidatoUpdateManyWithWhereWithoutCandidatoInput[]
    deleteMany?: ContatoCandidatoScalarWhereInput | ContatoCandidatoScalarWhereInput[]
  }

  export type EleitorUpdateManyWithoutCandidatoNestedInput = {
    create?: XOR<EleitorCreateWithoutCandidatoInput, EleitorUncheckedCreateWithoutCandidatoInput> | EleitorCreateWithoutCandidatoInput[] | EleitorUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCandidatoInput | EleitorCreateOrConnectWithoutCandidatoInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutCandidatoInput | EleitorUpsertWithWhereUniqueWithoutCandidatoInput[]
    createMany?: EleitorCreateManyCandidatoInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutCandidatoInput | EleitorUpdateWithWhereUniqueWithoutCandidatoInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutCandidatoInput | EleitorUpdateManyWithWhereWithoutCandidatoInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type coligacaoUpdateOneWithoutCandidatosNestedInput = {
    create?: XOR<coligacaoCreateWithoutCandidatosInput, coligacaoUncheckedCreateWithoutCandidatosInput>
    connectOrCreate?: coligacaoCreateOrConnectWithoutCandidatosInput
    upsert?: coligacaoUpsertWithoutCandidatosInput
    disconnect?: coligacaoWhereInput | boolean
    delete?: coligacaoWhereInput | boolean
    connect?: coligacaoWhereUniqueInput
    update?: XOR<XOR<coligacaoUpdateToOneWithWhereWithoutCandidatosInput, coligacaoUpdateWithoutCandidatosInput>, coligacaoUncheckedUpdateWithoutCandidatosInput>
  }

  export type PlanejamentoLocalVotacaoUpdateManyWithoutCadandidatoNestedInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput> | PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput[]
    upsert?: PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutCadandidatoInput | PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutCadandidatoInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyCadandidatoInputEnvelope
    set?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    disconnect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    delete?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    update?: PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutCadandidatoInput | PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutCadandidatoInput[]
    updateMany?: PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutCadandidatoInput | PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutCadandidatoInput[]
    deleteMany?: PlanejamentoLocalVotacaoScalarWhereInput | PlanejamentoLocalVotacaoScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutCandidatoNestedInput = {
    create?: XOR<UsuarioCreateWithoutCandidatoInput, UsuarioUncheckedCreateWithoutCandidatoInput> | UsuarioCreateWithoutCandidatoInput[] | UsuarioUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutCandidatoInput | UsuarioCreateOrConnectWithoutCandidatoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutCandidatoInput | UsuarioUpsertWithWhereUniqueWithoutCandidatoInput[]
    createMany?: UsuarioCreateManyCandidatoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutCandidatoInput | UsuarioUpdateWithWhereUniqueWithoutCandidatoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutCandidatoInput | UsuarioUpdateManyWithWhereWithoutCandidatoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ContatoCandidatoUncheckedUpdateManyWithoutCandidatoNestedInput = {
    create?: XOR<ContatoCandidatoCreateWithoutCandidatoInput, ContatoCandidatoUncheckedCreateWithoutCandidatoInput> | ContatoCandidatoCreateWithoutCandidatoInput[] | ContatoCandidatoUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: ContatoCandidatoCreateOrConnectWithoutCandidatoInput | ContatoCandidatoCreateOrConnectWithoutCandidatoInput[]
    upsert?: ContatoCandidatoUpsertWithWhereUniqueWithoutCandidatoInput | ContatoCandidatoUpsertWithWhereUniqueWithoutCandidatoInput[]
    createMany?: ContatoCandidatoCreateManyCandidatoInputEnvelope
    set?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    disconnect?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    delete?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    connect?: ContatoCandidatoWhereUniqueInput | ContatoCandidatoWhereUniqueInput[]
    update?: ContatoCandidatoUpdateWithWhereUniqueWithoutCandidatoInput | ContatoCandidatoUpdateWithWhereUniqueWithoutCandidatoInput[]
    updateMany?: ContatoCandidatoUpdateManyWithWhereWithoutCandidatoInput | ContatoCandidatoUpdateManyWithWhereWithoutCandidatoInput[]
    deleteMany?: ContatoCandidatoScalarWhereInput | ContatoCandidatoScalarWhereInput[]
  }

  export type EleitorUncheckedUpdateManyWithoutCandidatoNestedInput = {
    create?: XOR<EleitorCreateWithoutCandidatoInput, EleitorUncheckedCreateWithoutCandidatoInput> | EleitorCreateWithoutCandidatoInput[] | EleitorUncheckedCreateWithoutCandidatoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCandidatoInput | EleitorCreateOrConnectWithoutCandidatoInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutCandidatoInput | EleitorUpsertWithWhereUniqueWithoutCandidatoInput[]
    createMany?: EleitorCreateManyCandidatoInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutCandidatoInput | EleitorUpdateWithWhereUniqueWithoutCandidatoInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutCandidatoInput | EleitorUpdateManyWithWhereWithoutCandidatoInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoNestedInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput> | PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput[]
    upsert?: PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutCadandidatoInput | PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutCadandidatoInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyCadandidatoInputEnvelope
    set?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    disconnect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    delete?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    update?: PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutCadandidatoInput | PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutCadandidatoInput[]
    updateMany?: PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutCadandidatoInput | PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutCadandidatoInput[]
    deleteMany?: PlanejamentoLocalVotacaoScalarWhereInput | PlanejamentoLocalVotacaoScalarWhereInput[]
  }

  export type CandidatoCreateNestedOneWithoutContatoInput = {
    create?: XOR<CandidatoCreateWithoutContatoInput, CandidatoUncheckedCreateWithoutContatoInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutContatoInput
    connect?: CandidatoWhereUniqueInput
  }

  export type CandidatoUpdateOneRequiredWithoutContatoNestedInput = {
    create?: XOR<CandidatoCreateWithoutContatoInput, CandidatoUncheckedCreateWithoutContatoInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutContatoInput
    upsert?: CandidatoUpsertWithoutContatoInput
    connect?: CandidatoWhereUniqueInput
    update?: XOR<XOR<CandidatoUpdateToOneWithWhereWithoutContatoInput, CandidatoUpdateWithoutContatoInput>, CandidatoUncheckedUpdateWithoutContatoInput>
  }

  export type atendimentoCreateNestedManyWithoutAtendimentoInput = {
    create?: XOR<atendimentoCreateWithoutAtendimentoInput, atendimentoUncheckedCreateWithoutAtendimentoInput> | atendimentoCreateWithoutAtendimentoInput[] | atendimentoUncheckedCreateWithoutAtendimentoInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutAtendimentoInput | atendimentoCreateOrConnectWithoutAtendimentoInput[]
    createMany?: atendimentoCreateManyAtendimentoInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type atendimentoUncheckedCreateNestedManyWithoutAtendimentoInput = {
    create?: XOR<atendimentoCreateWithoutAtendimentoInput, atendimentoUncheckedCreateWithoutAtendimentoInput> | atendimentoCreateWithoutAtendimentoInput[] | atendimentoUncheckedCreateWithoutAtendimentoInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutAtendimentoInput | atendimentoCreateOrConnectWithoutAtendimentoInput[]
    createMany?: atendimentoCreateManyAtendimentoInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type atendimentoUpdateManyWithoutAtendimentoNestedInput = {
    create?: XOR<atendimentoCreateWithoutAtendimentoInput, atendimentoUncheckedCreateWithoutAtendimentoInput> | atendimentoCreateWithoutAtendimentoInput[] | atendimentoUncheckedCreateWithoutAtendimentoInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutAtendimentoInput | atendimentoCreateOrConnectWithoutAtendimentoInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutAtendimentoInput | atendimentoUpsertWithWhereUniqueWithoutAtendimentoInput[]
    createMany?: atendimentoCreateManyAtendimentoInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutAtendimentoInput | atendimentoUpdateWithWhereUniqueWithoutAtendimentoInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutAtendimentoInput | atendimentoUpdateManyWithWhereWithoutAtendimentoInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type atendimentoUncheckedUpdateManyWithoutAtendimentoNestedInput = {
    create?: XOR<atendimentoCreateWithoutAtendimentoInput, atendimentoUncheckedCreateWithoutAtendimentoInput> | atendimentoCreateWithoutAtendimentoInput[] | atendimentoUncheckedCreateWithoutAtendimentoInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutAtendimentoInput | atendimentoCreateOrConnectWithoutAtendimentoInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutAtendimentoInput | atendimentoUpsertWithWhereUniqueWithoutAtendimentoInput[]
    createMany?: atendimentoCreateManyAtendimentoInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutAtendimentoInput | atendimentoUpdateWithWhereUniqueWithoutAtendimentoInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutAtendimentoInput | atendimentoUpdateManyWithWhereWithoutAtendimentoInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutAtendimentoCriadoInput = {
    create?: XOR<UsuarioCreateWithoutAtendimentoCriadoInput, UsuarioUncheckedCreateWithoutAtendimentoCriadoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtendimentoCriadoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutAtendimentoInput = {
    create?: XOR<UsuarioCreateWithoutAtendimentoInput, UsuarioUncheckedCreateWithoutAtendimentoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtendimentoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EleitorCreateNestedOneWithoutAtendimentoInput = {
    create?: XOR<EleitorCreateWithoutAtendimentoInput, EleitorUncheckedCreateWithoutAtendimentoInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutAtendimentoInput
    connect?: EleitorWhereUniqueInput
  }

  export type tipoAtendimentoCreateNestedOneWithoutAtendimentoInput = {
    create?: XOR<tipoAtendimentoCreateWithoutAtendimentoInput, tipoAtendimentoUncheckedCreateWithoutAtendimentoInput>
    connectOrCreate?: tipoAtendimentoCreateOrConnectWithoutAtendimentoInput
    connect?: tipoAtendimentoWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UsuarioUpdateOneRequiredWithoutAtendimentoCriadoNestedInput = {
    create?: XOR<UsuarioCreateWithoutAtendimentoCriadoInput, UsuarioUncheckedCreateWithoutAtendimentoCriadoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtendimentoCriadoInput
    upsert?: UsuarioUpsertWithoutAtendimentoCriadoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAtendimentoCriadoInput, UsuarioUpdateWithoutAtendimentoCriadoInput>, UsuarioUncheckedUpdateWithoutAtendimentoCriadoInput>
  }

  export type UsuarioUpdateOneRequiredWithoutAtendimentoNestedInput = {
    create?: XOR<UsuarioCreateWithoutAtendimentoInput, UsuarioUncheckedCreateWithoutAtendimentoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtendimentoInput
    upsert?: UsuarioUpsertWithoutAtendimentoInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAtendimentoInput, UsuarioUpdateWithoutAtendimentoInput>, UsuarioUncheckedUpdateWithoutAtendimentoInput>
  }

  export type EleitorUpdateOneRequiredWithoutAtendimentoNestedInput = {
    create?: XOR<EleitorCreateWithoutAtendimentoInput, EleitorUncheckedCreateWithoutAtendimentoInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutAtendimentoInput
    upsert?: EleitorUpsertWithoutAtendimentoInput
    connect?: EleitorWhereUniqueInput
    update?: XOR<XOR<EleitorUpdateToOneWithWhereWithoutAtendimentoInput, EleitorUpdateWithoutAtendimentoInput>, EleitorUncheckedUpdateWithoutAtendimentoInput>
  }

  export type tipoAtendimentoUpdateOneWithoutAtendimentoNestedInput = {
    create?: XOR<tipoAtendimentoCreateWithoutAtendimentoInput, tipoAtendimentoUncheckedCreateWithoutAtendimentoInput>
    connectOrCreate?: tipoAtendimentoCreateOrConnectWithoutAtendimentoInput
    upsert?: tipoAtendimentoUpsertWithoutAtendimentoInput
    disconnect?: tipoAtendimentoWhereInput | boolean
    delete?: tipoAtendimentoWhereInput | boolean
    connect?: tipoAtendimentoWhereUniqueInput
    update?: XOR<XOR<tipoAtendimentoUpdateToOneWithWhereWithoutAtendimentoInput, tipoAtendimentoUpdateWithoutAtendimentoInput>, tipoAtendimentoUncheckedUpdateWithoutAtendimentoInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EleitorCreateNestedOneWithoutIndicacoesInput = {
    create?: XOR<EleitorCreateWithoutIndicacoesInput, EleitorUncheckedCreateWithoutIndicacoesInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutIndicacoesInput
    connect?: EleitorWhereUniqueInput
  }

  export type LocalVotacaoCreateNestedOneWithoutEleitorInput = {
    create?: XOR<LocalVotacaoCreateWithoutEleitorInput, LocalVotacaoUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutEleitorInput
    connect?: LocalVotacaoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEleitorInput = {
    create?: XOR<UsuarioCreateWithoutEleitorInput, UsuarioUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEleitorInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CandidatoCreateNestedOneWithoutEleitorInput = {
    create?: XOR<CandidatoCreateWithoutEleitorInput, CandidatoUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutEleitorInput
    connect?: CandidatoWhereUniqueInput
  }

  export type classificacaoCreateNestedOneWithoutEleitorInput = {
    create?: XOR<classificacaoCreateWithoutEleitorInput, classificacaoUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: classificacaoCreateOrConnectWithoutEleitorInput
    connect?: classificacaoWhereUniqueInput
  }

  export type coligacaoCreateNestedOneWithoutEleitoresInput = {
    create?: XOR<coligacaoCreateWithoutEleitoresInput, coligacaoUncheckedCreateWithoutEleitoresInput>
    connectOrCreate?: coligacaoCreateOrConnectWithoutEleitoresInput
    connect?: coligacaoWhereUniqueInput
  }

  export type EleitorCreateNestedManyWithoutFormiguinhaInput = {
    create?: XOR<EleitorCreateWithoutFormiguinhaInput, EleitorUncheckedCreateWithoutFormiguinhaInput> | EleitorCreateWithoutFormiguinhaInput[] | EleitorUncheckedCreateWithoutFormiguinhaInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutFormiguinhaInput | EleitorCreateOrConnectWithoutFormiguinhaInput[]
    createMany?: EleitorCreateManyFormiguinhaInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type contatoEleitorCreateNestedManyWithoutEleitorInput = {
    create?: XOR<contatoEleitorCreateWithoutEleitorInput, contatoEleitorUncheckedCreateWithoutEleitorInput> | contatoEleitorCreateWithoutEleitorInput[] | contatoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: contatoEleitorCreateOrConnectWithoutEleitorInput | contatoEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: contatoEleitorCreateManyEleitorInputEnvelope
    connect?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
  }

  export type MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput = {
    create?: XOR<MidiasSociaisEleitorCreateWithoutEleitorInput, MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput> | MidiasSociaisEleitorCreateWithoutEleitorInput[] | MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput | MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: MidiasSociaisEleitorCreateManyEleitorInputEnvelope
    connect?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
  }

  export type DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput = {
    create?: XOR<DadosPessoaisEleitorCreateWithoutEleitorInput, DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput> | DadosPessoaisEleitorCreateWithoutEleitorInput[] | DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput | DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: DadosPessoaisEleitorCreateManyEleitorInputEnvelope
    connect?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
  }

  export type EnderecoEleitorCreateNestedManyWithoutEleitorInput = {
    create?: XOR<EnderecoEleitorCreateWithoutEleitorInput, EnderecoEleitorUncheckedCreateWithoutEleitorInput> | EnderecoEleitorCreateWithoutEleitorInput[] | EnderecoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: EnderecoEleitorCreateOrConnectWithoutEleitorInput | EnderecoEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: EnderecoEleitorCreateManyEleitorInputEnvelope
    connect?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
  }

  export type atendimentoCreateNestedManyWithoutEleitorInput = {
    create?: XOR<atendimentoCreateWithoutEleitorInput, atendimentoUncheckedCreateWithoutEleitorInput> | atendimentoCreateWithoutEleitorInput[] | atendimentoUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutEleitorInput | atendimentoCreateOrConnectWithoutEleitorInput[]
    createMany?: atendimentoCreateManyEleitorInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput = {
    create?: XOR<EleitorCreateWithoutFormiguinhaInput, EleitorUncheckedCreateWithoutFormiguinhaInput> | EleitorCreateWithoutFormiguinhaInput[] | EleitorUncheckedCreateWithoutFormiguinhaInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutFormiguinhaInput | EleitorCreateOrConnectWithoutFormiguinhaInput[]
    createMany?: EleitorCreateManyFormiguinhaInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput = {
    create?: XOR<contatoEleitorCreateWithoutEleitorInput, contatoEleitorUncheckedCreateWithoutEleitorInput> | contatoEleitorCreateWithoutEleitorInput[] | contatoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: contatoEleitorCreateOrConnectWithoutEleitorInput | contatoEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: contatoEleitorCreateManyEleitorInputEnvelope
    connect?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
  }

  export type MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput = {
    create?: XOR<MidiasSociaisEleitorCreateWithoutEleitorInput, MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput> | MidiasSociaisEleitorCreateWithoutEleitorInput[] | MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput | MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: MidiasSociaisEleitorCreateManyEleitorInputEnvelope
    connect?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
  }

  export type DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput = {
    create?: XOR<DadosPessoaisEleitorCreateWithoutEleitorInput, DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput> | DadosPessoaisEleitorCreateWithoutEleitorInput[] | DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput | DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: DadosPessoaisEleitorCreateManyEleitorInputEnvelope
    connect?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
  }

  export type EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput = {
    create?: XOR<EnderecoEleitorCreateWithoutEleitorInput, EnderecoEleitorUncheckedCreateWithoutEleitorInput> | EnderecoEleitorCreateWithoutEleitorInput[] | EnderecoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: EnderecoEleitorCreateOrConnectWithoutEleitorInput | EnderecoEleitorCreateOrConnectWithoutEleitorInput[]
    createMany?: EnderecoEleitorCreateManyEleitorInputEnvelope
    connect?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
  }

  export type atendimentoUncheckedCreateNestedManyWithoutEleitorInput = {
    create?: XOR<atendimentoCreateWithoutEleitorInput, atendimentoUncheckedCreateWithoutEleitorInput> | atendimentoCreateWithoutEleitorInput[] | atendimentoUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutEleitorInput | atendimentoCreateOrConnectWithoutEleitorInput[]
    createMany?: atendimentoCreateManyEleitorInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type EleitorUpdateOneWithoutIndicacoesNestedInput = {
    create?: XOR<EleitorCreateWithoutIndicacoesInput, EleitorUncheckedCreateWithoutIndicacoesInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutIndicacoesInput
    upsert?: EleitorUpsertWithoutIndicacoesInput
    disconnect?: EleitorWhereInput | boolean
    delete?: EleitorWhereInput | boolean
    connect?: EleitorWhereUniqueInput
    update?: XOR<XOR<EleitorUpdateToOneWithWhereWithoutIndicacoesInput, EleitorUpdateWithoutIndicacoesInput>, EleitorUncheckedUpdateWithoutIndicacoesInput>
  }

  export type LocalVotacaoUpdateOneWithoutEleitorNestedInput = {
    create?: XOR<LocalVotacaoCreateWithoutEleitorInput, LocalVotacaoUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutEleitorInput
    upsert?: LocalVotacaoUpsertWithoutEleitorInput
    disconnect?: LocalVotacaoWhereInput | boolean
    delete?: LocalVotacaoWhereInput | boolean
    connect?: LocalVotacaoWhereUniqueInput
    update?: XOR<XOR<LocalVotacaoUpdateToOneWithWhereWithoutEleitorInput, LocalVotacaoUpdateWithoutEleitorInput>, LocalVotacaoUncheckedUpdateWithoutEleitorInput>
  }

  export type UsuarioUpdateOneWithoutEleitorNestedInput = {
    create?: XOR<UsuarioCreateWithoutEleitorInput, UsuarioUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEleitorInput
    upsert?: UsuarioUpsertWithoutEleitorInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEleitorInput, UsuarioUpdateWithoutEleitorInput>, UsuarioUncheckedUpdateWithoutEleitorInput>
  }

  export type CandidatoUpdateOneRequiredWithoutEleitorNestedInput = {
    create?: XOR<CandidatoCreateWithoutEleitorInput, CandidatoUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutEleitorInput
    upsert?: CandidatoUpsertWithoutEleitorInput
    connect?: CandidatoWhereUniqueInput
    update?: XOR<XOR<CandidatoUpdateToOneWithWhereWithoutEleitorInput, CandidatoUpdateWithoutEleitorInput>, CandidatoUncheckedUpdateWithoutEleitorInput>
  }

  export type classificacaoUpdateOneWithoutEleitorNestedInput = {
    create?: XOR<classificacaoCreateWithoutEleitorInput, classificacaoUncheckedCreateWithoutEleitorInput>
    connectOrCreate?: classificacaoCreateOrConnectWithoutEleitorInput
    upsert?: classificacaoUpsertWithoutEleitorInput
    disconnect?: classificacaoWhereInput | boolean
    delete?: classificacaoWhereInput | boolean
    connect?: classificacaoWhereUniqueInput
    update?: XOR<XOR<classificacaoUpdateToOneWithWhereWithoutEleitorInput, classificacaoUpdateWithoutEleitorInput>, classificacaoUncheckedUpdateWithoutEleitorInput>
  }

  export type coligacaoUpdateOneWithoutEleitoresNestedInput = {
    create?: XOR<coligacaoCreateWithoutEleitoresInput, coligacaoUncheckedCreateWithoutEleitoresInput>
    connectOrCreate?: coligacaoCreateOrConnectWithoutEleitoresInput
    upsert?: coligacaoUpsertWithoutEleitoresInput
    disconnect?: coligacaoWhereInput | boolean
    delete?: coligacaoWhereInput | boolean
    connect?: coligacaoWhereUniqueInput
    update?: XOR<XOR<coligacaoUpdateToOneWithWhereWithoutEleitoresInput, coligacaoUpdateWithoutEleitoresInput>, coligacaoUncheckedUpdateWithoutEleitoresInput>
  }

  export type EleitorUpdateManyWithoutFormiguinhaNestedInput = {
    create?: XOR<EleitorCreateWithoutFormiguinhaInput, EleitorUncheckedCreateWithoutFormiguinhaInput> | EleitorCreateWithoutFormiguinhaInput[] | EleitorUncheckedCreateWithoutFormiguinhaInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutFormiguinhaInput | EleitorCreateOrConnectWithoutFormiguinhaInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutFormiguinhaInput | EleitorUpsertWithWhereUniqueWithoutFormiguinhaInput[]
    createMany?: EleitorCreateManyFormiguinhaInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutFormiguinhaInput | EleitorUpdateWithWhereUniqueWithoutFormiguinhaInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutFormiguinhaInput | EleitorUpdateManyWithWhereWithoutFormiguinhaInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type contatoEleitorUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<contatoEleitorCreateWithoutEleitorInput, contatoEleitorUncheckedCreateWithoutEleitorInput> | contatoEleitorCreateWithoutEleitorInput[] | contatoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: contatoEleitorCreateOrConnectWithoutEleitorInput | contatoEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: contatoEleitorUpsertWithWhereUniqueWithoutEleitorInput | contatoEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: contatoEleitorCreateManyEleitorInputEnvelope
    set?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    disconnect?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    delete?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    connect?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    update?: contatoEleitorUpdateWithWhereUniqueWithoutEleitorInput | contatoEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: contatoEleitorUpdateManyWithWhereWithoutEleitorInput | contatoEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: contatoEleitorScalarWhereInput | contatoEleitorScalarWhereInput[]
  }

  export type MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<MidiasSociaisEleitorCreateWithoutEleitorInput, MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput> | MidiasSociaisEleitorCreateWithoutEleitorInput[] | MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput | MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: MidiasSociaisEleitorUpsertWithWhereUniqueWithoutEleitorInput | MidiasSociaisEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: MidiasSociaisEleitorCreateManyEleitorInputEnvelope
    set?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    disconnect?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    delete?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    connect?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    update?: MidiasSociaisEleitorUpdateWithWhereUniqueWithoutEleitorInput | MidiasSociaisEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: MidiasSociaisEleitorUpdateManyWithWhereWithoutEleitorInput | MidiasSociaisEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: MidiasSociaisEleitorScalarWhereInput | MidiasSociaisEleitorScalarWhereInput[]
  }

  export type DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<DadosPessoaisEleitorCreateWithoutEleitorInput, DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput> | DadosPessoaisEleitorCreateWithoutEleitorInput[] | DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput | DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: DadosPessoaisEleitorUpsertWithWhereUniqueWithoutEleitorInput | DadosPessoaisEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: DadosPessoaisEleitorCreateManyEleitorInputEnvelope
    set?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    disconnect?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    delete?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    connect?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    update?: DadosPessoaisEleitorUpdateWithWhereUniqueWithoutEleitorInput | DadosPessoaisEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: DadosPessoaisEleitorUpdateManyWithWhereWithoutEleitorInput | DadosPessoaisEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: DadosPessoaisEleitorScalarWhereInput | DadosPessoaisEleitorScalarWhereInput[]
  }

  export type EnderecoEleitorUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<EnderecoEleitorCreateWithoutEleitorInput, EnderecoEleitorUncheckedCreateWithoutEleitorInput> | EnderecoEleitorCreateWithoutEleitorInput[] | EnderecoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: EnderecoEleitorCreateOrConnectWithoutEleitorInput | EnderecoEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: EnderecoEleitorUpsertWithWhereUniqueWithoutEleitorInput | EnderecoEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: EnderecoEleitorCreateManyEleitorInputEnvelope
    set?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    disconnect?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    delete?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    connect?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    update?: EnderecoEleitorUpdateWithWhereUniqueWithoutEleitorInput | EnderecoEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: EnderecoEleitorUpdateManyWithWhereWithoutEleitorInput | EnderecoEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: EnderecoEleitorScalarWhereInput | EnderecoEleitorScalarWhereInput[]
  }

  export type atendimentoUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<atendimentoCreateWithoutEleitorInput, atendimentoUncheckedCreateWithoutEleitorInput> | atendimentoCreateWithoutEleitorInput[] | atendimentoUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutEleitorInput | atendimentoCreateOrConnectWithoutEleitorInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutEleitorInput | atendimentoUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: atendimentoCreateManyEleitorInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutEleitorInput | atendimentoUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutEleitorInput | atendimentoUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput = {
    create?: XOR<EleitorCreateWithoutFormiguinhaInput, EleitorUncheckedCreateWithoutFormiguinhaInput> | EleitorCreateWithoutFormiguinhaInput[] | EleitorUncheckedCreateWithoutFormiguinhaInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutFormiguinhaInput | EleitorCreateOrConnectWithoutFormiguinhaInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutFormiguinhaInput | EleitorUpsertWithWhereUniqueWithoutFormiguinhaInput[]
    createMany?: EleitorCreateManyFormiguinhaInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutFormiguinhaInput | EleitorUpdateWithWhereUniqueWithoutFormiguinhaInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutFormiguinhaInput | EleitorUpdateManyWithWhereWithoutFormiguinhaInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<contatoEleitorCreateWithoutEleitorInput, contatoEleitorUncheckedCreateWithoutEleitorInput> | contatoEleitorCreateWithoutEleitorInput[] | contatoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: contatoEleitorCreateOrConnectWithoutEleitorInput | contatoEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: contatoEleitorUpsertWithWhereUniqueWithoutEleitorInput | contatoEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: contatoEleitorCreateManyEleitorInputEnvelope
    set?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    disconnect?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    delete?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    connect?: contatoEleitorWhereUniqueInput | contatoEleitorWhereUniqueInput[]
    update?: contatoEleitorUpdateWithWhereUniqueWithoutEleitorInput | contatoEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: contatoEleitorUpdateManyWithWhereWithoutEleitorInput | contatoEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: contatoEleitorScalarWhereInput | contatoEleitorScalarWhereInput[]
  }

  export type MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<MidiasSociaisEleitorCreateWithoutEleitorInput, MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput> | MidiasSociaisEleitorCreateWithoutEleitorInput[] | MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput | MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: MidiasSociaisEleitorUpsertWithWhereUniqueWithoutEleitorInput | MidiasSociaisEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: MidiasSociaisEleitorCreateManyEleitorInputEnvelope
    set?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    disconnect?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    delete?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    connect?: MidiasSociaisEleitorWhereUniqueInput | MidiasSociaisEleitorWhereUniqueInput[]
    update?: MidiasSociaisEleitorUpdateWithWhereUniqueWithoutEleitorInput | MidiasSociaisEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: MidiasSociaisEleitorUpdateManyWithWhereWithoutEleitorInput | MidiasSociaisEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: MidiasSociaisEleitorScalarWhereInput | MidiasSociaisEleitorScalarWhereInput[]
  }

  export type DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<DadosPessoaisEleitorCreateWithoutEleitorInput, DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput> | DadosPessoaisEleitorCreateWithoutEleitorInput[] | DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput | DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: DadosPessoaisEleitorUpsertWithWhereUniqueWithoutEleitorInput | DadosPessoaisEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: DadosPessoaisEleitorCreateManyEleitorInputEnvelope
    set?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    disconnect?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    delete?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    connect?: DadosPessoaisEleitorWhereUniqueInput | DadosPessoaisEleitorWhereUniqueInput[]
    update?: DadosPessoaisEleitorUpdateWithWhereUniqueWithoutEleitorInput | DadosPessoaisEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: DadosPessoaisEleitorUpdateManyWithWhereWithoutEleitorInput | DadosPessoaisEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: DadosPessoaisEleitorScalarWhereInput | DadosPessoaisEleitorScalarWhereInput[]
  }

  export type EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<EnderecoEleitorCreateWithoutEleitorInput, EnderecoEleitorUncheckedCreateWithoutEleitorInput> | EnderecoEleitorCreateWithoutEleitorInput[] | EnderecoEleitorUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: EnderecoEleitorCreateOrConnectWithoutEleitorInput | EnderecoEleitorCreateOrConnectWithoutEleitorInput[]
    upsert?: EnderecoEleitorUpsertWithWhereUniqueWithoutEleitorInput | EnderecoEleitorUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: EnderecoEleitorCreateManyEleitorInputEnvelope
    set?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    disconnect?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    delete?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    connect?: EnderecoEleitorWhereUniqueInput | EnderecoEleitorWhereUniqueInput[]
    update?: EnderecoEleitorUpdateWithWhereUniqueWithoutEleitorInput | EnderecoEleitorUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: EnderecoEleitorUpdateManyWithWhereWithoutEleitorInput | EnderecoEleitorUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: EnderecoEleitorScalarWhereInput | EnderecoEleitorScalarWhereInput[]
  }

  export type atendimentoUncheckedUpdateManyWithoutEleitorNestedInput = {
    create?: XOR<atendimentoCreateWithoutEleitorInput, atendimentoUncheckedCreateWithoutEleitorInput> | atendimentoCreateWithoutEleitorInput[] | atendimentoUncheckedCreateWithoutEleitorInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutEleitorInput | atendimentoCreateOrConnectWithoutEleitorInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutEleitorInput | atendimentoUpsertWithWhereUniqueWithoutEleitorInput[]
    createMany?: atendimentoCreateManyEleitorInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutEleitorInput | atendimentoUpdateWithWhereUniqueWithoutEleitorInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutEleitorInput | atendimentoUpdateManyWithWhereWithoutEleitorInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type EleitorCreateNestedOneWithoutContatoEleitorInput = {
    create?: XOR<EleitorCreateWithoutContatoEleitorInput, EleitorUncheckedCreateWithoutContatoEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutContatoEleitorInput
    connect?: EleitorWhereUniqueInput
  }

  export type EleitorUpdateOneRequiredWithoutContatoEleitorNestedInput = {
    create?: XOR<EleitorCreateWithoutContatoEleitorInput, EleitorUncheckedCreateWithoutContatoEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutContatoEleitorInput
    upsert?: EleitorUpsertWithoutContatoEleitorInput
    connect?: EleitorWhereUniqueInput
    update?: XOR<XOR<EleitorUpdateToOneWithWhereWithoutContatoEleitorInput, EleitorUpdateWithoutContatoEleitorInput>, EleitorUncheckedUpdateWithoutContatoEleitorInput>
  }

  export type EleitorCreateNestedOneWithoutMidiasSociaisEleitorInput = {
    create?: XOR<EleitorCreateWithoutMidiasSociaisEleitorInput, EleitorUncheckedCreateWithoutMidiasSociaisEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutMidiasSociaisEleitorInput
    connect?: EleitorWhereUniqueInput
  }

  export type EleitorUpdateOneRequiredWithoutMidiasSociaisEleitorNestedInput = {
    create?: XOR<EleitorCreateWithoutMidiasSociaisEleitorInput, EleitorUncheckedCreateWithoutMidiasSociaisEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutMidiasSociaisEleitorInput
    upsert?: EleitorUpsertWithoutMidiasSociaisEleitorInput
    connect?: EleitorWhereUniqueInput
    update?: XOR<XOR<EleitorUpdateToOneWithWhereWithoutMidiasSociaisEleitorInput, EleitorUpdateWithoutMidiasSociaisEleitorInput>, EleitorUncheckedUpdateWithoutMidiasSociaisEleitorInput>
  }

  export type EleitorCreateNestedOneWithoutEnderecoEleitorInput = {
    create?: XOR<EleitorCreateWithoutEnderecoEleitorInput, EleitorUncheckedCreateWithoutEnderecoEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutEnderecoEleitorInput
    connect?: EleitorWhereUniqueInput
  }

  export type EleitorUpdateOneWithoutEnderecoEleitorNestedInput = {
    create?: XOR<EleitorCreateWithoutEnderecoEleitorInput, EleitorUncheckedCreateWithoutEnderecoEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutEnderecoEleitorInput
    upsert?: EleitorUpsertWithoutEnderecoEleitorInput
    disconnect?: EleitorWhereInput | boolean
    delete?: EleitorWhereInput | boolean
    connect?: EleitorWhereUniqueInput
    update?: XOR<XOR<EleitorUpdateToOneWithWhereWithoutEnderecoEleitorInput, EleitorUpdateWithoutEnderecoEleitorInput>, EleitorUncheckedUpdateWithoutEnderecoEleitorInput>
  }

  export type EleitorCreateNestedOneWithoutDadosPessoaisEleitorInput = {
    create?: XOR<EleitorCreateWithoutDadosPessoaisEleitorInput, EleitorUncheckedCreateWithoutDadosPessoaisEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutDadosPessoaisEleitorInput
    connect?: EleitorWhereUniqueInput
  }

  export type EleitorUpdateOneRequiredWithoutDadosPessoaisEleitorNestedInput = {
    create?: XOR<EleitorCreateWithoutDadosPessoaisEleitorInput, EleitorUncheckedCreateWithoutDadosPessoaisEleitorInput>
    connectOrCreate?: EleitorCreateOrConnectWithoutDadosPessoaisEleitorInput
    upsert?: EleitorUpsertWithoutDadosPessoaisEleitorInput
    connect?: EleitorWhereUniqueInput
    update?: XOR<XOR<EleitorUpdateToOneWithWhereWithoutDadosPessoaisEleitorInput, EleitorUpdateWithoutDadosPessoaisEleitorInput>, EleitorUncheckedUpdateWithoutDadosPessoaisEleitorInput>
  }

  export type CandidatoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput = {
    create?: XOR<CandidatoCreateWithoutLocaldevotacao_has_candidatoInput, CandidatoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutLocaldevotacao_has_candidatoInput
    connect?: CandidatoWhereUniqueInput
  }

  export type LocalVotacaoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput = {
    create?: XOR<LocalVotacaoCreateWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutLocaldevotacao_has_candidatoInput
    connect?: LocalVotacaoWhereUniqueInput
  }

  export type ExpectativaCreateNestedManyWithoutLocalvotacaoInput = {
    create?: XOR<ExpectativaCreateWithoutLocalvotacaoInput, ExpectativaUncheckedCreateWithoutLocalvotacaoInput> | ExpectativaCreateWithoutLocalvotacaoInput[] | ExpectativaUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: ExpectativaCreateOrConnectWithoutLocalvotacaoInput | ExpectativaCreateOrConnectWithoutLocalvotacaoInput[]
    createMany?: ExpectativaCreateManyLocalvotacaoInputEnvelope
    connect?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
  }

  export type ExpectativaUncheckedCreateNestedManyWithoutLocalvotacaoInput = {
    create?: XOR<ExpectativaCreateWithoutLocalvotacaoInput, ExpectativaUncheckedCreateWithoutLocalvotacaoInput> | ExpectativaCreateWithoutLocalvotacaoInput[] | ExpectativaUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: ExpectativaCreateOrConnectWithoutLocalvotacaoInput | ExpectativaCreateOrConnectWithoutLocalvotacaoInput[]
    createMany?: ExpectativaCreateManyLocalvotacaoInputEnvelope
    connect?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
  }

  export type CandidatoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput = {
    create?: XOR<CandidatoCreateWithoutLocaldevotacao_has_candidatoInput, CandidatoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutLocaldevotacao_has_candidatoInput
    upsert?: CandidatoUpsertWithoutLocaldevotacao_has_candidatoInput
    connect?: CandidatoWhereUniqueInput
    update?: XOR<XOR<CandidatoUpdateToOneWithWhereWithoutLocaldevotacao_has_candidatoInput, CandidatoUpdateWithoutLocaldevotacao_has_candidatoInput>, CandidatoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput>
  }

  export type LocalVotacaoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput = {
    create?: XOR<LocalVotacaoCreateWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutLocaldevotacao_has_candidatoInput
    upsert?: LocalVotacaoUpsertWithoutLocaldevotacao_has_candidatoInput
    connect?: LocalVotacaoWhereUniqueInput
    update?: XOR<XOR<LocalVotacaoUpdateToOneWithWhereWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUpdateWithoutLocaldevotacao_has_candidatoInput>, LocalVotacaoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput>
  }

  export type ExpectativaUpdateManyWithoutLocalvotacaoNestedInput = {
    create?: XOR<ExpectativaCreateWithoutLocalvotacaoInput, ExpectativaUncheckedCreateWithoutLocalvotacaoInput> | ExpectativaCreateWithoutLocalvotacaoInput[] | ExpectativaUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: ExpectativaCreateOrConnectWithoutLocalvotacaoInput | ExpectativaCreateOrConnectWithoutLocalvotacaoInput[]
    upsert?: ExpectativaUpsertWithWhereUniqueWithoutLocalvotacaoInput | ExpectativaUpsertWithWhereUniqueWithoutLocalvotacaoInput[]
    createMany?: ExpectativaCreateManyLocalvotacaoInputEnvelope
    set?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    disconnect?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    delete?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    connect?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    update?: ExpectativaUpdateWithWhereUniqueWithoutLocalvotacaoInput | ExpectativaUpdateWithWhereUniqueWithoutLocalvotacaoInput[]
    updateMany?: ExpectativaUpdateManyWithWhereWithoutLocalvotacaoInput | ExpectativaUpdateManyWithWhereWithoutLocalvotacaoInput[]
    deleteMany?: ExpectativaScalarWhereInput | ExpectativaScalarWhereInput[]
  }

  export type ExpectativaUncheckedUpdateManyWithoutLocalvotacaoNestedInput = {
    create?: XOR<ExpectativaCreateWithoutLocalvotacaoInput, ExpectativaUncheckedCreateWithoutLocalvotacaoInput> | ExpectativaCreateWithoutLocalvotacaoInput[] | ExpectativaUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: ExpectativaCreateOrConnectWithoutLocalvotacaoInput | ExpectativaCreateOrConnectWithoutLocalvotacaoInput[]
    upsert?: ExpectativaUpsertWithWhereUniqueWithoutLocalvotacaoInput | ExpectativaUpsertWithWhereUniqueWithoutLocalvotacaoInput[]
    createMany?: ExpectativaCreateManyLocalvotacaoInputEnvelope
    set?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    disconnect?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    delete?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    connect?: ExpectativaWhereUniqueInput | ExpectativaWhereUniqueInput[]
    update?: ExpectativaUpdateWithWhereUniqueWithoutLocalvotacaoInput | ExpectativaUpdateWithWhereUniqueWithoutLocalvotacaoInput[]
    updateMany?: ExpectativaUpdateManyWithWhereWithoutLocalvotacaoInput | ExpectativaUpdateManyWithWhereWithoutLocalvotacaoInput[]
    deleteMany?: ExpectativaScalarWhereInput | ExpectativaScalarWhereInput[]
  }

  export type PlanejamentoLocalVotacaoCreateNestedOneWithoutExpectativaInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutExpectativaInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutExpectativaInput>
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutExpectativaInput
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput
  }

  export type PlanejamentoLocalVotacaoUpdateOneRequiredWithoutExpectativaNestedInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutExpectativaInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutExpectativaInput>
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutExpectativaInput
    upsert?: PlanejamentoLocalVotacaoUpsertWithoutExpectativaInput
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput
    update?: XOR<XOR<PlanejamentoLocalVotacaoUpdateToOneWithWhereWithoutExpectativaInput, PlanejamentoLocalVotacaoUpdateWithoutExpectativaInput>, PlanejamentoLocalVotacaoUncheckedUpdateWithoutExpectativaInput>
  }

  export type EnderecoLocalVotacaoCreateNestedManyWithoutLocalVotacaoInput = {
    create?: XOR<EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput> | EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput[] | EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput | EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput[]
    createMany?: EnderecoLocalVotacaoCreateManyLocalVotacaoInputEnvelope
    connect?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
  }

  export type SessoesEleitoraisCreateNestedManyWithoutLocalVotacaoInput = {
    create?: XOR<SessoesEleitoraisCreateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput> | SessoesEleitoraisCreateWithoutLocalVotacaoInput[] | SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput | SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput[]
    createMany?: SessoesEleitoraisCreateManyLocalVotacaoInputEnvelope
    connect?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
  }

  export type EleitorCreateNestedManyWithoutSessaoeleitoralInput = {
    create?: XOR<EleitorCreateWithoutSessaoeleitoralInput, EleitorUncheckedCreateWithoutSessaoeleitoralInput> | EleitorCreateWithoutSessaoeleitoralInput[] | EleitorUncheckedCreateWithoutSessaoeleitoralInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutSessaoeleitoralInput | EleitorCreateOrConnectWithoutSessaoeleitoralInput[]
    createMany?: EleitorCreateManySessaoeleitoralInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type PlanejamentoLocalVotacaoCreateNestedManyWithoutLocalInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput> | PlanejamentoLocalVotacaoCreateWithoutLocalInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyLocalInputEnvelope
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutLocalvontacaoInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInputEnvelope
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
  }

  export type EnderecoLocalVotacaoUncheckedCreateNestedManyWithoutLocalVotacaoInput = {
    create?: XOR<EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput> | EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput[] | EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput | EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput[]
    createMany?: EnderecoLocalVotacaoCreateManyLocalVotacaoInputEnvelope
    connect?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
  }

  export type SessoesEleitoraisUncheckedCreateNestedManyWithoutLocalVotacaoInput = {
    create?: XOR<SessoesEleitoraisCreateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput> | SessoesEleitoraisCreateWithoutLocalVotacaoInput[] | SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput | SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput[]
    createMany?: SessoesEleitoraisCreateManyLocalVotacaoInputEnvelope
    connect?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
  }

  export type EleitorUncheckedCreateNestedManyWithoutSessaoeleitoralInput = {
    create?: XOR<EleitorCreateWithoutSessaoeleitoralInput, EleitorUncheckedCreateWithoutSessaoeleitoralInput> | EleitorCreateWithoutSessaoeleitoralInput[] | EleitorUncheckedCreateWithoutSessaoeleitoralInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutSessaoeleitoralInput | EleitorCreateOrConnectWithoutSessaoeleitoralInput[]
    createMany?: EleitorCreateManySessaoeleitoralInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutLocalInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput> | PlanejamentoLocalVotacaoCreateWithoutLocalInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyLocalInputEnvelope
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutLocalvontacaoInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInputEnvelope
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
  }

  export type EnderecoLocalVotacaoUpdateManyWithoutLocalVotacaoNestedInput = {
    create?: XOR<EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput> | EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput[] | EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput | EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput[]
    upsert?: EnderecoLocalVotacaoUpsertWithWhereUniqueWithoutLocalVotacaoInput | EnderecoLocalVotacaoUpsertWithWhereUniqueWithoutLocalVotacaoInput[]
    createMany?: EnderecoLocalVotacaoCreateManyLocalVotacaoInputEnvelope
    set?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    disconnect?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    delete?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    connect?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    update?: EnderecoLocalVotacaoUpdateWithWhereUniqueWithoutLocalVotacaoInput | EnderecoLocalVotacaoUpdateWithWhereUniqueWithoutLocalVotacaoInput[]
    updateMany?: EnderecoLocalVotacaoUpdateManyWithWhereWithoutLocalVotacaoInput | EnderecoLocalVotacaoUpdateManyWithWhereWithoutLocalVotacaoInput[]
    deleteMany?: EnderecoLocalVotacaoScalarWhereInput | EnderecoLocalVotacaoScalarWhereInput[]
  }

  export type SessoesEleitoraisUpdateManyWithoutLocalVotacaoNestedInput = {
    create?: XOR<SessoesEleitoraisCreateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput> | SessoesEleitoraisCreateWithoutLocalVotacaoInput[] | SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput | SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput[]
    upsert?: SessoesEleitoraisUpsertWithWhereUniqueWithoutLocalVotacaoInput | SessoesEleitoraisUpsertWithWhereUniqueWithoutLocalVotacaoInput[]
    createMany?: SessoesEleitoraisCreateManyLocalVotacaoInputEnvelope
    set?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    disconnect?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    delete?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    connect?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    update?: SessoesEleitoraisUpdateWithWhereUniqueWithoutLocalVotacaoInput | SessoesEleitoraisUpdateWithWhereUniqueWithoutLocalVotacaoInput[]
    updateMany?: SessoesEleitoraisUpdateManyWithWhereWithoutLocalVotacaoInput | SessoesEleitoraisUpdateManyWithWhereWithoutLocalVotacaoInput[]
    deleteMany?: SessoesEleitoraisScalarWhereInput | SessoesEleitoraisScalarWhereInput[]
  }

  export type EleitorUpdateManyWithoutSessaoeleitoralNestedInput = {
    create?: XOR<EleitorCreateWithoutSessaoeleitoralInput, EleitorUncheckedCreateWithoutSessaoeleitoralInput> | EleitorCreateWithoutSessaoeleitoralInput[] | EleitorUncheckedCreateWithoutSessaoeleitoralInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutSessaoeleitoralInput | EleitorCreateOrConnectWithoutSessaoeleitoralInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutSessaoeleitoralInput | EleitorUpsertWithWhereUniqueWithoutSessaoeleitoralInput[]
    createMany?: EleitorCreateManySessaoeleitoralInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutSessaoeleitoralInput | EleitorUpdateWithWhereUniqueWithoutSessaoeleitoralInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutSessaoeleitoralInput | EleitorUpdateManyWithWhereWithoutSessaoeleitoralInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type PlanejamentoLocalVotacaoUpdateManyWithoutLocalNestedInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput> | PlanejamentoLocalVotacaoCreateWithoutLocalInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput[]
    upsert?: PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutLocalInput | PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutLocalInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyLocalInputEnvelope
    set?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    disconnect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    delete?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    update?: PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutLocalInput | PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutLocalInput[]
    updateMany?: PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutLocalInput | PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutLocalInput[]
    deleteMany?: PlanejamentoLocalVotacaoScalarWhereInput | PlanejamentoLocalVotacaoScalarWhereInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateManyWithoutLocalvontacaoNestedInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput[]
    upsert?: LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutLocalvontacaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInputEnvelope
    set?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    disconnect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    delete?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    update?: LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutLocalvontacaoInput[]
    updateMany?: LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutLocalvontacaoInput[]
    deleteMany?: LocalVotacao_has_candidatoEleicaoScalarWhereInput | LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
  }

  export type EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoNestedInput = {
    create?: XOR<EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput> | EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput[] | EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput | EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput[]
    upsert?: EnderecoLocalVotacaoUpsertWithWhereUniqueWithoutLocalVotacaoInput | EnderecoLocalVotacaoUpsertWithWhereUniqueWithoutLocalVotacaoInput[]
    createMany?: EnderecoLocalVotacaoCreateManyLocalVotacaoInputEnvelope
    set?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    disconnect?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    delete?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    connect?: EnderecoLocalVotacaoWhereUniqueInput | EnderecoLocalVotacaoWhereUniqueInput[]
    update?: EnderecoLocalVotacaoUpdateWithWhereUniqueWithoutLocalVotacaoInput | EnderecoLocalVotacaoUpdateWithWhereUniqueWithoutLocalVotacaoInput[]
    updateMany?: EnderecoLocalVotacaoUpdateManyWithWhereWithoutLocalVotacaoInput | EnderecoLocalVotacaoUpdateManyWithWhereWithoutLocalVotacaoInput[]
    deleteMany?: EnderecoLocalVotacaoScalarWhereInput | EnderecoLocalVotacaoScalarWhereInput[]
  }

  export type SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoNestedInput = {
    create?: XOR<SessoesEleitoraisCreateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput> | SessoesEleitoraisCreateWithoutLocalVotacaoInput[] | SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput[]
    connectOrCreate?: SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput | SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput[]
    upsert?: SessoesEleitoraisUpsertWithWhereUniqueWithoutLocalVotacaoInput | SessoesEleitoraisUpsertWithWhereUniqueWithoutLocalVotacaoInput[]
    createMany?: SessoesEleitoraisCreateManyLocalVotacaoInputEnvelope
    set?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    disconnect?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    delete?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    connect?: SessoesEleitoraisWhereUniqueInput | SessoesEleitoraisWhereUniqueInput[]
    update?: SessoesEleitoraisUpdateWithWhereUniqueWithoutLocalVotacaoInput | SessoesEleitoraisUpdateWithWhereUniqueWithoutLocalVotacaoInput[]
    updateMany?: SessoesEleitoraisUpdateManyWithWhereWithoutLocalVotacaoInput | SessoesEleitoraisUpdateManyWithWhereWithoutLocalVotacaoInput[]
    deleteMany?: SessoesEleitoraisScalarWhereInput | SessoesEleitoraisScalarWhereInput[]
  }

  export type EleitorUncheckedUpdateManyWithoutSessaoeleitoralNestedInput = {
    create?: XOR<EleitorCreateWithoutSessaoeleitoralInput, EleitorUncheckedCreateWithoutSessaoeleitoralInput> | EleitorCreateWithoutSessaoeleitoralInput[] | EleitorUncheckedCreateWithoutSessaoeleitoralInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutSessaoeleitoralInput | EleitorCreateOrConnectWithoutSessaoeleitoralInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutSessaoeleitoralInput | EleitorUpsertWithWhereUniqueWithoutSessaoeleitoralInput[]
    createMany?: EleitorCreateManySessaoeleitoralInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutSessaoeleitoralInput | EleitorUpdateWithWhereUniqueWithoutSessaoeleitoralInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutSessaoeleitoralInput | EleitorUpdateManyWithWhereWithoutSessaoeleitoralInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalNestedInput = {
    create?: XOR<PlanejamentoLocalVotacaoCreateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput> | PlanejamentoLocalVotacaoCreateWithoutLocalInput[] | PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput[]
    connectOrCreate?: PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput | PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput[]
    upsert?: PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutLocalInput | PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutLocalInput[]
    createMany?: PlanejamentoLocalVotacaoCreateManyLocalInputEnvelope
    set?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    disconnect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    delete?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    connect?: PlanejamentoLocalVotacaoWhereUniqueInput | PlanejamentoLocalVotacaoWhereUniqueInput[]
    update?: PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutLocalInput | PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutLocalInput[]
    updateMany?: PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutLocalInput | PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutLocalInput[]
    deleteMany?: PlanejamentoLocalVotacaoScalarWhereInput | PlanejamentoLocalVotacaoScalarWhereInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoNestedInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput[]
    upsert?: LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutLocalvontacaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInputEnvelope
    set?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    disconnect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    delete?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    update?: LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutLocalvontacaoInput[]
    updateMany?: LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutLocalvontacaoInput[]
    deleteMany?: LocalVotacao_has_candidatoEleicaoScalarWhereInput | LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
  }

  export type CandidatosEleicaoCreateNestedManyWithoutEleicaoInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutEleicaoInput> | CandidatosEleicaoCreateWithoutEleicaoInput[] | CandidatosEleicaoUncheckedCreateWithoutEleicaoInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutEleicaoInput | CandidatosEleicaoCreateOrConnectWithoutEleicaoInput[]
    createMany?: CandidatosEleicaoCreateManyEleicaoInputEnvelope
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
  }

  export type CandidatosEleicaoUncheckedCreateNestedManyWithoutEleicaoInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutEleicaoInput> | CandidatosEleicaoCreateWithoutEleicaoInput[] | CandidatosEleicaoUncheckedCreateWithoutEleicaoInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutEleicaoInput | CandidatosEleicaoCreateOrConnectWithoutEleicaoInput[]
    createMany?: CandidatosEleicaoCreateManyEleicaoInputEnvelope
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
  }

  export type CandidatosEleicaoUpdateManyWithoutEleicaoNestedInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutEleicaoInput> | CandidatosEleicaoCreateWithoutEleicaoInput[] | CandidatosEleicaoUncheckedCreateWithoutEleicaoInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutEleicaoInput | CandidatosEleicaoCreateOrConnectWithoutEleicaoInput[]
    upsert?: CandidatosEleicaoUpsertWithWhereUniqueWithoutEleicaoInput | CandidatosEleicaoUpsertWithWhereUniqueWithoutEleicaoInput[]
    createMany?: CandidatosEleicaoCreateManyEleicaoInputEnvelope
    set?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    disconnect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    delete?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    update?: CandidatosEleicaoUpdateWithWhereUniqueWithoutEleicaoInput | CandidatosEleicaoUpdateWithWhereUniqueWithoutEleicaoInput[]
    updateMany?: CandidatosEleicaoUpdateManyWithWhereWithoutEleicaoInput | CandidatosEleicaoUpdateManyWithWhereWithoutEleicaoInput[]
    deleteMany?: CandidatosEleicaoScalarWhereInput | CandidatosEleicaoScalarWhereInput[]
  }

  export type CandidatosEleicaoUncheckedUpdateManyWithoutEleicaoNestedInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutEleicaoInput> | CandidatosEleicaoCreateWithoutEleicaoInput[] | CandidatosEleicaoUncheckedCreateWithoutEleicaoInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutEleicaoInput | CandidatosEleicaoCreateOrConnectWithoutEleicaoInput[]
    upsert?: CandidatosEleicaoUpsertWithWhereUniqueWithoutEleicaoInput | CandidatosEleicaoUpsertWithWhereUniqueWithoutEleicaoInput[]
    createMany?: CandidatosEleicaoCreateManyEleicaoInputEnvelope
    set?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    disconnect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    delete?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    update?: CandidatosEleicaoUpdateWithWhereUniqueWithoutEleicaoInput | CandidatosEleicaoUpdateWithWhereUniqueWithoutEleicaoInput[]
    updateMany?: CandidatosEleicaoUpdateManyWithWhereWithoutEleicaoInput | CandidatosEleicaoUpdateManyWithWhereWithoutEleicaoInput[]
    deleteMany?: CandidatosEleicaoScalarWhereInput | CandidatosEleicaoScalarWhereInput[]
  }

  export type MunicipioCreateNestedManyWithoutUfInput = {
    create?: XOR<MunicipioCreateWithoutUfInput, MunicipioUncheckedCreateWithoutUfInput> | MunicipioCreateWithoutUfInput[] | MunicipioUncheckedCreateWithoutUfInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutUfInput | MunicipioCreateOrConnectWithoutUfInput[]
    createMany?: MunicipioCreateManyUfInputEnvelope
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
  }

  export type MunicipioUncheckedCreateNestedManyWithoutUfInput = {
    create?: XOR<MunicipioCreateWithoutUfInput, MunicipioUncheckedCreateWithoutUfInput> | MunicipioCreateWithoutUfInput[] | MunicipioUncheckedCreateWithoutUfInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutUfInput | MunicipioCreateOrConnectWithoutUfInput[]
    createMany?: MunicipioCreateManyUfInputEnvelope
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
  }

  export type MunicipioUpdateManyWithoutUfNestedInput = {
    create?: XOR<MunicipioCreateWithoutUfInput, MunicipioUncheckedCreateWithoutUfInput> | MunicipioCreateWithoutUfInput[] | MunicipioUncheckedCreateWithoutUfInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutUfInput | MunicipioCreateOrConnectWithoutUfInput[]
    upsert?: MunicipioUpsertWithWhereUniqueWithoutUfInput | MunicipioUpsertWithWhereUniqueWithoutUfInput[]
    createMany?: MunicipioCreateManyUfInputEnvelope
    set?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    disconnect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    delete?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    update?: MunicipioUpdateWithWhereUniqueWithoutUfInput | MunicipioUpdateWithWhereUniqueWithoutUfInput[]
    updateMany?: MunicipioUpdateManyWithWhereWithoutUfInput | MunicipioUpdateManyWithWhereWithoutUfInput[]
    deleteMany?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
  }

  export type MunicipioUncheckedUpdateManyWithoutUfNestedInput = {
    create?: XOR<MunicipioCreateWithoutUfInput, MunicipioUncheckedCreateWithoutUfInput> | MunicipioCreateWithoutUfInput[] | MunicipioUncheckedCreateWithoutUfInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutUfInput | MunicipioCreateOrConnectWithoutUfInput[]
    upsert?: MunicipioUpsertWithWhereUniqueWithoutUfInput | MunicipioUpsertWithWhereUniqueWithoutUfInput[]
    createMany?: MunicipioCreateManyUfInputEnvelope
    set?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    disconnect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    delete?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    update?: MunicipioUpdateWithWhereUniqueWithoutUfInput | MunicipioUpdateWithWhereUniqueWithoutUfInput[]
    updateMany?: MunicipioUpdateManyWithWhereWithoutUfInput | MunicipioUpdateManyWithWhereWithoutUfInput[]
    deleteMany?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
  }

  export type UFCreateNestedOneWithoutMunicipioInput = {
    create?: XOR<UFCreateWithoutMunicipioInput, UFUncheckedCreateWithoutMunicipioInput>
    connectOrCreate?: UFCreateOrConnectWithoutMunicipioInput
    connect?: UFWhereUniqueInput
  }

  export type CandidatosEleicaoCreateNestedManyWithoutMunicipioInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutMunicipioInput, CandidatosEleicaoUncheckedCreateWithoutMunicipioInput> | CandidatosEleicaoCreateWithoutMunicipioInput[] | CandidatosEleicaoUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutMunicipioInput | CandidatosEleicaoCreateOrConnectWithoutMunicipioInput[]
    createMany?: CandidatosEleicaoCreateManyMunicipioInputEnvelope
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
  }

  export type CandidatosEleicaoUncheckedCreateNestedManyWithoutMunicipioInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutMunicipioInput, CandidatosEleicaoUncheckedCreateWithoutMunicipioInput> | CandidatosEleicaoCreateWithoutMunicipioInput[] | CandidatosEleicaoUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutMunicipioInput | CandidatosEleicaoCreateOrConnectWithoutMunicipioInput[]
    createMany?: CandidatosEleicaoCreateManyMunicipioInputEnvelope
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
  }

  export type UFUpdateOneRequiredWithoutMunicipioNestedInput = {
    create?: XOR<UFCreateWithoutMunicipioInput, UFUncheckedCreateWithoutMunicipioInput>
    connectOrCreate?: UFCreateOrConnectWithoutMunicipioInput
    upsert?: UFUpsertWithoutMunicipioInput
    connect?: UFWhereUniqueInput
    update?: XOR<XOR<UFUpdateToOneWithWhereWithoutMunicipioInput, UFUpdateWithoutMunicipioInput>, UFUncheckedUpdateWithoutMunicipioInput>
  }

  export type CandidatosEleicaoUpdateManyWithoutMunicipioNestedInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutMunicipioInput, CandidatosEleicaoUncheckedCreateWithoutMunicipioInput> | CandidatosEleicaoCreateWithoutMunicipioInput[] | CandidatosEleicaoUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutMunicipioInput | CandidatosEleicaoCreateOrConnectWithoutMunicipioInput[]
    upsert?: CandidatosEleicaoUpsertWithWhereUniqueWithoutMunicipioInput | CandidatosEleicaoUpsertWithWhereUniqueWithoutMunicipioInput[]
    createMany?: CandidatosEleicaoCreateManyMunicipioInputEnvelope
    set?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    disconnect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    delete?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    update?: CandidatosEleicaoUpdateWithWhereUniqueWithoutMunicipioInput | CandidatosEleicaoUpdateWithWhereUniqueWithoutMunicipioInput[]
    updateMany?: CandidatosEleicaoUpdateManyWithWhereWithoutMunicipioInput | CandidatosEleicaoUpdateManyWithWhereWithoutMunicipioInput[]
    deleteMany?: CandidatosEleicaoScalarWhereInput | CandidatosEleicaoScalarWhereInput[]
  }

  export type CandidatosEleicaoUncheckedUpdateManyWithoutMunicipioNestedInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutMunicipioInput, CandidatosEleicaoUncheckedCreateWithoutMunicipioInput> | CandidatosEleicaoCreateWithoutMunicipioInput[] | CandidatosEleicaoUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutMunicipioInput | CandidatosEleicaoCreateOrConnectWithoutMunicipioInput[]
    upsert?: CandidatosEleicaoUpsertWithWhereUniqueWithoutMunicipioInput | CandidatosEleicaoUpsertWithWhereUniqueWithoutMunicipioInput[]
    createMany?: CandidatosEleicaoCreateManyMunicipioInputEnvelope
    set?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    disconnect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    delete?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    connect?: CandidatosEleicaoWhereUniqueInput | CandidatosEleicaoWhereUniqueInput[]
    update?: CandidatosEleicaoUpdateWithWhereUniqueWithoutMunicipioInput | CandidatosEleicaoUpdateWithWhereUniqueWithoutMunicipioInput[]
    updateMany?: CandidatosEleicaoUpdateManyWithWhereWithoutMunicipioInput | CandidatosEleicaoUpdateManyWithWhereWithoutMunicipioInput[]
    deleteMany?: CandidatosEleicaoScalarWhereInput | CandidatosEleicaoScalarWhereInput[]
  }

  export type EleicoesCreateNestedOneWithoutCandidatosEleicaoInput = {
    create?: XOR<EleicoesCreateWithoutCandidatosEleicaoInput, EleicoesUncheckedCreateWithoutCandidatosEleicaoInput>
    connectOrCreate?: EleicoesCreateOrConnectWithoutCandidatosEleicaoInput
    connect?: EleicoesWhereUniqueInput
  }

  export type MunicipioCreateNestedOneWithoutCandidatosEleicaoInput = {
    create?: XOR<MunicipioCreateWithoutCandidatosEleicaoInput, MunicipioUncheckedCreateWithoutCandidatosEleicaoInput>
    connectOrCreate?: MunicipioCreateOrConnectWithoutCandidatosEleicaoInput
    connect?: MunicipioWhereUniqueInput
  }

  export type LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutCandidatoEleicaoInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInputEnvelope
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutCandidatoEleicaoInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInputEnvelope
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type EleicoesUpdateOneRequiredWithoutCandidatosEleicaoNestedInput = {
    create?: XOR<EleicoesCreateWithoutCandidatosEleicaoInput, EleicoesUncheckedCreateWithoutCandidatosEleicaoInput>
    connectOrCreate?: EleicoesCreateOrConnectWithoutCandidatosEleicaoInput
    upsert?: EleicoesUpsertWithoutCandidatosEleicaoInput
    connect?: EleicoesWhereUniqueInput
    update?: XOR<XOR<EleicoesUpdateToOneWithWhereWithoutCandidatosEleicaoInput, EleicoesUpdateWithoutCandidatosEleicaoInput>, EleicoesUncheckedUpdateWithoutCandidatosEleicaoInput>
  }

  export type MunicipioUpdateOneRequiredWithoutCandidatosEleicaoNestedInput = {
    create?: XOR<MunicipioCreateWithoutCandidatosEleicaoInput, MunicipioUncheckedCreateWithoutCandidatosEleicaoInput>
    connectOrCreate?: MunicipioCreateOrConnectWithoutCandidatosEleicaoInput
    upsert?: MunicipioUpsertWithoutCandidatosEleicaoInput
    connect?: MunicipioWhereUniqueInput
    update?: XOR<XOR<MunicipioUpdateToOneWithWhereWithoutCandidatosEleicaoInput, MunicipioUpdateWithoutCandidatosEleicaoInput>, MunicipioUncheckedUpdateWithoutCandidatosEleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateManyWithoutCandidatoEleicaoNestedInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput[]
    upsert?: LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutCandidatoEleicaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInputEnvelope
    set?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    disconnect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    delete?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    update?: LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutCandidatoEleicaoInput[]
    updateMany?: LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutCandidatoEleicaoInput[]
    deleteMany?: LocalVotacao_has_candidatoEleicaoScalarWhereInput | LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutCandidatoEleicaoNestedInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput> | LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput[] | LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput[]
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput[]
    upsert?: LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutCandidatoEleicaoInput[]
    createMany?: LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInputEnvelope
    set?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    disconnect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    delete?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput | LocalVotacao_has_candidatoEleicaoWhereUniqueInput[]
    update?: LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutCandidatoEleicaoInput[]
    updateMany?: LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutCandidatoEleicaoInput[]
    deleteMany?: LocalVotacao_has_candidatoEleicaoScalarWhereInput | LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
  }

  export type LocalVotacaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput = {
    create?: XOR<LocalVotacaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutLocalVotacao_has_candidatoEleicaoInput
    connect?: LocalVotacaoWhereUniqueInput
  }

  export type CandidatosEleicaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutLocalVotacao_has_candidatoEleicaoInput
    connect?: CandidatosEleicaoWhereUniqueInput
  }

  export type quantidade_votos_eleicaoCreateNestedManyWithoutLocalvotacaoInput = {
    create?: XOR<quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput> | quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput[] | quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput | quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput[]
    createMany?: quantidade_votos_eleicaoCreateManyLocalvotacaoInputEnvelope
    connect?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
  }

  export type quantidade_votos_eleicaoUncheckedCreateNestedManyWithoutLocalvotacaoInput = {
    create?: XOR<quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput> | quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput[] | quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput | quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput[]
    createMany?: quantidade_votos_eleicaoCreateManyLocalvotacaoInputEnvelope
    connect?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
  }

  export type LocalVotacaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput = {
    create?: XOR<LocalVotacaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutLocalVotacao_has_candidatoEleicaoInput
    upsert?: LocalVotacaoUpsertWithoutLocalVotacao_has_candidatoEleicaoInput
    connect?: LocalVotacaoWhereUniqueInput
    update?: XOR<XOR<LocalVotacaoUpdateToOneWithWhereWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>, LocalVotacaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>
  }

  export type CandidatosEleicaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput = {
    create?: XOR<CandidatosEleicaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
    connectOrCreate?: CandidatosEleicaoCreateOrConnectWithoutLocalVotacao_has_candidatoEleicaoInput
    upsert?: CandidatosEleicaoUpsertWithoutLocalVotacao_has_candidatoEleicaoInput
    connect?: CandidatosEleicaoWhereUniqueInput
    update?: XOR<XOR<CandidatosEleicaoUpdateToOneWithWhereWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>, CandidatosEleicaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>
  }

  export type quantidade_votos_eleicaoUpdateManyWithoutLocalvotacaoNestedInput = {
    create?: XOR<quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput> | quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput[] | quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput | quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput[]
    upsert?: quantidade_votos_eleicaoUpsertWithWhereUniqueWithoutLocalvotacaoInput | quantidade_votos_eleicaoUpsertWithWhereUniqueWithoutLocalvotacaoInput[]
    createMany?: quantidade_votos_eleicaoCreateManyLocalvotacaoInputEnvelope
    set?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    disconnect?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    delete?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    connect?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    update?: quantidade_votos_eleicaoUpdateWithWhereUniqueWithoutLocalvotacaoInput | quantidade_votos_eleicaoUpdateWithWhereUniqueWithoutLocalvotacaoInput[]
    updateMany?: quantidade_votos_eleicaoUpdateManyWithWhereWithoutLocalvotacaoInput | quantidade_votos_eleicaoUpdateManyWithWhereWithoutLocalvotacaoInput[]
    deleteMany?: quantidade_votos_eleicaoScalarWhereInput | quantidade_votos_eleicaoScalarWhereInput[]
  }

  export type quantidade_votos_eleicaoUncheckedUpdateManyWithoutLocalvotacaoNestedInput = {
    create?: XOR<quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput> | quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput[] | quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput[]
    connectOrCreate?: quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput | quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput[]
    upsert?: quantidade_votos_eleicaoUpsertWithWhereUniqueWithoutLocalvotacaoInput | quantidade_votos_eleicaoUpsertWithWhereUniqueWithoutLocalvotacaoInput[]
    createMany?: quantidade_votos_eleicaoCreateManyLocalvotacaoInputEnvelope
    set?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    disconnect?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    delete?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    connect?: quantidade_votos_eleicaoWhereUniqueInput | quantidade_votos_eleicaoWhereUniqueInput[]
    update?: quantidade_votos_eleicaoUpdateWithWhereUniqueWithoutLocalvotacaoInput | quantidade_votos_eleicaoUpdateWithWhereUniqueWithoutLocalvotacaoInput[]
    updateMany?: quantidade_votos_eleicaoUpdateManyWithWhereWithoutLocalvotacaoInput | quantidade_votos_eleicaoUpdateManyWithWhereWithoutLocalvotacaoInput[]
    deleteMany?: quantidade_votos_eleicaoScalarWhereInput | quantidade_votos_eleicaoScalarWhereInput[]
  }

  export type LocalVotacao_has_candidatoEleicaoCreateNestedOneWithoutQuantidade_votos_eleicaoInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutQuantidade_votos_eleicaoInput>
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutQuantidade_votos_eleicaoInput
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateOneRequiredWithoutQuantidade_votos_eleicaoNestedInput = {
    create?: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutQuantidade_votos_eleicaoInput>
    connectOrCreate?: LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutQuantidade_votos_eleicaoInput
    upsert?: LocalVotacao_has_candidatoEleicaoUpsertWithoutQuantidade_votos_eleicaoInput
    connect?: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    update?: XOR<XOR<LocalVotacao_has_candidatoEleicaoUpdateToOneWithWhereWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUpdateWithoutQuantidade_votos_eleicaoInput>, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutQuantidade_votos_eleicaoInput>
  }

  export type LocalVotacaoCreateNestedOneWithoutSessoesEleitoraisInput = {
    create?: XOR<LocalVotacaoCreateWithoutSessoesEleitoraisInput, LocalVotacaoUncheckedCreateWithoutSessoesEleitoraisInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutSessoesEleitoraisInput
    connect?: LocalVotacaoWhereUniqueInput
  }

  export type LocalVotacaoUpdateOneWithoutSessoesEleitoraisNestedInput = {
    create?: XOR<LocalVotacaoCreateWithoutSessoesEleitoraisInput, LocalVotacaoUncheckedCreateWithoutSessoesEleitoraisInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutSessoesEleitoraisInput
    upsert?: LocalVotacaoUpsertWithoutSessoesEleitoraisInput
    disconnect?: LocalVotacaoWhereInput | boolean
    delete?: LocalVotacaoWhereInput | boolean
    connect?: LocalVotacaoWhereUniqueInput
    update?: XOR<XOR<LocalVotacaoUpdateToOneWithWhereWithoutSessoesEleitoraisInput, LocalVotacaoUpdateWithoutSessoesEleitoraisInput>, LocalVotacaoUncheckedUpdateWithoutSessoesEleitoraisInput>
  }

  export type LocalVotacaoCreateNestedOneWithoutEnderecoInput = {
    create?: XOR<LocalVotacaoCreateWithoutEnderecoInput, LocalVotacaoUncheckedCreateWithoutEnderecoInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutEnderecoInput
    connect?: LocalVotacaoWhereUniqueInput
  }

  export type LocalVotacaoUpdateOneWithoutEnderecoNestedInput = {
    create?: XOR<LocalVotacaoCreateWithoutEnderecoInput, LocalVotacaoUncheckedCreateWithoutEnderecoInput>
    connectOrCreate?: LocalVotacaoCreateOrConnectWithoutEnderecoInput
    upsert?: LocalVotacaoUpsertWithoutEnderecoInput
    disconnect?: LocalVotacaoWhereInput | boolean
    delete?: LocalVotacaoWhereInput | boolean
    connect?: LocalVotacaoWhereUniqueInput
    update?: XOR<XOR<LocalVotacaoUpdateToOneWithWhereWithoutEnderecoInput, LocalVotacaoUpdateWithoutEnderecoInput>, LocalVotacaoUncheckedUpdateWithoutEnderecoInput>
  }

  export type UsuarioCreateNestedManyWithoutPerfilInput = {
    create?: XOR<UsuarioCreateWithoutPerfilInput, UsuarioUncheckedCreateWithoutPerfilInput> | UsuarioCreateWithoutPerfilInput[] | UsuarioUncheckedCreateWithoutPerfilInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutPerfilInput | UsuarioCreateOrConnectWithoutPerfilInput[]
    createMany?: UsuarioCreateManyPerfilInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutPerfilInput = {
    create?: XOR<UsuarioCreateWithoutPerfilInput, UsuarioUncheckedCreateWithoutPerfilInput> | UsuarioCreateWithoutPerfilInput[] | UsuarioUncheckedCreateWithoutPerfilInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutPerfilInput | UsuarioCreateOrConnectWithoutPerfilInput[]
    createMany?: UsuarioCreateManyPerfilInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUpdateManyWithoutPerfilNestedInput = {
    create?: XOR<UsuarioCreateWithoutPerfilInput, UsuarioUncheckedCreateWithoutPerfilInput> | UsuarioCreateWithoutPerfilInput[] | UsuarioUncheckedCreateWithoutPerfilInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutPerfilInput | UsuarioCreateOrConnectWithoutPerfilInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutPerfilInput | UsuarioUpsertWithWhereUniqueWithoutPerfilInput[]
    createMany?: UsuarioCreateManyPerfilInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutPerfilInput | UsuarioUpdateWithWhereUniqueWithoutPerfilInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutPerfilInput | UsuarioUpdateManyWithWhereWithoutPerfilInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutPerfilNestedInput = {
    create?: XOR<UsuarioCreateWithoutPerfilInput, UsuarioUncheckedCreateWithoutPerfilInput> | UsuarioCreateWithoutPerfilInput[] | UsuarioUncheckedCreateWithoutPerfilInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutPerfilInput | UsuarioCreateOrConnectWithoutPerfilInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutPerfilInput | UsuarioUpsertWithWhereUniqueWithoutPerfilInput[]
    createMany?: UsuarioCreateManyPerfilInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutPerfilInput | UsuarioUpdateWithWhereUniqueWithoutPerfilInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutPerfilInput | UsuarioUpdateManyWithWhereWithoutPerfilInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type EleitorCreateNestedManyWithoutClassificacaoInput = {
    create?: XOR<EleitorCreateWithoutClassificacaoInput, EleitorUncheckedCreateWithoutClassificacaoInput> | EleitorCreateWithoutClassificacaoInput[] | EleitorUncheckedCreateWithoutClassificacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutClassificacaoInput | EleitorCreateOrConnectWithoutClassificacaoInput[]
    createMany?: EleitorCreateManyClassificacaoInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type EleitorUncheckedCreateNestedManyWithoutClassificacaoInput = {
    create?: XOR<EleitorCreateWithoutClassificacaoInput, EleitorUncheckedCreateWithoutClassificacaoInput> | EleitorCreateWithoutClassificacaoInput[] | EleitorUncheckedCreateWithoutClassificacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutClassificacaoInput | EleitorCreateOrConnectWithoutClassificacaoInput[]
    createMany?: EleitorCreateManyClassificacaoInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type EleitorUpdateManyWithoutClassificacaoNestedInput = {
    create?: XOR<EleitorCreateWithoutClassificacaoInput, EleitorUncheckedCreateWithoutClassificacaoInput> | EleitorCreateWithoutClassificacaoInput[] | EleitorUncheckedCreateWithoutClassificacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutClassificacaoInput | EleitorCreateOrConnectWithoutClassificacaoInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutClassificacaoInput | EleitorUpsertWithWhereUniqueWithoutClassificacaoInput[]
    createMany?: EleitorCreateManyClassificacaoInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutClassificacaoInput | EleitorUpdateWithWhereUniqueWithoutClassificacaoInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutClassificacaoInput | EleitorUpdateManyWithWhereWithoutClassificacaoInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type EleitorUncheckedUpdateManyWithoutClassificacaoNestedInput = {
    create?: XOR<EleitorCreateWithoutClassificacaoInput, EleitorUncheckedCreateWithoutClassificacaoInput> | EleitorCreateWithoutClassificacaoInput[] | EleitorUncheckedCreateWithoutClassificacaoInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutClassificacaoInput | EleitorCreateOrConnectWithoutClassificacaoInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutClassificacaoInput | EleitorUpsertWithWhereUniqueWithoutClassificacaoInput[]
    createMany?: EleitorCreateManyClassificacaoInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutClassificacaoInput | EleitorUpdateWithWhereUniqueWithoutClassificacaoInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutClassificacaoInput | EleitorUpdateManyWithWhereWithoutClassificacaoInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type perfilUsoCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<perfilUsoCreateWithoutUsuarioInput, perfilUsoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: perfilUsoCreateOrConnectWithoutUsuarioInput
    connect?: perfilUsoWhereUniqueInput
  }

  export type CandidatoCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<CandidatoCreateWithoutUsuarioInput, CandidatoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutUsuarioInput
    connect?: CandidatoWhereUniqueInput
  }

  export type loginCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<loginCreateWithoutUsuarioInput, loginUncheckedCreateWithoutUsuarioInput> | loginCreateWithoutUsuarioInput[] | loginUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: loginCreateOrConnectWithoutUsuarioInput | loginCreateOrConnectWithoutUsuarioInput[]
    createMany?: loginCreateManyUsuarioInputEnvelope
    connect?: loginWhereUniqueInput | loginWhereUniqueInput[]
  }

  export type DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<DadosContatoUsuarioCreateWithoutUsuarioInput, DadosContatoUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: DadosContatoUsuarioCreateOrConnectWithoutUsuarioInput
    connect?: DadosContatoUsuarioWhereUniqueInput
  }

  export type EnderecoUsuarioCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<EnderecoUsuarioCreateWithoutUsuarioInput, EnderecoUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: EnderecoUsuarioCreateOrConnectWithoutUsuarioInput
    connect?: EnderecoUsuarioWhereUniqueInput
  }

  export type EleitorCreateNestedManyWithoutCriado_porInput = {
    create?: XOR<EleitorCreateWithoutCriado_porInput, EleitorUncheckedCreateWithoutCriado_porInput> | EleitorCreateWithoutCriado_porInput[] | EleitorUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCriado_porInput | EleitorCreateOrConnectWithoutCriado_porInput[]
    createMany?: EleitorCreateManyCriado_porInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type coligacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<coligacaoCreateWithoutUsuarioInput, coligacaoUncheckedCreateWithoutUsuarioInput> | coligacaoCreateWithoutUsuarioInput[] | coligacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: coligacaoCreateOrConnectWithoutUsuarioInput | coligacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: coligacaoCreateManyUsuarioInputEnvelope
    connect?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
  }

  export type atendimentoCreateNestedManyWithoutCriado_porInput = {
    create?: XOR<atendimentoCreateWithoutCriado_porInput, atendimentoUncheckedCreateWithoutCriado_porInput> | atendimentoCreateWithoutCriado_porInput[] | atendimentoUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutCriado_porInput | atendimentoCreateOrConnectWithoutCriado_porInput[]
    createMany?: atendimentoCreateManyCriado_porInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type atendimentoCreateNestedManyWithoutResponsavelInput = {
    create?: XOR<atendimentoCreateWithoutResponsavelInput, atendimentoUncheckedCreateWithoutResponsavelInput> | atendimentoCreateWithoutResponsavelInput[] | atendimentoUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutResponsavelInput | atendimentoCreateOrConnectWithoutResponsavelInput[]
    createMany?: atendimentoCreateManyResponsavelInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type loginUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<loginCreateWithoutUsuarioInput, loginUncheckedCreateWithoutUsuarioInput> | loginCreateWithoutUsuarioInput[] | loginUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: loginCreateOrConnectWithoutUsuarioInput | loginCreateOrConnectWithoutUsuarioInput[]
    createMany?: loginCreateManyUsuarioInputEnvelope
    connect?: loginWhereUniqueInput | loginWhereUniqueInput[]
  }

  export type EleitorUncheckedCreateNestedManyWithoutCriado_porInput = {
    create?: XOR<EleitorCreateWithoutCriado_porInput, EleitorUncheckedCreateWithoutCriado_porInput> | EleitorCreateWithoutCriado_porInput[] | EleitorUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCriado_porInput | EleitorCreateOrConnectWithoutCriado_porInput[]
    createMany?: EleitorCreateManyCriado_porInputEnvelope
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
  }

  export type coligacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<coligacaoCreateWithoutUsuarioInput, coligacaoUncheckedCreateWithoutUsuarioInput> | coligacaoCreateWithoutUsuarioInput[] | coligacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: coligacaoCreateOrConnectWithoutUsuarioInput | coligacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: coligacaoCreateManyUsuarioInputEnvelope
    connect?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
  }

  export type atendimentoUncheckedCreateNestedManyWithoutCriado_porInput = {
    create?: XOR<atendimentoCreateWithoutCriado_porInput, atendimentoUncheckedCreateWithoutCriado_porInput> | atendimentoCreateWithoutCriado_porInput[] | atendimentoUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutCriado_porInput | atendimentoCreateOrConnectWithoutCriado_porInput[]
    createMany?: atendimentoCreateManyCriado_porInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type atendimentoUncheckedCreateNestedManyWithoutResponsavelInput = {
    create?: XOR<atendimentoCreateWithoutResponsavelInput, atendimentoUncheckedCreateWithoutResponsavelInput> | atendimentoCreateWithoutResponsavelInput[] | atendimentoUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutResponsavelInput | atendimentoCreateOrConnectWithoutResponsavelInput[]
    createMany?: atendimentoCreateManyResponsavelInputEnvelope
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<perfilUsoCreateWithoutUsuarioInput, perfilUsoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: perfilUsoCreateOrConnectWithoutUsuarioInput
    upsert?: perfilUsoUpsertWithoutUsuarioInput
    connect?: perfilUsoWhereUniqueInput
    update?: XOR<XOR<perfilUsoUpdateToOneWithWhereWithoutUsuarioInput, perfilUsoUpdateWithoutUsuarioInput>, perfilUsoUncheckedUpdateWithoutUsuarioInput>
  }

  export type CandidatoUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<CandidatoCreateWithoutUsuarioInput, CandidatoUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: CandidatoCreateOrConnectWithoutUsuarioInput
    upsert?: CandidatoUpsertWithoutUsuarioInput
    connect?: CandidatoWhereUniqueInput
    update?: XOR<XOR<CandidatoUpdateToOneWithWhereWithoutUsuarioInput, CandidatoUpdateWithoutUsuarioInput>, CandidatoUncheckedUpdateWithoutUsuarioInput>
  }

  export type loginUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<loginCreateWithoutUsuarioInput, loginUncheckedCreateWithoutUsuarioInput> | loginCreateWithoutUsuarioInput[] | loginUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: loginCreateOrConnectWithoutUsuarioInput | loginCreateOrConnectWithoutUsuarioInput[]
    upsert?: loginUpsertWithWhereUniqueWithoutUsuarioInput | loginUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: loginCreateManyUsuarioInputEnvelope
    set?: loginWhereUniqueInput | loginWhereUniqueInput[]
    disconnect?: loginWhereUniqueInput | loginWhereUniqueInput[]
    delete?: loginWhereUniqueInput | loginWhereUniqueInput[]
    connect?: loginWhereUniqueInput | loginWhereUniqueInput[]
    update?: loginUpdateWithWhereUniqueWithoutUsuarioInput | loginUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: loginUpdateManyWithWhereWithoutUsuarioInput | loginUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: loginScalarWhereInput | loginScalarWhereInput[]
  }

  export type DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<DadosContatoUsuarioCreateWithoutUsuarioInput, DadosContatoUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: DadosContatoUsuarioCreateOrConnectWithoutUsuarioInput
    upsert?: DadosContatoUsuarioUpsertWithoutUsuarioInput
    disconnect?: DadosContatoUsuarioWhereInput | boolean
    delete?: DadosContatoUsuarioWhereInput | boolean
    connect?: DadosContatoUsuarioWhereUniqueInput
    update?: XOR<XOR<DadosContatoUsuarioUpdateToOneWithWhereWithoutUsuarioInput, DadosContatoUsuarioUpdateWithoutUsuarioInput>, DadosContatoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<EnderecoUsuarioCreateWithoutUsuarioInput, EnderecoUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: EnderecoUsuarioCreateOrConnectWithoutUsuarioInput
    upsert?: EnderecoUsuarioUpsertWithoutUsuarioInput
    disconnect?: EnderecoUsuarioWhereInput | boolean
    delete?: EnderecoUsuarioWhereInput | boolean
    connect?: EnderecoUsuarioWhereUniqueInput
    update?: XOR<XOR<EnderecoUsuarioUpdateToOneWithWhereWithoutUsuarioInput, EnderecoUsuarioUpdateWithoutUsuarioInput>, EnderecoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type EleitorUpdateManyWithoutCriado_porNestedInput = {
    create?: XOR<EleitorCreateWithoutCriado_porInput, EleitorUncheckedCreateWithoutCriado_porInput> | EleitorCreateWithoutCriado_porInput[] | EleitorUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCriado_porInput | EleitorCreateOrConnectWithoutCriado_porInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutCriado_porInput | EleitorUpsertWithWhereUniqueWithoutCriado_porInput[]
    createMany?: EleitorCreateManyCriado_porInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutCriado_porInput | EleitorUpdateWithWhereUniqueWithoutCriado_porInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutCriado_porInput | EleitorUpdateManyWithWhereWithoutCriado_porInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type coligacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<coligacaoCreateWithoutUsuarioInput, coligacaoUncheckedCreateWithoutUsuarioInput> | coligacaoCreateWithoutUsuarioInput[] | coligacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: coligacaoCreateOrConnectWithoutUsuarioInput | coligacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: coligacaoUpsertWithWhereUniqueWithoutUsuarioInput | coligacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: coligacaoCreateManyUsuarioInputEnvelope
    set?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    disconnect?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    delete?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    connect?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    update?: coligacaoUpdateWithWhereUniqueWithoutUsuarioInput | coligacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: coligacaoUpdateManyWithWhereWithoutUsuarioInput | coligacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: coligacaoScalarWhereInput | coligacaoScalarWhereInput[]
  }

  export type atendimentoUpdateManyWithoutCriado_porNestedInput = {
    create?: XOR<atendimentoCreateWithoutCriado_porInput, atendimentoUncheckedCreateWithoutCriado_porInput> | atendimentoCreateWithoutCriado_porInput[] | atendimentoUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutCriado_porInput | atendimentoCreateOrConnectWithoutCriado_porInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutCriado_porInput | atendimentoUpsertWithWhereUniqueWithoutCriado_porInput[]
    createMany?: atendimentoCreateManyCriado_porInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutCriado_porInput | atendimentoUpdateWithWhereUniqueWithoutCriado_porInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutCriado_porInput | atendimentoUpdateManyWithWhereWithoutCriado_porInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type atendimentoUpdateManyWithoutResponsavelNestedInput = {
    create?: XOR<atendimentoCreateWithoutResponsavelInput, atendimentoUncheckedCreateWithoutResponsavelInput> | atendimentoCreateWithoutResponsavelInput[] | atendimentoUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutResponsavelInput | atendimentoCreateOrConnectWithoutResponsavelInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutResponsavelInput | atendimentoUpsertWithWhereUniqueWithoutResponsavelInput[]
    createMany?: atendimentoCreateManyResponsavelInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutResponsavelInput | atendimentoUpdateWithWhereUniqueWithoutResponsavelInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutResponsavelInput | atendimentoUpdateManyWithWhereWithoutResponsavelInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type loginUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<loginCreateWithoutUsuarioInput, loginUncheckedCreateWithoutUsuarioInput> | loginCreateWithoutUsuarioInput[] | loginUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: loginCreateOrConnectWithoutUsuarioInput | loginCreateOrConnectWithoutUsuarioInput[]
    upsert?: loginUpsertWithWhereUniqueWithoutUsuarioInput | loginUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: loginCreateManyUsuarioInputEnvelope
    set?: loginWhereUniqueInput | loginWhereUniqueInput[]
    disconnect?: loginWhereUniqueInput | loginWhereUniqueInput[]
    delete?: loginWhereUniqueInput | loginWhereUniqueInput[]
    connect?: loginWhereUniqueInput | loginWhereUniqueInput[]
    update?: loginUpdateWithWhereUniqueWithoutUsuarioInput | loginUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: loginUpdateManyWithWhereWithoutUsuarioInput | loginUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: loginScalarWhereInput | loginScalarWhereInput[]
  }

  export type EleitorUncheckedUpdateManyWithoutCriado_porNestedInput = {
    create?: XOR<EleitorCreateWithoutCriado_porInput, EleitorUncheckedCreateWithoutCriado_porInput> | EleitorCreateWithoutCriado_porInput[] | EleitorUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: EleitorCreateOrConnectWithoutCriado_porInput | EleitorCreateOrConnectWithoutCriado_porInput[]
    upsert?: EleitorUpsertWithWhereUniqueWithoutCriado_porInput | EleitorUpsertWithWhereUniqueWithoutCriado_porInput[]
    createMany?: EleitorCreateManyCriado_porInputEnvelope
    set?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    disconnect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    delete?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    connect?: EleitorWhereUniqueInput | EleitorWhereUniqueInput[]
    update?: EleitorUpdateWithWhereUniqueWithoutCriado_porInput | EleitorUpdateWithWhereUniqueWithoutCriado_porInput[]
    updateMany?: EleitorUpdateManyWithWhereWithoutCriado_porInput | EleitorUpdateManyWithWhereWithoutCriado_porInput[]
    deleteMany?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
  }

  export type coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<coligacaoCreateWithoutUsuarioInput, coligacaoUncheckedCreateWithoutUsuarioInput> | coligacaoCreateWithoutUsuarioInput[] | coligacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: coligacaoCreateOrConnectWithoutUsuarioInput | coligacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: coligacaoUpsertWithWhereUniqueWithoutUsuarioInput | coligacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: coligacaoCreateManyUsuarioInputEnvelope
    set?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    disconnect?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    delete?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    connect?: coligacaoWhereUniqueInput | coligacaoWhereUniqueInput[]
    update?: coligacaoUpdateWithWhereUniqueWithoutUsuarioInput | coligacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: coligacaoUpdateManyWithWhereWithoutUsuarioInput | coligacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: coligacaoScalarWhereInput | coligacaoScalarWhereInput[]
  }

  export type atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput = {
    create?: XOR<atendimentoCreateWithoutCriado_porInput, atendimentoUncheckedCreateWithoutCriado_porInput> | atendimentoCreateWithoutCriado_porInput[] | atendimentoUncheckedCreateWithoutCriado_porInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutCriado_porInput | atendimentoCreateOrConnectWithoutCriado_porInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutCriado_porInput | atendimentoUpsertWithWhereUniqueWithoutCriado_porInput[]
    createMany?: atendimentoCreateManyCriado_porInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutCriado_porInput | atendimentoUpdateWithWhereUniqueWithoutCriado_porInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutCriado_porInput | atendimentoUpdateManyWithWhereWithoutCriado_porInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput = {
    create?: XOR<atendimentoCreateWithoutResponsavelInput, atendimentoUncheckedCreateWithoutResponsavelInput> | atendimentoCreateWithoutResponsavelInput[] | atendimentoUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: atendimentoCreateOrConnectWithoutResponsavelInput | atendimentoCreateOrConnectWithoutResponsavelInput[]
    upsert?: atendimentoUpsertWithWhereUniqueWithoutResponsavelInput | atendimentoUpsertWithWhereUniqueWithoutResponsavelInput[]
    createMany?: atendimentoCreateManyResponsavelInputEnvelope
    set?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    disconnect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    delete?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    connect?: atendimentoWhereUniqueInput | atendimentoWhereUniqueInput[]
    update?: atendimentoUpdateWithWhereUniqueWithoutResponsavelInput | atendimentoUpdateWithWhereUniqueWithoutResponsavelInput[]
    updateMany?: atendimentoUpdateManyWithWhereWithoutResponsavelInput | atendimentoUpdateManyWithWhereWithoutResponsavelInput[]
    deleteMany?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
  }

  export type UsuarioCreateNestedManyWithoutContatoInput = {
    create?: XOR<UsuarioCreateWithoutContatoInput, UsuarioUncheckedCreateWithoutContatoInput> | UsuarioCreateWithoutContatoInput[] | UsuarioUncheckedCreateWithoutContatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutContatoInput | UsuarioCreateOrConnectWithoutContatoInput[]
    createMany?: UsuarioCreateManyContatoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutContatoInput = {
    create?: XOR<UsuarioCreateWithoutContatoInput, UsuarioUncheckedCreateWithoutContatoInput> | UsuarioCreateWithoutContatoInput[] | UsuarioUncheckedCreateWithoutContatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutContatoInput | UsuarioCreateOrConnectWithoutContatoInput[]
    createMany?: UsuarioCreateManyContatoInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUpdateManyWithoutContatoNestedInput = {
    create?: XOR<UsuarioCreateWithoutContatoInput, UsuarioUncheckedCreateWithoutContatoInput> | UsuarioCreateWithoutContatoInput[] | UsuarioUncheckedCreateWithoutContatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutContatoInput | UsuarioCreateOrConnectWithoutContatoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutContatoInput | UsuarioUpsertWithWhereUniqueWithoutContatoInput[]
    createMany?: UsuarioCreateManyContatoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutContatoInput | UsuarioUpdateWithWhereUniqueWithoutContatoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutContatoInput | UsuarioUpdateManyWithWhereWithoutContatoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutContatoNestedInput = {
    create?: XOR<UsuarioCreateWithoutContatoInput, UsuarioUncheckedCreateWithoutContatoInput> | UsuarioCreateWithoutContatoInput[] | UsuarioUncheckedCreateWithoutContatoInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutContatoInput | UsuarioCreateOrConnectWithoutContatoInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutContatoInput | UsuarioUpsertWithWhereUniqueWithoutContatoInput[]
    createMany?: UsuarioCreateManyContatoInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutContatoInput | UsuarioUpdateWithWhereUniqueWithoutContatoInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutContatoInput | UsuarioUpdateManyWithWhereWithoutContatoInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioCreateNestedManyWithoutEnderecoUsuarioInput = {
    create?: XOR<UsuarioCreateWithoutEnderecoUsuarioInput, UsuarioUncheckedCreateWithoutEnderecoUsuarioInput> | UsuarioCreateWithoutEnderecoUsuarioInput[] | UsuarioUncheckedCreateWithoutEnderecoUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEnderecoUsuarioInput | UsuarioCreateOrConnectWithoutEnderecoUsuarioInput[]
    createMany?: UsuarioCreateManyEnderecoUsuarioInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutEnderecoUsuarioInput = {
    create?: XOR<UsuarioCreateWithoutEnderecoUsuarioInput, UsuarioUncheckedCreateWithoutEnderecoUsuarioInput> | UsuarioCreateWithoutEnderecoUsuarioInput[] | UsuarioUncheckedCreateWithoutEnderecoUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEnderecoUsuarioInput | UsuarioCreateOrConnectWithoutEnderecoUsuarioInput[]
    createMany?: UsuarioCreateManyEnderecoUsuarioInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type UsuarioUpdateManyWithoutEnderecoUsuarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutEnderecoUsuarioInput, UsuarioUncheckedCreateWithoutEnderecoUsuarioInput> | UsuarioCreateWithoutEnderecoUsuarioInput[] | UsuarioUncheckedCreateWithoutEnderecoUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEnderecoUsuarioInput | UsuarioCreateOrConnectWithoutEnderecoUsuarioInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutEnderecoUsuarioInput | UsuarioUpsertWithWhereUniqueWithoutEnderecoUsuarioInput[]
    createMany?: UsuarioCreateManyEnderecoUsuarioInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutEnderecoUsuarioInput | UsuarioUpdateWithWhereUniqueWithoutEnderecoUsuarioInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutEnderecoUsuarioInput | UsuarioUpdateManyWithWhereWithoutEnderecoUsuarioInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutEnderecoUsuarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutEnderecoUsuarioInput, UsuarioUncheckedCreateWithoutEnderecoUsuarioInput> | UsuarioCreateWithoutEnderecoUsuarioInput[] | UsuarioUncheckedCreateWithoutEnderecoUsuarioInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutEnderecoUsuarioInput | UsuarioCreateOrConnectWithoutEnderecoUsuarioInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutEnderecoUsuarioInput | UsuarioUpsertWithWhereUniqueWithoutEnderecoUsuarioInput[]
    createMany?: UsuarioCreateManyEnderecoUsuarioInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutEnderecoUsuarioInput | UsuarioUpdateWithWhereUniqueWithoutEnderecoUsuarioInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutEnderecoUsuarioInput | UsuarioUpdateManyWithWhereWithoutEnderecoUsuarioInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutLoginInput = {
    create?: XOR<UsuarioCreateWithoutLoginInput, UsuarioUncheckedCreateWithoutLoginInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutLoginInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutLoginNestedInput = {
    create?: XOR<UsuarioCreateWithoutLoginInput, UsuarioUncheckedCreateWithoutLoginInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutLoginInput
    upsert?: UsuarioUpsertWithoutLoginInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutLoginInput, UsuarioUpdateWithoutLoginInput>, UsuarioUncheckedUpdateWithoutLoginInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type UsuarioCreateWithoutColigacaoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutColigacaoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutColigacaoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutColigacaoInput, UsuarioUncheckedCreateWithoutColigacaoInput>
  }

  export type CandidatoCreateWithoutColigacaoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    Usuario?: UsuarioCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorCreateNestedManyWithoutCandidatoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoUncheckedCreateWithoutColigacaoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoUncheckedCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCandidatoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoCreateOrConnectWithoutColigacaoInput = {
    where: CandidatoWhereUniqueInput
    create: XOR<CandidatoCreateWithoutColigacaoInput, CandidatoUncheckedCreateWithoutColigacaoInput>
  }

  export type CandidatoCreateManyColigacaoInputEnvelope = {
    data: CandidatoCreateManyColigacaoInput | CandidatoCreateManyColigacaoInput[]
    skipDuplicates?: boolean
  }

  export type EleitorCreateWithoutColigacaoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutColigacaoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutColigacaoInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutColigacaoInput, EleitorUncheckedCreateWithoutColigacaoInput>
  }

  export type EleitorCreateManyColigacaoInputEnvelope = {
    data: EleitorCreateManyColigacaoInput | EleitorCreateManyColigacaoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutColigacaoInput = {
    update: XOR<UsuarioUpdateWithoutColigacaoInput, UsuarioUncheckedUpdateWithoutColigacaoInput>
    create: XOR<UsuarioCreateWithoutColigacaoInput, UsuarioUncheckedCreateWithoutColigacaoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutColigacaoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutColigacaoInput, UsuarioUncheckedUpdateWithoutColigacaoInput>
  }

  export type UsuarioUpdateWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type CandidatoUpsertWithWhereUniqueWithoutColigacaoInput = {
    where: CandidatoWhereUniqueInput
    update: XOR<CandidatoUpdateWithoutColigacaoInput, CandidatoUncheckedUpdateWithoutColigacaoInput>
    create: XOR<CandidatoCreateWithoutColigacaoInput, CandidatoUncheckedCreateWithoutColigacaoInput>
  }

  export type CandidatoUpdateWithWhereUniqueWithoutColigacaoInput = {
    where: CandidatoWhereUniqueInput
    data: XOR<CandidatoUpdateWithoutColigacaoInput, CandidatoUncheckedUpdateWithoutColigacaoInput>
  }

  export type CandidatoUpdateManyWithWhereWithoutColigacaoInput = {
    where: CandidatoScalarWhereInput
    data: XOR<CandidatoUpdateManyMutationInput, CandidatoUncheckedUpdateManyWithoutColigacaoInput>
  }

  export type CandidatoScalarWhereInput = {
    AND?: CandidatoScalarWhereInput | CandidatoScalarWhereInput[]
    OR?: CandidatoScalarWhereInput[]
    NOT?: CandidatoScalarWhereInput | CandidatoScalarWhereInput[]
    uuid?: StringFilter<"Candidato"> | string
    nomeCandidato?: StringFilter<"Candidato"> | string
    nomeUrna?: StringNullableFilter<"Candidato"> | string | null
    partido?: StringNullableFilter<"Candidato"> | string | null
    coligacaoUuid?: StringNullableFilter<"Candidato"> | string | null
    created_at?: DateTimeFilter<"Candidato"> | Date | string
  }

  export type EleitorUpsertWithWhereUniqueWithoutColigacaoInput = {
    where: EleitorWhereUniqueInput
    update: XOR<EleitorUpdateWithoutColigacaoInput, EleitorUncheckedUpdateWithoutColigacaoInput>
    create: XOR<EleitorCreateWithoutColigacaoInput, EleitorUncheckedCreateWithoutColigacaoInput>
  }

  export type EleitorUpdateWithWhereUniqueWithoutColigacaoInput = {
    where: EleitorWhereUniqueInput
    data: XOR<EleitorUpdateWithoutColigacaoInput, EleitorUncheckedUpdateWithoutColigacaoInput>
  }

  export type EleitorUpdateManyWithWhereWithoutColigacaoInput = {
    where: EleitorScalarWhereInput
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyWithoutColigacaoInput>
  }

  export type EleitorScalarWhereInput = {
    AND?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
    OR?: EleitorScalarWhereInput[]
    NOT?: EleitorScalarWhereInput | EleitorScalarWhereInput[]
    uuid?: StringFilter<"Eleitor"> | string
    nomeCompleto?: StringFilter<"Eleitor"> | string
    nomeMae?: StringFilter<"Eleitor"> | string
    sexo?: StringFilter<"Eleitor"> | string
    cpf?: StringFilter<"Eleitor"> | string
    rg?: StringFilter<"Eleitor"> | string
    coligacaoUuid?: StringNullableFilter<"Eleitor"> | string | null
    dataNascimento?: DateTimeNullableFilter<"Eleitor"> | Date | string | null
    indicado_por?: StringNullableFilter<"Eleitor"> | string | null
    candidatoUuid?: StringFilter<"Eleitor"> | string
    usuarioUuid?: StringNullableFilter<"Eleitor"> | string | null
    sessaoEleitoral?: IntNullableFilter<"Eleitor"> | number | null
    classificacaoId?: IntNullableFilter<"Eleitor"> | number | null
    created_at?: DateTimeFilter<"Eleitor"> | Date | string
  }

  export type UsuarioCreateWithoutCandidatoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutCandidatoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutCandidatoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCandidatoInput, UsuarioUncheckedCreateWithoutCandidatoInput>
  }

  export type UsuarioCreateManyCandidatoInputEnvelope = {
    data: UsuarioCreateManyCandidatoInput | UsuarioCreateManyCandidatoInput[]
    skipDuplicates?: boolean
  }

  export type ContatoCandidatoCreateWithoutCandidatoInput = {
    uuidContato?: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp?: string | null
    email: string
  }

  export type ContatoCandidatoUncheckedCreateWithoutCandidatoInput = {
    uuidContato?: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp?: string | null
    email: string
  }

  export type ContatoCandidatoCreateOrConnectWithoutCandidatoInput = {
    where: ContatoCandidatoWhereUniqueInput
    create: XOR<ContatoCandidatoCreateWithoutCandidatoInput, ContatoCandidatoUncheckedCreateWithoutCandidatoInput>
  }

  export type ContatoCandidatoCreateManyCandidatoInputEnvelope = {
    data: ContatoCandidatoCreateManyCandidatoInput | ContatoCandidatoCreateManyCandidatoInput[]
    skipDuplicates?: boolean
  }

  export type EleitorCreateWithoutCandidatoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutCandidatoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutCandidatoInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutCandidatoInput, EleitorUncheckedCreateWithoutCandidatoInput>
  }

  export type EleitorCreateManyCandidatoInputEnvelope = {
    data: EleitorCreateManyCandidatoInput | EleitorCreateManyCandidatoInput[]
    skipDuplicates?: boolean
  }

  export type coligacaoCreateWithoutCandidatosInput = {
    uuid?: string
    ano: number
    Usuario: UsuarioCreateNestedOneWithoutColigacaoInput
    Eleitores?: EleitorCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoUncheckedCreateWithoutCandidatosInput = {
    uuid?: string
    usuarioUuid: string
    ano: number
    Eleitores?: EleitorUncheckedCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoCreateOrConnectWithoutCandidatosInput = {
    where: coligacaoWhereUniqueInput
    create: XOR<coligacaoCreateWithoutCandidatosInput, coligacaoUncheckedCreateWithoutCandidatosInput>
  }

  export type PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput = {
    uuid?: string
    Local: LocalVotacaoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput
    Expectativa?: ExpectativaCreateNestedManyWithoutLocalvotacaoInput
  }

  export type PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput = {
    uuid?: string
    localVotacaoUuid: number
    Expectativa?: ExpectativaUncheckedCreateNestedManyWithoutLocalvotacaoInput
  }

  export type PlanejamentoLocalVotacaoCreateOrConnectWithoutCadandidatoInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    create: XOR<PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput>
  }

  export type PlanejamentoLocalVotacaoCreateManyCadandidatoInputEnvelope = {
    data: PlanejamentoLocalVotacaoCreateManyCadandidatoInput | PlanejamentoLocalVotacaoCreateManyCadandidatoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutCandidatoInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutCandidatoInput, UsuarioUncheckedUpdateWithoutCandidatoInput>
    create: XOR<UsuarioCreateWithoutCandidatoInput, UsuarioUncheckedCreateWithoutCandidatoInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutCandidatoInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutCandidatoInput, UsuarioUncheckedUpdateWithoutCandidatoInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutCandidatoInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutCandidatoInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    uuid?: StringFilter<"Usuario"> | string
    nomeCompleto?: StringFilter<"Usuario"> | string
    apelido?: StringNullableFilter<"Usuario"> | string | null
    isAtivo?: BoolFilter<"Usuario"> | boolean
    uuidCandidato?: StringFilter<"Usuario"> | string
    created_at?: DateTimeFilter<"Usuario"> | Date | string
    updated_at?: DateTimeFilter<"Usuario"> | Date | string
    perfil?: IntFilter<"Usuario"> | number
    dadosContatoUsuarioUuid?: StringNullableFilter<"Usuario"> | string | null
    enderecoUsuarioUuid?: StringNullableFilter<"Usuario"> | string | null
  }

  export type ContatoCandidatoUpsertWithWhereUniqueWithoutCandidatoInput = {
    where: ContatoCandidatoWhereUniqueInput
    update: XOR<ContatoCandidatoUpdateWithoutCandidatoInput, ContatoCandidatoUncheckedUpdateWithoutCandidatoInput>
    create: XOR<ContatoCandidatoCreateWithoutCandidatoInput, ContatoCandidatoUncheckedCreateWithoutCandidatoInput>
  }

  export type ContatoCandidatoUpdateWithWhereUniqueWithoutCandidatoInput = {
    where: ContatoCandidatoWhereUniqueInput
    data: XOR<ContatoCandidatoUpdateWithoutCandidatoInput, ContatoCandidatoUncheckedUpdateWithoutCandidatoInput>
  }

  export type ContatoCandidatoUpdateManyWithWhereWithoutCandidatoInput = {
    where: ContatoCandidatoScalarWhereInput
    data: XOR<ContatoCandidatoUpdateManyMutationInput, ContatoCandidatoUncheckedUpdateManyWithoutCandidatoInput>
  }

  export type ContatoCandidatoScalarWhereInput = {
    AND?: ContatoCandidatoScalarWhereInput | ContatoCandidatoScalarWhereInput[]
    OR?: ContatoCandidatoScalarWhereInput[]
    NOT?: ContatoCandidatoScalarWhereInput | ContatoCandidatoScalarWhereInput[]
    uuidContato?: StringFilter<"ContatoCandidato"> | string
    uuidEmpresa?: StringFilter<"ContatoCandidato"> | string
    nomeContato?: StringFilter<"ContatoCandidato"> | string
    cargo?: StringFilter<"ContatoCandidato"> | string
    telefone?: StringFilter<"ContatoCandidato"> | string
    whatsapp?: StringNullableFilter<"ContatoCandidato"> | string | null
    email?: StringFilter<"ContatoCandidato"> | string
  }

  export type EleitorUpsertWithWhereUniqueWithoutCandidatoInput = {
    where: EleitorWhereUniqueInput
    update: XOR<EleitorUpdateWithoutCandidatoInput, EleitorUncheckedUpdateWithoutCandidatoInput>
    create: XOR<EleitorCreateWithoutCandidatoInput, EleitorUncheckedCreateWithoutCandidatoInput>
  }

  export type EleitorUpdateWithWhereUniqueWithoutCandidatoInput = {
    where: EleitorWhereUniqueInput
    data: XOR<EleitorUpdateWithoutCandidatoInput, EleitorUncheckedUpdateWithoutCandidatoInput>
  }

  export type EleitorUpdateManyWithWhereWithoutCandidatoInput = {
    where: EleitorScalarWhereInput
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyWithoutCandidatoInput>
  }

  export type coligacaoUpsertWithoutCandidatosInput = {
    update: XOR<coligacaoUpdateWithoutCandidatosInput, coligacaoUncheckedUpdateWithoutCandidatosInput>
    create: XOR<coligacaoCreateWithoutCandidatosInput, coligacaoUncheckedCreateWithoutCandidatosInput>
    where?: coligacaoWhereInput
  }

  export type coligacaoUpdateToOneWithWhereWithoutCandidatosInput = {
    where?: coligacaoWhereInput
    data: XOR<coligacaoUpdateWithoutCandidatosInput, coligacaoUncheckedUpdateWithoutCandidatosInput>
  }

  export type coligacaoUpdateWithoutCandidatosInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Usuario?: UsuarioUpdateOneRequiredWithoutColigacaoNestedInput
    Eleitores?: EleitorUpdateManyWithoutColigacaoNestedInput
  }

  export type coligacaoUncheckedUpdateWithoutCandidatosInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Eleitores?: EleitorUncheckedUpdateManyWithoutColigacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutCadandidatoInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    update: XOR<PlanejamentoLocalVotacaoUpdateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedUpdateWithoutCadandidatoInput>
    create: XOR<PlanejamentoLocalVotacaoCreateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutCadandidatoInput>
  }

  export type PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutCadandidatoInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    data: XOR<PlanejamentoLocalVotacaoUpdateWithoutCadandidatoInput, PlanejamentoLocalVotacaoUncheckedUpdateWithoutCadandidatoInput>
  }

  export type PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutCadandidatoInput = {
    where: PlanejamentoLocalVotacaoScalarWhereInput
    data: XOR<PlanejamentoLocalVotacaoUpdateManyMutationInput, PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoInput>
  }

  export type PlanejamentoLocalVotacaoScalarWhereInput = {
    AND?: PlanejamentoLocalVotacaoScalarWhereInput | PlanejamentoLocalVotacaoScalarWhereInput[]
    OR?: PlanejamentoLocalVotacaoScalarWhereInput[]
    NOT?: PlanejamentoLocalVotacaoScalarWhereInput | PlanejamentoLocalVotacaoScalarWhereInput[]
    uuid?: StringFilter<"PlanejamentoLocalVotacao"> | string
    localVotacaoUuid?: IntFilter<"PlanejamentoLocalVotacao"> | number
    candidatoUuid?: StringFilter<"PlanejamentoLocalVotacao"> | string
  }

  export type CandidatoCreateWithoutContatoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    Usuario?: UsuarioCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorCreateNestedManyWithoutCandidatoInput
    coligacao?: coligacaoCreateNestedOneWithoutCandidatosInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoUncheckedCreateWithoutContatoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    coligacaoUuid?: string | null
    created_at?: Date | string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCandidatoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoCreateOrConnectWithoutContatoInput = {
    where: CandidatoWhereUniqueInput
    create: XOR<CandidatoCreateWithoutContatoInput, CandidatoUncheckedCreateWithoutContatoInput>
  }

  export type CandidatoUpsertWithoutContatoInput = {
    update: XOR<CandidatoUpdateWithoutContatoInput, CandidatoUncheckedUpdateWithoutContatoInput>
    create: XOR<CandidatoCreateWithoutContatoInput, CandidatoUncheckedCreateWithoutContatoInput>
    where?: CandidatoWhereInput
  }

  export type CandidatoUpdateToOneWithWhereWithoutContatoInput = {
    where?: CandidatoWhereInput
    data: XOR<CandidatoUpdateWithoutContatoInput, CandidatoUncheckedUpdateWithoutContatoInput>
  }

  export type CandidatoUpdateWithoutContatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUpdateManyWithoutCandidatoNestedInput
    coligacao?: coligacaoUpdateOneWithoutCandidatosNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoUncheckedUpdateWithoutContatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCandidatoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoNestedInput
  }

  export type atendimentoCreateWithoutAtendimentoInput = {
    uuid?: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
    criado_por: UsuarioCreateNestedOneWithoutAtendimentoCriadoInput
    responsavel: UsuarioCreateNestedOneWithoutAtendimentoInput
    eleitor: EleitorCreateNestedOneWithoutAtendimentoInput
  }

  export type atendimentoUncheckedCreateWithoutAtendimentoInput = {
    uuid?: string
    eleitorUuid: string
    usuarioUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
  }

  export type atendimentoCreateOrConnectWithoutAtendimentoInput = {
    where: atendimentoWhereUniqueInput
    create: XOR<atendimentoCreateWithoutAtendimentoInput, atendimentoUncheckedCreateWithoutAtendimentoInput>
  }

  export type atendimentoCreateManyAtendimentoInputEnvelope = {
    data: atendimentoCreateManyAtendimentoInput | atendimentoCreateManyAtendimentoInput[]
    skipDuplicates?: boolean
  }

  export type atendimentoUpsertWithWhereUniqueWithoutAtendimentoInput = {
    where: atendimentoWhereUniqueInput
    update: XOR<atendimentoUpdateWithoutAtendimentoInput, atendimentoUncheckedUpdateWithoutAtendimentoInput>
    create: XOR<atendimentoCreateWithoutAtendimentoInput, atendimentoUncheckedCreateWithoutAtendimentoInput>
  }

  export type atendimentoUpdateWithWhereUniqueWithoutAtendimentoInput = {
    where: atendimentoWhereUniqueInput
    data: XOR<atendimentoUpdateWithoutAtendimentoInput, atendimentoUncheckedUpdateWithoutAtendimentoInput>
  }

  export type atendimentoUpdateManyWithWhereWithoutAtendimentoInput = {
    where: atendimentoScalarWhereInput
    data: XOR<atendimentoUpdateManyMutationInput, atendimentoUncheckedUpdateManyWithoutAtendimentoInput>
  }

  export type atendimentoScalarWhereInput = {
    AND?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
    OR?: atendimentoScalarWhereInput[]
    NOT?: atendimentoScalarWhereInput | atendimentoScalarWhereInput[]
    uuid?: StringFilter<"atendimento"> | string
    eleitorUuid?: StringFilter<"atendimento"> | string
    usuarioUuid?: StringFilter<"atendimento"> | string
    responsavelUuid?: StringFilter<"atendimento"> | string
    custo?: FloatFilter<"atendimento"> | number
    dataatendimento?: DateTimeFilter<"atendimento"> | Date | string
    created_at?: DateTimeFilter<"atendimento"> | Date | string
    updated_at?: DateTimeNullableFilter<"atendimento"> | Date | string | null
    tipoAtendimento?: IntNullableFilter<"atendimento"> | number | null
    descricao?: StringNullableFilter<"atendimento"> | string | null
  }

  export type UsuarioCreateWithoutAtendimentoCriadoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutAtendimentoCriadoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutAtendimentoCriadoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAtendimentoCriadoInput, UsuarioUncheckedCreateWithoutAtendimentoCriadoInput>
  }

  export type UsuarioCreateWithoutAtendimentoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
  }

  export type UsuarioUncheckedCreateWithoutAtendimentoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
  }

  export type UsuarioCreateOrConnectWithoutAtendimentoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAtendimentoInput, UsuarioUncheckedCreateWithoutAtendimentoInput>
  }

  export type EleitorCreateWithoutAtendimentoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutAtendimentoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutAtendimentoInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutAtendimentoInput, EleitorUncheckedCreateWithoutAtendimentoInput>
  }

  export type tipoAtendimentoCreateWithoutAtendimentoInput = {
    descricao: string
  }

  export type tipoAtendimentoUncheckedCreateWithoutAtendimentoInput = {
    id?: number
    descricao: string
  }

  export type tipoAtendimentoCreateOrConnectWithoutAtendimentoInput = {
    where: tipoAtendimentoWhereUniqueInput
    create: XOR<tipoAtendimentoCreateWithoutAtendimentoInput, tipoAtendimentoUncheckedCreateWithoutAtendimentoInput>
  }

  export type UsuarioUpsertWithoutAtendimentoCriadoInput = {
    update: XOR<UsuarioUpdateWithoutAtendimentoCriadoInput, UsuarioUncheckedUpdateWithoutAtendimentoCriadoInput>
    create: XOR<UsuarioCreateWithoutAtendimentoCriadoInput, UsuarioUncheckedCreateWithoutAtendimentoCriadoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAtendimentoCriadoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAtendimentoCriadoInput, UsuarioUncheckedUpdateWithoutAtendimentoCriadoInput>
  }

  export type UsuarioUpdateWithoutAtendimentoCriadoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutAtendimentoCriadoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUpsertWithoutAtendimentoInput = {
    update: XOR<UsuarioUpdateWithoutAtendimentoInput, UsuarioUncheckedUpdateWithoutAtendimentoInput>
    create: XOR<UsuarioCreateWithoutAtendimentoInput, UsuarioUncheckedCreateWithoutAtendimentoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAtendimentoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAtendimentoInput, UsuarioUncheckedUpdateWithoutAtendimentoInput>
  }

  export type UsuarioUpdateWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
  }

  export type EleitorUpsertWithoutAtendimentoInput = {
    update: XOR<EleitorUpdateWithoutAtendimentoInput, EleitorUncheckedUpdateWithoutAtendimentoInput>
    create: XOR<EleitorCreateWithoutAtendimentoInput, EleitorUncheckedCreateWithoutAtendimentoInput>
    where?: EleitorWhereInput
  }

  export type EleitorUpdateToOneWithWhereWithoutAtendimentoInput = {
    where?: EleitorWhereInput
    data: XOR<EleitorUpdateWithoutAtendimentoInput, EleitorUncheckedUpdateWithoutAtendimentoInput>
  }

  export type EleitorUpdateWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type tipoAtendimentoUpsertWithoutAtendimentoInput = {
    update: XOR<tipoAtendimentoUpdateWithoutAtendimentoInput, tipoAtendimentoUncheckedUpdateWithoutAtendimentoInput>
    create: XOR<tipoAtendimentoCreateWithoutAtendimentoInput, tipoAtendimentoUncheckedCreateWithoutAtendimentoInput>
    where?: tipoAtendimentoWhereInput
  }

  export type tipoAtendimentoUpdateToOneWithWhereWithoutAtendimentoInput = {
    where?: tipoAtendimentoWhereInput
    data: XOR<tipoAtendimentoUpdateWithoutAtendimentoInput, tipoAtendimentoUncheckedUpdateWithoutAtendimentoInput>
  }

  export type tipoAtendimentoUpdateWithoutAtendimentoInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type tipoAtendimentoUncheckedUpdateWithoutAtendimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type EleitorCreateWithoutIndicacoesInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutIndicacoesInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutIndicacoesInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutIndicacoesInput, EleitorUncheckedCreateWithoutIndicacoesInput>
  }

  export type LocalVotacaoCreateWithoutEleitorInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisCreateNestedManyWithoutLocalVotacaoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoUncheckedCreateWithoutEleitorInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoUncheckedCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedCreateNestedManyWithoutLocalVotacaoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoCreateOrConnectWithoutEleitorInput = {
    where: LocalVotacaoWhereUniqueInput
    create: XOR<LocalVotacaoCreateWithoutEleitorInput, LocalVotacaoUncheckedCreateWithoutEleitorInput>
  }

  export type UsuarioCreateWithoutEleitorInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutEleitorInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEleitorInput, UsuarioUncheckedCreateWithoutEleitorInput>
  }

  export type CandidatoCreateWithoutEleitorInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    Usuario?: UsuarioCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoCreateNestedManyWithoutCandidatoInput
    coligacao?: coligacaoCreateNestedOneWithoutCandidatosInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    coligacaoUuid?: string | null
    created_at?: Date | string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoUncheckedCreateNestedManyWithoutCandidatoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoCreateOrConnectWithoutEleitorInput = {
    where: CandidatoWhereUniqueInput
    create: XOR<CandidatoCreateWithoutEleitorInput, CandidatoUncheckedCreateWithoutEleitorInput>
  }

  export type classificacaoCreateWithoutEleitorInput = {
    descricao: string
    hexColor: string
    eleitoruuid: string
  }

  export type classificacaoUncheckedCreateWithoutEleitorInput = {
    id?: number
    descricao: string
    hexColor: string
    eleitoruuid: string
  }

  export type classificacaoCreateOrConnectWithoutEleitorInput = {
    where: classificacaoWhereUniqueInput
    create: XOR<classificacaoCreateWithoutEleitorInput, classificacaoUncheckedCreateWithoutEleitorInput>
  }

  export type coligacaoCreateWithoutEleitoresInput = {
    uuid?: string
    ano: number
    Usuario: UsuarioCreateNestedOneWithoutColigacaoInput
    Candidatos?: CandidatoCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoUncheckedCreateWithoutEleitoresInput = {
    uuid?: string
    usuarioUuid: string
    ano: number
    Candidatos?: CandidatoUncheckedCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoCreateOrConnectWithoutEleitoresInput = {
    where: coligacaoWhereUniqueInput
    create: XOR<coligacaoCreateWithoutEleitoresInput, coligacaoUncheckedCreateWithoutEleitoresInput>
  }

  export type EleitorCreateWithoutFormiguinhaInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutFormiguinhaInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutFormiguinhaInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutFormiguinhaInput, EleitorUncheckedCreateWithoutFormiguinhaInput>
  }

  export type EleitorCreateManyFormiguinhaInputEnvelope = {
    data: EleitorCreateManyFormiguinhaInput | EleitorCreateManyFormiguinhaInput[]
    skipDuplicates?: boolean
  }

  export type contatoEleitorCreateWithoutEleitorInput = {
    uuid?: string
    email: string
    celular: string
  }

  export type contatoEleitorUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    email: string
    celular: string
  }

  export type contatoEleitorCreateOrConnectWithoutEleitorInput = {
    where: contatoEleitorWhereUniqueInput
    create: XOR<contatoEleitorCreateWithoutEleitorInput, contatoEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type contatoEleitorCreateManyEleitorInputEnvelope = {
    data: contatoEleitorCreateManyEleitorInput | contatoEleitorCreateManyEleitorInput[]
    skipDuplicates?: boolean
  }

  export type MidiasSociaisEleitorCreateWithoutEleitorInput = {
    uuid?: string
    instagram?: string | null
    facebook?: string | null
    twitter?: string | null
    tiktok?: string | null
  }

  export type MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    instagram?: string | null
    facebook?: string | null
    twitter?: string | null
    tiktok?: string | null
  }

  export type MidiasSociaisEleitorCreateOrConnectWithoutEleitorInput = {
    where: MidiasSociaisEleitorWhereUniqueInput
    create: XOR<MidiasSociaisEleitorCreateWithoutEleitorInput, MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type MidiasSociaisEleitorCreateManyEleitorInputEnvelope = {
    data: MidiasSociaisEleitorCreateManyEleitorInput | MidiasSociaisEleitorCreateManyEleitorInput[]
    skipDuplicates?: boolean
  }

  export type DadosPessoaisEleitorCreateWithoutEleitorInput = {
    uuid?: string
    cpf?: string | null
    rg?: string | null
    sessao: string
    zona: string
    localdevotacao: string
  }

  export type DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    cpf?: string | null
    rg?: string | null
    sessao: string
    zona: string
    localdevotacao: string
  }

  export type DadosPessoaisEleitorCreateOrConnectWithoutEleitorInput = {
    where: DadosPessoaisEleitorWhereUniqueInput
    create: XOR<DadosPessoaisEleitorCreateWithoutEleitorInput, DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type DadosPessoaisEleitorCreateManyEleitorInputEnvelope = {
    data: DadosPessoaisEleitorCreateManyEleitorInput | DadosPessoaisEleitorCreateManyEleitorInput[]
    skipDuplicates?: boolean
  }

  export type EnderecoEleitorCreateWithoutEleitorInput = {
    uuid?: string
    latitude: number
    longitude: number
    endereco?: string | null
    nCasa?: string | null
    cep?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    codIbge?: string | null
    uf?: string | null
    pais?: string | null
  }

  export type EnderecoEleitorUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    latitude: number
    longitude: number
    endereco?: string | null
    nCasa?: string | null
    cep?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    codIbge?: string | null
    uf?: string | null
    pais?: string | null
  }

  export type EnderecoEleitorCreateOrConnectWithoutEleitorInput = {
    where: EnderecoEleitorWhereUniqueInput
    create: XOR<EnderecoEleitorCreateWithoutEleitorInput, EnderecoEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type EnderecoEleitorCreateManyEleitorInputEnvelope = {
    data: EnderecoEleitorCreateManyEleitorInput | EnderecoEleitorCreateManyEleitorInput[]
    skipDuplicates?: boolean
  }

  export type atendimentoCreateWithoutEleitorInput = {
    uuid?: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
    criado_por: UsuarioCreateNestedOneWithoutAtendimentoCriadoInput
    responsavel: UsuarioCreateNestedOneWithoutAtendimentoInput
    atendimento?: tipoAtendimentoCreateNestedOneWithoutAtendimentoInput
  }

  export type atendimentoUncheckedCreateWithoutEleitorInput = {
    uuid?: string
    usuarioUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type atendimentoCreateOrConnectWithoutEleitorInput = {
    where: atendimentoWhereUniqueInput
    create: XOR<atendimentoCreateWithoutEleitorInput, atendimentoUncheckedCreateWithoutEleitorInput>
  }

  export type atendimentoCreateManyEleitorInputEnvelope = {
    data: atendimentoCreateManyEleitorInput | atendimentoCreateManyEleitorInput[]
    skipDuplicates?: boolean
  }

  export type EleitorUpsertWithoutIndicacoesInput = {
    update: XOR<EleitorUpdateWithoutIndicacoesInput, EleitorUncheckedUpdateWithoutIndicacoesInput>
    create: XOR<EleitorCreateWithoutIndicacoesInput, EleitorUncheckedCreateWithoutIndicacoesInput>
    where?: EleitorWhereInput
  }

  export type EleitorUpdateToOneWithWhereWithoutIndicacoesInput = {
    where?: EleitorWhereInput
    data: XOR<EleitorUpdateWithoutIndicacoesInput, EleitorUncheckedUpdateWithoutIndicacoesInput>
  }

  export type EleitorUpdateWithoutIndicacoesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutIndicacoesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type LocalVotacaoUpsertWithoutEleitorInput = {
    update: XOR<LocalVotacaoUpdateWithoutEleitorInput, LocalVotacaoUncheckedUpdateWithoutEleitorInput>
    create: XOR<LocalVotacaoCreateWithoutEleitorInput, LocalVotacaoUncheckedCreateWithoutEleitorInput>
    where?: LocalVotacaoWhereInput
  }

  export type LocalVotacaoUpdateToOneWithWhereWithoutEleitorInput = {
    where?: LocalVotacaoWhereInput
    data: XOR<LocalVotacaoUpdateWithoutEleitorInput, LocalVotacaoUncheckedUpdateWithoutEleitorInput>
  }

  export type LocalVotacaoUpdateWithoutEleitorInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUpdateManyWithoutLocalVotacaoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoUncheckedUpdateWithoutEleitorInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type UsuarioUpsertWithoutEleitorInput = {
    update: XOR<UsuarioUpdateWithoutEleitorInput, UsuarioUncheckedUpdateWithoutEleitorInput>
    create: XOR<UsuarioCreateWithoutEleitorInput, UsuarioUncheckedCreateWithoutEleitorInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEleitorInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEleitorInput, UsuarioUncheckedUpdateWithoutEleitorInput>
  }

  export type UsuarioUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type CandidatoUpsertWithoutEleitorInput = {
    update: XOR<CandidatoUpdateWithoutEleitorInput, CandidatoUncheckedUpdateWithoutEleitorInput>
    create: XOR<CandidatoCreateWithoutEleitorInput, CandidatoUncheckedCreateWithoutEleitorInput>
    where?: CandidatoWhereInput
  }

  export type CandidatoUpdateToOneWithWhereWithoutEleitorInput = {
    where?: CandidatoWhereInput
    data: XOR<CandidatoUpdateWithoutEleitorInput, CandidatoUncheckedUpdateWithoutEleitorInput>
  }

  export type CandidatoUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUpdateManyWithoutCandidatoNestedInput
    coligacao?: coligacaoUpdateOneWithoutCandidatosNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUncheckedUpdateManyWithoutCandidatoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoNestedInput
  }

  export type classificacaoUpsertWithoutEleitorInput = {
    update: XOR<classificacaoUpdateWithoutEleitorInput, classificacaoUncheckedUpdateWithoutEleitorInput>
    create: XOR<classificacaoCreateWithoutEleitorInput, classificacaoUncheckedCreateWithoutEleitorInput>
    where?: classificacaoWhereInput
  }

  export type classificacaoUpdateToOneWithWhereWithoutEleitorInput = {
    where?: classificacaoWhereInput
    data: XOR<classificacaoUpdateWithoutEleitorInput, classificacaoUncheckedUpdateWithoutEleitorInput>
  }

  export type classificacaoUpdateWithoutEleitorInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    eleitoruuid?: StringFieldUpdateOperationsInput | string
  }

  export type classificacaoUncheckedUpdateWithoutEleitorInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    hexColor?: StringFieldUpdateOperationsInput | string
    eleitoruuid?: StringFieldUpdateOperationsInput | string
  }

  export type coligacaoUpsertWithoutEleitoresInput = {
    update: XOR<coligacaoUpdateWithoutEleitoresInput, coligacaoUncheckedUpdateWithoutEleitoresInput>
    create: XOR<coligacaoCreateWithoutEleitoresInput, coligacaoUncheckedCreateWithoutEleitoresInput>
    where?: coligacaoWhereInput
  }

  export type coligacaoUpdateToOneWithWhereWithoutEleitoresInput = {
    where?: coligacaoWhereInput
    data: XOR<coligacaoUpdateWithoutEleitoresInput, coligacaoUncheckedUpdateWithoutEleitoresInput>
  }

  export type coligacaoUpdateWithoutEleitoresInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Usuario?: UsuarioUpdateOneRequiredWithoutColigacaoNestedInput
    Candidatos?: CandidatoUpdateManyWithoutColigacaoNestedInput
  }

  export type coligacaoUncheckedUpdateWithoutEleitoresInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Candidatos?: CandidatoUncheckedUpdateManyWithoutColigacaoNestedInput
  }

  export type EleitorUpsertWithWhereUniqueWithoutFormiguinhaInput = {
    where: EleitorWhereUniqueInput
    update: XOR<EleitorUpdateWithoutFormiguinhaInput, EleitorUncheckedUpdateWithoutFormiguinhaInput>
    create: XOR<EleitorCreateWithoutFormiguinhaInput, EleitorUncheckedCreateWithoutFormiguinhaInput>
  }

  export type EleitorUpdateWithWhereUniqueWithoutFormiguinhaInput = {
    where: EleitorWhereUniqueInput
    data: XOR<EleitorUpdateWithoutFormiguinhaInput, EleitorUncheckedUpdateWithoutFormiguinhaInput>
  }

  export type EleitorUpdateManyWithWhereWithoutFormiguinhaInput = {
    where: EleitorScalarWhereInput
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyWithoutFormiguinhaInput>
  }

  export type contatoEleitorUpsertWithWhereUniqueWithoutEleitorInput = {
    where: contatoEleitorWhereUniqueInput
    update: XOR<contatoEleitorUpdateWithoutEleitorInput, contatoEleitorUncheckedUpdateWithoutEleitorInput>
    create: XOR<contatoEleitorCreateWithoutEleitorInput, contatoEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type contatoEleitorUpdateWithWhereUniqueWithoutEleitorInput = {
    where: contatoEleitorWhereUniqueInput
    data: XOR<contatoEleitorUpdateWithoutEleitorInput, contatoEleitorUncheckedUpdateWithoutEleitorInput>
  }

  export type contatoEleitorUpdateManyWithWhereWithoutEleitorInput = {
    where: contatoEleitorScalarWhereInput
    data: XOR<contatoEleitorUpdateManyMutationInput, contatoEleitorUncheckedUpdateManyWithoutEleitorInput>
  }

  export type contatoEleitorScalarWhereInput = {
    AND?: contatoEleitorScalarWhereInput | contatoEleitorScalarWhereInput[]
    OR?: contatoEleitorScalarWhereInput[]
    NOT?: contatoEleitorScalarWhereInput | contatoEleitorScalarWhereInput[]
    uuid?: StringFilter<"contatoEleitor"> | string
    email?: StringFilter<"contatoEleitor"> | string
    celular?: StringFilter<"contatoEleitor"> | string
    eleitorUuid?: StringFilter<"contatoEleitor"> | string
  }

  export type MidiasSociaisEleitorUpsertWithWhereUniqueWithoutEleitorInput = {
    where: MidiasSociaisEleitorWhereUniqueInput
    update: XOR<MidiasSociaisEleitorUpdateWithoutEleitorInput, MidiasSociaisEleitorUncheckedUpdateWithoutEleitorInput>
    create: XOR<MidiasSociaisEleitorCreateWithoutEleitorInput, MidiasSociaisEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type MidiasSociaisEleitorUpdateWithWhereUniqueWithoutEleitorInput = {
    where: MidiasSociaisEleitorWhereUniqueInput
    data: XOR<MidiasSociaisEleitorUpdateWithoutEleitorInput, MidiasSociaisEleitorUncheckedUpdateWithoutEleitorInput>
  }

  export type MidiasSociaisEleitorUpdateManyWithWhereWithoutEleitorInput = {
    where: MidiasSociaisEleitorScalarWhereInput
    data: XOR<MidiasSociaisEleitorUpdateManyMutationInput, MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorInput>
  }

  export type MidiasSociaisEleitorScalarWhereInput = {
    AND?: MidiasSociaisEleitorScalarWhereInput | MidiasSociaisEleitorScalarWhereInput[]
    OR?: MidiasSociaisEleitorScalarWhereInput[]
    NOT?: MidiasSociaisEleitorScalarWhereInput | MidiasSociaisEleitorScalarWhereInput[]
    uuid?: StringFilter<"MidiasSociaisEleitor"> | string
    instagram?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    facebook?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    twitter?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    tiktok?: StringNullableFilter<"MidiasSociaisEleitor"> | string | null
    eleitorUuid?: StringFilter<"MidiasSociaisEleitor"> | string
  }

  export type DadosPessoaisEleitorUpsertWithWhereUniqueWithoutEleitorInput = {
    where: DadosPessoaisEleitorWhereUniqueInput
    update: XOR<DadosPessoaisEleitorUpdateWithoutEleitorInput, DadosPessoaisEleitorUncheckedUpdateWithoutEleitorInput>
    create: XOR<DadosPessoaisEleitorCreateWithoutEleitorInput, DadosPessoaisEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type DadosPessoaisEleitorUpdateWithWhereUniqueWithoutEleitorInput = {
    where: DadosPessoaisEleitorWhereUniqueInput
    data: XOR<DadosPessoaisEleitorUpdateWithoutEleitorInput, DadosPessoaisEleitorUncheckedUpdateWithoutEleitorInput>
  }

  export type DadosPessoaisEleitorUpdateManyWithWhereWithoutEleitorInput = {
    where: DadosPessoaisEleitorScalarWhereInput
    data: XOR<DadosPessoaisEleitorUpdateManyMutationInput, DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorInput>
  }

  export type DadosPessoaisEleitorScalarWhereInput = {
    AND?: DadosPessoaisEleitorScalarWhereInput | DadosPessoaisEleitorScalarWhereInput[]
    OR?: DadosPessoaisEleitorScalarWhereInput[]
    NOT?: DadosPessoaisEleitorScalarWhereInput | DadosPessoaisEleitorScalarWhereInput[]
    uuid?: StringFilter<"DadosPessoaisEleitor"> | string
    cpf?: StringNullableFilter<"DadosPessoaisEleitor"> | string | null
    rg?: StringNullableFilter<"DadosPessoaisEleitor"> | string | null
    sessao?: StringFilter<"DadosPessoaisEleitor"> | string
    zona?: StringFilter<"DadosPessoaisEleitor"> | string
    localdevotacao?: StringFilter<"DadosPessoaisEleitor"> | string
    eleitorUuid?: StringFilter<"DadosPessoaisEleitor"> | string
  }

  export type EnderecoEleitorUpsertWithWhereUniqueWithoutEleitorInput = {
    where: EnderecoEleitorWhereUniqueInput
    update: XOR<EnderecoEleitorUpdateWithoutEleitorInput, EnderecoEleitorUncheckedUpdateWithoutEleitorInput>
    create: XOR<EnderecoEleitorCreateWithoutEleitorInput, EnderecoEleitorUncheckedCreateWithoutEleitorInput>
  }

  export type EnderecoEleitorUpdateWithWhereUniqueWithoutEleitorInput = {
    where: EnderecoEleitorWhereUniqueInput
    data: XOR<EnderecoEleitorUpdateWithoutEleitorInput, EnderecoEleitorUncheckedUpdateWithoutEleitorInput>
  }

  export type EnderecoEleitorUpdateManyWithWhereWithoutEleitorInput = {
    where: EnderecoEleitorScalarWhereInput
    data: XOR<EnderecoEleitorUpdateManyMutationInput, EnderecoEleitorUncheckedUpdateManyWithoutEleitorInput>
  }

  export type EnderecoEleitorScalarWhereInput = {
    AND?: EnderecoEleitorScalarWhereInput | EnderecoEleitorScalarWhereInput[]
    OR?: EnderecoEleitorScalarWhereInput[]
    NOT?: EnderecoEleitorScalarWhereInput | EnderecoEleitorScalarWhereInput[]
    uuid?: StringFilter<"EnderecoEleitor"> | string
    latitude?: FloatFilter<"EnderecoEleitor"> | number
    longitude?: FloatFilter<"EnderecoEleitor"> | number
    endereco?: StringNullableFilter<"EnderecoEleitor"> | string | null
    nCasa?: StringNullableFilter<"EnderecoEleitor"> | string | null
    cep?: StringNullableFilter<"EnderecoEleitor"> | string | null
    complemento?: StringNullableFilter<"EnderecoEleitor"> | string | null
    bairro?: StringNullableFilter<"EnderecoEleitor"> | string | null
    cidade?: StringNullableFilter<"EnderecoEleitor"> | string | null
    codIbge?: StringNullableFilter<"EnderecoEleitor"> | string | null
    uf?: StringNullableFilter<"EnderecoEleitor"> | string | null
    pais?: StringNullableFilter<"EnderecoEleitor"> | string | null
    eleitorUuid?: StringNullableFilter<"EnderecoEleitor"> | string | null
  }

  export type atendimentoUpsertWithWhereUniqueWithoutEleitorInput = {
    where: atendimentoWhereUniqueInput
    update: XOR<atendimentoUpdateWithoutEleitorInput, atendimentoUncheckedUpdateWithoutEleitorInput>
    create: XOR<atendimentoCreateWithoutEleitorInput, atendimentoUncheckedCreateWithoutEleitorInput>
  }

  export type atendimentoUpdateWithWhereUniqueWithoutEleitorInput = {
    where: atendimentoWhereUniqueInput
    data: XOR<atendimentoUpdateWithoutEleitorInput, atendimentoUncheckedUpdateWithoutEleitorInput>
  }

  export type atendimentoUpdateManyWithWhereWithoutEleitorInput = {
    where: atendimentoScalarWhereInput
    data: XOR<atendimentoUpdateManyMutationInput, atendimentoUncheckedUpdateManyWithoutEleitorInput>
  }

  export type EleitorCreateWithoutContatoEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutContatoEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutContatoEleitorInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutContatoEleitorInput, EleitorUncheckedCreateWithoutContatoEleitorInput>
  }

  export type EleitorUpsertWithoutContatoEleitorInput = {
    update: XOR<EleitorUpdateWithoutContatoEleitorInput, EleitorUncheckedUpdateWithoutContatoEleitorInput>
    create: XOR<EleitorCreateWithoutContatoEleitorInput, EleitorUncheckedCreateWithoutContatoEleitorInput>
    where?: EleitorWhereInput
  }

  export type EleitorUpdateToOneWithWhereWithoutContatoEleitorInput = {
    where?: EleitorWhereInput
    data: XOR<EleitorUpdateWithoutContatoEleitorInput, EleitorUncheckedUpdateWithoutContatoEleitorInput>
  }

  export type EleitorUpdateWithoutContatoEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutContatoEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorCreateWithoutMidiasSociaisEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutMidiasSociaisEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutMidiasSociaisEleitorInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutMidiasSociaisEleitorInput, EleitorUncheckedCreateWithoutMidiasSociaisEleitorInput>
  }

  export type EleitorUpsertWithoutMidiasSociaisEleitorInput = {
    update: XOR<EleitorUpdateWithoutMidiasSociaisEleitorInput, EleitorUncheckedUpdateWithoutMidiasSociaisEleitorInput>
    create: XOR<EleitorCreateWithoutMidiasSociaisEleitorInput, EleitorUncheckedCreateWithoutMidiasSociaisEleitorInput>
    where?: EleitorWhereInput
  }

  export type EleitorUpdateToOneWithWhereWithoutMidiasSociaisEleitorInput = {
    where?: EleitorWhereInput
    data: XOR<EleitorUpdateWithoutMidiasSociaisEleitorInput, EleitorUncheckedUpdateWithoutMidiasSociaisEleitorInput>
  }

  export type EleitorUpdateWithoutMidiasSociaisEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutMidiasSociaisEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorCreateWithoutEnderecoEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutEnderecoEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutEnderecoEleitorInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutEnderecoEleitorInput, EleitorUncheckedCreateWithoutEnderecoEleitorInput>
  }

  export type EleitorUpsertWithoutEnderecoEleitorInput = {
    update: XOR<EleitorUpdateWithoutEnderecoEleitorInput, EleitorUncheckedUpdateWithoutEnderecoEleitorInput>
    create: XOR<EleitorCreateWithoutEnderecoEleitorInput, EleitorUncheckedCreateWithoutEnderecoEleitorInput>
    where?: EleitorWhereInput
  }

  export type EleitorUpdateToOneWithWhereWithoutEnderecoEleitorInput = {
    where?: EleitorWhereInput
    data: XOR<EleitorUpdateWithoutEnderecoEleitorInput, EleitorUncheckedUpdateWithoutEnderecoEleitorInput>
  }

  export type EleitorUpdateWithoutEnderecoEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutEnderecoEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorCreateWithoutDadosPessoaisEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutDadosPessoaisEleitorInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutDadosPessoaisEleitorInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutDadosPessoaisEleitorInput, EleitorUncheckedCreateWithoutDadosPessoaisEleitorInput>
  }

  export type EleitorUpsertWithoutDadosPessoaisEleitorInput = {
    update: XOR<EleitorUpdateWithoutDadosPessoaisEleitorInput, EleitorUncheckedUpdateWithoutDadosPessoaisEleitorInput>
    create: XOR<EleitorCreateWithoutDadosPessoaisEleitorInput, EleitorUncheckedCreateWithoutDadosPessoaisEleitorInput>
    where?: EleitorWhereInput
  }

  export type EleitorUpdateToOneWithWhereWithoutDadosPessoaisEleitorInput = {
    where?: EleitorWhereInput
    data: XOR<EleitorUpdateWithoutDadosPessoaisEleitorInput, EleitorUncheckedUpdateWithoutDadosPessoaisEleitorInput>
  }

  export type EleitorUpdateWithoutDadosPessoaisEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutDadosPessoaisEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type CandidatoCreateWithoutLocaldevotacao_has_candidatoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    Usuario?: UsuarioCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorCreateNestedManyWithoutCandidatoInput
    coligacao?: coligacaoCreateNestedOneWithoutCandidatosInput
  }

  export type CandidatoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    coligacaoUuid?: string | null
    created_at?: Date | string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutCandidatoInput
    contato?: ContatoCandidatoUncheckedCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCandidatoInput
  }

  export type CandidatoCreateOrConnectWithoutLocaldevotacao_has_candidatoInput = {
    where: CandidatoWhereUniqueInput
    create: XOR<CandidatoCreateWithoutLocaldevotacao_has_candidatoInput, CandidatoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
  }

  export type LocalVotacaoCreateWithoutLocaldevotacao_has_candidatoInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorCreateNestedManyWithoutSessaoeleitoralInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoUncheckedCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutSessaoeleitoralInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoCreateOrConnectWithoutLocaldevotacao_has_candidatoInput = {
    where: LocalVotacaoWhereUniqueInput
    create: XOR<LocalVotacaoCreateWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
  }

  export type ExpectativaCreateWithoutLocalvotacaoInput = {
    expectativa?: number
  }

  export type ExpectativaUncheckedCreateWithoutLocalvotacaoInput = {
    expectativa?: number
  }

  export type ExpectativaCreateOrConnectWithoutLocalvotacaoInput = {
    where: ExpectativaWhereUniqueInput
    create: XOR<ExpectativaCreateWithoutLocalvotacaoInput, ExpectativaUncheckedCreateWithoutLocalvotacaoInput>
  }

  export type ExpectativaCreateManyLocalvotacaoInputEnvelope = {
    data: ExpectativaCreateManyLocalvotacaoInput | ExpectativaCreateManyLocalvotacaoInput[]
    skipDuplicates?: boolean
  }

  export type CandidatoUpsertWithoutLocaldevotacao_has_candidatoInput = {
    update: XOR<CandidatoUpdateWithoutLocaldevotacao_has_candidatoInput, CandidatoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput>
    create: XOR<CandidatoCreateWithoutLocaldevotacao_has_candidatoInput, CandidatoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
    where?: CandidatoWhereInput
  }

  export type CandidatoUpdateToOneWithWhereWithoutLocaldevotacao_has_candidatoInput = {
    where?: CandidatoWhereInput
    data: XOR<CandidatoUpdateWithoutLocaldevotacao_has_candidatoInput, CandidatoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput>
  }

  export type CandidatoUpdateWithoutLocaldevotacao_has_candidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUpdateManyWithoutCandidatoNestedInput
    coligacao?: coligacaoUpdateOneWithoutCandidatosNestedInput
  }

  export type CandidatoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUncheckedUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCandidatoNestedInput
  }

  export type LocalVotacaoUpsertWithoutLocaldevotacao_has_candidatoInput = {
    update: XOR<LocalVotacaoUpdateWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput>
    create: XOR<LocalVotacaoCreateWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUncheckedCreateWithoutLocaldevotacao_has_candidatoInput>
    where?: LocalVotacaoWhereInput
  }

  export type LocalVotacaoUpdateToOneWithWhereWithoutLocaldevotacao_has_candidatoInput = {
    where?: LocalVotacaoWhereInput
    data: XOR<LocalVotacaoUpdateWithoutLocaldevotacao_has_candidatoInput, LocalVotacaoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput>
  }

  export type LocalVotacaoUpdateWithoutLocaldevotacao_has_candidatoInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUpdateManyWithoutSessaoeleitoralNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoUncheckedUpdateWithoutLocaldevotacao_has_candidatoInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutSessaoeleitoralNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type ExpectativaUpsertWithWhereUniqueWithoutLocalvotacaoInput = {
    where: ExpectativaWhereUniqueInput
    update: XOR<ExpectativaUpdateWithoutLocalvotacaoInput, ExpectativaUncheckedUpdateWithoutLocalvotacaoInput>
    create: XOR<ExpectativaCreateWithoutLocalvotacaoInput, ExpectativaUncheckedCreateWithoutLocalvotacaoInput>
  }

  export type ExpectativaUpdateWithWhereUniqueWithoutLocalvotacaoInput = {
    where: ExpectativaWhereUniqueInput
    data: XOR<ExpectativaUpdateWithoutLocalvotacaoInput, ExpectativaUncheckedUpdateWithoutLocalvotacaoInput>
  }

  export type ExpectativaUpdateManyWithWhereWithoutLocalvotacaoInput = {
    where: ExpectativaScalarWhereInput
    data: XOR<ExpectativaUpdateManyMutationInput, ExpectativaUncheckedUpdateManyWithoutLocalvotacaoInput>
  }

  export type ExpectativaScalarWhereInput = {
    AND?: ExpectativaScalarWhereInput | ExpectativaScalarWhereInput[]
    OR?: ExpectativaScalarWhereInput[]
    NOT?: ExpectativaScalarWhereInput | ExpectativaScalarWhereInput[]
    localdevotacao_has_CandidatoUuid?: StringFilter<"Expectativa"> | string
    expectativa?: FloatFilter<"Expectativa"> | number
  }

  export type PlanejamentoLocalVotacaoCreateWithoutExpectativaInput = {
    uuid?: string
    cadandidato: CandidatoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput
    Local: LocalVotacaoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput
  }

  export type PlanejamentoLocalVotacaoUncheckedCreateWithoutExpectativaInput = {
    uuid?: string
    localVotacaoUuid: number
    candidatoUuid: string
  }

  export type PlanejamentoLocalVotacaoCreateOrConnectWithoutExpectativaInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    create: XOR<PlanejamentoLocalVotacaoCreateWithoutExpectativaInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutExpectativaInput>
  }

  export type PlanejamentoLocalVotacaoUpsertWithoutExpectativaInput = {
    update: XOR<PlanejamentoLocalVotacaoUpdateWithoutExpectativaInput, PlanejamentoLocalVotacaoUncheckedUpdateWithoutExpectativaInput>
    create: XOR<PlanejamentoLocalVotacaoCreateWithoutExpectativaInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutExpectativaInput>
    where?: PlanejamentoLocalVotacaoWhereInput
  }

  export type PlanejamentoLocalVotacaoUpdateToOneWithWhereWithoutExpectativaInput = {
    where?: PlanejamentoLocalVotacaoWhereInput
    data: XOR<PlanejamentoLocalVotacaoUpdateWithoutExpectativaInput, PlanejamentoLocalVotacaoUncheckedUpdateWithoutExpectativaInput>
  }

  export type PlanejamentoLocalVotacaoUpdateWithoutExpectativaInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cadandidato?: CandidatoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput
    Local?: LocalVotacaoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateWithoutExpectativaInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    candidatoUuid?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput = {
    uuid?: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
  }

  export type EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput = {
    uuid?: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
  }

  export type EnderecoLocalVotacaoCreateOrConnectWithoutLocalVotacaoInput = {
    where: EnderecoLocalVotacaoWhereUniqueInput
    create: XOR<EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput>
  }

  export type EnderecoLocalVotacaoCreateManyLocalVotacaoInputEnvelope = {
    data: EnderecoLocalVotacaoCreateManyLocalVotacaoInput | EnderecoLocalVotacaoCreateManyLocalVotacaoInput[]
    skipDuplicates?: boolean
  }

  export type SessoesEleitoraisCreateWithoutLocalVotacaoInput = {
    uuid?: string
    sessao: string
    zona: string
    nVotantes: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput = {
    uuid?: string
    sessao: string
    zona: string
    nVotantes: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessoesEleitoraisCreateOrConnectWithoutLocalVotacaoInput = {
    where: SessoesEleitoraisWhereUniqueInput
    create: XOR<SessoesEleitoraisCreateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput>
  }

  export type SessoesEleitoraisCreateManyLocalVotacaoInputEnvelope = {
    data: SessoesEleitoraisCreateManyLocalVotacaoInput | SessoesEleitoraisCreateManyLocalVotacaoInput[]
    skipDuplicates?: boolean
  }

  export type EleitorCreateWithoutSessaoeleitoralInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutSessaoeleitoralInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutSessaoeleitoralInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutSessaoeleitoralInput, EleitorUncheckedCreateWithoutSessaoeleitoralInput>
  }

  export type EleitorCreateManySessaoeleitoralInputEnvelope = {
    data: EleitorCreateManySessaoeleitoralInput | EleitorCreateManySessaoeleitoralInput[]
    skipDuplicates?: boolean
  }

  export type PlanejamentoLocalVotacaoCreateWithoutLocalInput = {
    uuid?: string
    cadandidato: CandidatoCreateNestedOneWithoutLocaldevotacao_has_candidatoInput
    Expectativa?: ExpectativaCreateNestedManyWithoutLocalvotacaoInput
  }

  export type PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput = {
    uuid?: string
    candidatoUuid: string
    Expectativa?: ExpectativaUncheckedCreateNestedManyWithoutLocalvotacaoInput
  }

  export type PlanejamentoLocalVotacaoCreateOrConnectWithoutLocalInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    create: XOR<PlanejamentoLocalVotacaoCreateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput>
  }

  export type PlanejamentoLocalVotacaoCreateManyLocalInputEnvelope = {
    data: PlanejamentoLocalVotacaoCreateManyLocalInput | PlanejamentoLocalVotacaoCreateManyLocalInput[]
    skipDuplicates?: boolean
  }

  export type LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput = {
    uuid?: string
    candidatoEleicao: CandidatosEleicaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoCreateNestedManyWithoutLocalvotacaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput = {
    uuid?: string
    candidatosEleicaoSequencial: bigint | number
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUncheckedCreateNestedManyWithoutLocalvotacaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutLocalvontacaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInputEnvelope = {
    data: LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInput | LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInput[]
    skipDuplicates?: boolean
  }

  export type EnderecoLocalVotacaoUpsertWithWhereUniqueWithoutLocalVotacaoInput = {
    where: EnderecoLocalVotacaoWhereUniqueInput
    update: XOR<EnderecoLocalVotacaoUpdateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedUpdateWithoutLocalVotacaoInput>
    create: XOR<EnderecoLocalVotacaoCreateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedCreateWithoutLocalVotacaoInput>
  }

  export type EnderecoLocalVotacaoUpdateWithWhereUniqueWithoutLocalVotacaoInput = {
    where: EnderecoLocalVotacaoWhereUniqueInput
    data: XOR<EnderecoLocalVotacaoUpdateWithoutLocalVotacaoInput, EnderecoLocalVotacaoUncheckedUpdateWithoutLocalVotacaoInput>
  }

  export type EnderecoLocalVotacaoUpdateManyWithWhereWithoutLocalVotacaoInput = {
    where: EnderecoLocalVotacaoScalarWhereInput
    data: XOR<EnderecoLocalVotacaoUpdateManyMutationInput, EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoInput>
  }

  export type EnderecoLocalVotacaoScalarWhereInput = {
    AND?: EnderecoLocalVotacaoScalarWhereInput | EnderecoLocalVotacaoScalarWhereInput[]
    OR?: EnderecoLocalVotacaoScalarWhereInput[]
    NOT?: EnderecoLocalVotacaoScalarWhereInput | EnderecoLocalVotacaoScalarWhereInput[]
    uuid?: StringFilter<"EnderecoLocalVotacao"> | string
    endereco?: StringFilter<"EnderecoLocalVotacao"> | string
    bairro?: StringFilter<"EnderecoLocalVotacao"> | string
    cidade?: StringFilter<"EnderecoLocalVotacao"> | string
    uf?: StringFilter<"EnderecoLocalVotacao"> | string
    cep?: IntFilter<"EnderecoLocalVotacao"> | number
    latitude?: FloatFilter<"EnderecoLocalVotacao"> | number
    longitude?: FloatFilter<"EnderecoLocalVotacao"> | number
    localVotacaoUuid?: IntNullableFilter<"EnderecoLocalVotacao"> | number | null
  }

  export type SessoesEleitoraisUpsertWithWhereUniqueWithoutLocalVotacaoInput = {
    where: SessoesEleitoraisWhereUniqueInput
    update: XOR<SessoesEleitoraisUpdateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedUpdateWithoutLocalVotacaoInput>
    create: XOR<SessoesEleitoraisCreateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedCreateWithoutLocalVotacaoInput>
  }

  export type SessoesEleitoraisUpdateWithWhereUniqueWithoutLocalVotacaoInput = {
    where: SessoesEleitoraisWhereUniqueInput
    data: XOR<SessoesEleitoraisUpdateWithoutLocalVotacaoInput, SessoesEleitoraisUncheckedUpdateWithoutLocalVotacaoInput>
  }

  export type SessoesEleitoraisUpdateManyWithWhereWithoutLocalVotacaoInput = {
    where: SessoesEleitoraisScalarWhereInput
    data: XOR<SessoesEleitoraisUpdateManyMutationInput, SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoInput>
  }

  export type SessoesEleitoraisScalarWhereInput = {
    AND?: SessoesEleitoraisScalarWhereInput | SessoesEleitoraisScalarWhereInput[]
    OR?: SessoesEleitoraisScalarWhereInput[]
    NOT?: SessoesEleitoraisScalarWhereInput | SessoesEleitoraisScalarWhereInput[]
    uuid?: StringFilter<"SessoesEleitorais"> | string
    sessao?: StringFilter<"SessoesEleitorais"> | string
    zona?: StringFilter<"SessoesEleitorais"> | string
    nVotantes?: IntFilter<"SessoesEleitorais"> | number
    localVotacaoUuid?: IntNullableFilter<"SessoesEleitorais"> | number | null
    createdAt?: DateTimeFilter<"SessoesEleitorais"> | Date | string
    updatedAt?: DateTimeFilter<"SessoesEleitorais"> | Date | string
  }

  export type EleitorUpsertWithWhereUniqueWithoutSessaoeleitoralInput = {
    where: EleitorWhereUniqueInput
    update: XOR<EleitorUpdateWithoutSessaoeleitoralInput, EleitorUncheckedUpdateWithoutSessaoeleitoralInput>
    create: XOR<EleitorCreateWithoutSessaoeleitoralInput, EleitorUncheckedCreateWithoutSessaoeleitoralInput>
  }

  export type EleitorUpdateWithWhereUniqueWithoutSessaoeleitoralInput = {
    where: EleitorWhereUniqueInput
    data: XOR<EleitorUpdateWithoutSessaoeleitoralInput, EleitorUncheckedUpdateWithoutSessaoeleitoralInput>
  }

  export type EleitorUpdateManyWithWhereWithoutSessaoeleitoralInput = {
    where: EleitorScalarWhereInput
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyWithoutSessaoeleitoralInput>
  }

  export type PlanejamentoLocalVotacaoUpsertWithWhereUniqueWithoutLocalInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    update: XOR<PlanejamentoLocalVotacaoUpdateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedUpdateWithoutLocalInput>
    create: XOR<PlanejamentoLocalVotacaoCreateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedCreateWithoutLocalInput>
  }

  export type PlanejamentoLocalVotacaoUpdateWithWhereUniqueWithoutLocalInput = {
    where: PlanejamentoLocalVotacaoWhereUniqueInput
    data: XOR<PlanejamentoLocalVotacaoUpdateWithoutLocalInput, PlanejamentoLocalVotacaoUncheckedUpdateWithoutLocalInput>
  }

  export type PlanejamentoLocalVotacaoUpdateManyWithWhereWithoutLocalInput = {
    where: PlanejamentoLocalVotacaoScalarWhereInput
    data: XOR<PlanejamentoLocalVotacaoUpdateManyMutationInput, PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutLocalvontacaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    update: XOR<LocalVotacao_has_candidatoEleicaoUpdateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutLocalvontacaoInput>
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutLocalvontacaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutLocalvontacaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateWithoutLocalvontacaoInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutLocalvontacaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutLocalvontacaoInput = {
    where: LocalVotacao_has_candidatoEleicaoScalarWhereInput
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateManyMutationInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoScalarWhereInput = {
    AND?: LocalVotacao_has_candidatoEleicaoScalarWhereInput | LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
    OR?: LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
    NOT?: LocalVotacao_has_candidatoEleicaoScalarWhereInput | LocalVotacao_has_candidatoEleicaoScalarWhereInput[]
    uuid?: StringFilter<"LocalVotacao_has_candidatoEleicao"> | string
    localVotacaoUuid?: IntFilter<"LocalVotacao_has_candidatoEleicao"> | number
    candidatosEleicaoSequencial?: BigIntFilter<"LocalVotacao_has_candidatoEleicao"> | bigint | number
  }

  export type CandidatosEleicaoCreateWithoutEleicaoInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    numero_urna: number
    municipio: MunicipioCreateNestedOneWithoutCandidatosEleicaoInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutCandidatoEleicaoInput
  }

  export type CandidatosEleicaoUncheckedCreateWithoutEleicaoInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    municipioId: number
    numero_urna: number
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutCandidatoEleicaoInput
  }

  export type CandidatosEleicaoCreateOrConnectWithoutEleicaoInput = {
    where: CandidatosEleicaoWhereUniqueInput
    create: XOR<CandidatosEleicaoCreateWithoutEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutEleicaoInput>
  }

  export type CandidatosEleicaoCreateManyEleicaoInputEnvelope = {
    data: CandidatosEleicaoCreateManyEleicaoInput | CandidatosEleicaoCreateManyEleicaoInput[]
    skipDuplicates?: boolean
  }

  export type CandidatosEleicaoUpsertWithWhereUniqueWithoutEleicaoInput = {
    where: CandidatosEleicaoWhereUniqueInput
    update: XOR<CandidatosEleicaoUpdateWithoutEleicaoInput, CandidatosEleicaoUncheckedUpdateWithoutEleicaoInput>
    create: XOR<CandidatosEleicaoCreateWithoutEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutEleicaoInput>
  }

  export type CandidatosEleicaoUpdateWithWhereUniqueWithoutEleicaoInput = {
    where: CandidatosEleicaoWhereUniqueInput
    data: XOR<CandidatosEleicaoUpdateWithoutEleicaoInput, CandidatosEleicaoUncheckedUpdateWithoutEleicaoInput>
  }

  export type CandidatosEleicaoUpdateManyWithWhereWithoutEleicaoInput = {
    where: CandidatosEleicaoScalarWhereInput
    data: XOR<CandidatosEleicaoUpdateManyMutationInput, CandidatosEleicaoUncheckedUpdateManyWithoutEleicaoInput>
  }

  export type CandidatosEleicaoScalarWhereInput = {
    AND?: CandidatosEleicaoScalarWhereInput | CandidatosEleicaoScalarWhereInput[]
    OR?: CandidatosEleicaoScalarWhereInput[]
    NOT?: CandidatosEleicaoScalarWhereInput | CandidatosEleicaoScalarWhereInput[]
    sequencial?: BigIntFilter<"CandidatosEleicao"> | bigint | number
    nomecandidato?: StringFilter<"CandidatosEleicao"> | string
    cargoCandidato?: StringFilter<"CandidatosEleicao"> | string
    municipioId?: IntFilter<"CandidatosEleicao"> | number
    numero_urna?: IntFilter<"CandidatosEleicao"> | number
    eleicoesUuid?: StringFilter<"CandidatosEleicao"> | string
  }

  export type MunicipioCreateWithoutUfInput = {
    descricao: string
    CandidatosEleicao?: CandidatosEleicaoCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioUncheckedCreateWithoutUfInput = {
    id?: number
    descricao: string
    CandidatosEleicao?: CandidatosEleicaoUncheckedCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioCreateOrConnectWithoutUfInput = {
    where: MunicipioWhereUniqueInput
    create: XOR<MunicipioCreateWithoutUfInput, MunicipioUncheckedCreateWithoutUfInput>
  }

  export type MunicipioCreateManyUfInputEnvelope = {
    data: MunicipioCreateManyUfInput | MunicipioCreateManyUfInput[]
    skipDuplicates?: boolean
  }

  export type MunicipioUpsertWithWhereUniqueWithoutUfInput = {
    where: MunicipioWhereUniqueInput
    update: XOR<MunicipioUpdateWithoutUfInput, MunicipioUncheckedUpdateWithoutUfInput>
    create: XOR<MunicipioCreateWithoutUfInput, MunicipioUncheckedCreateWithoutUfInput>
  }

  export type MunicipioUpdateWithWhereUniqueWithoutUfInput = {
    where: MunicipioWhereUniqueInput
    data: XOR<MunicipioUpdateWithoutUfInput, MunicipioUncheckedUpdateWithoutUfInput>
  }

  export type MunicipioUpdateManyWithWhereWithoutUfInput = {
    where: MunicipioScalarWhereInput
    data: XOR<MunicipioUpdateManyMutationInput, MunicipioUncheckedUpdateManyWithoutUfInput>
  }

  export type MunicipioScalarWhereInput = {
    AND?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
    OR?: MunicipioScalarWhereInput[]
    NOT?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
    id?: IntFilter<"Municipio"> | number
    uFId?: IntFilter<"Municipio"> | number
    descricao?: StringFilter<"Municipio"> | string
  }

  export type UFCreateWithoutMunicipioInput = {
    descricao: string
  }

  export type UFUncheckedCreateWithoutMunicipioInput = {
    id?: number
    descricao: string
  }

  export type UFCreateOrConnectWithoutMunicipioInput = {
    where: UFWhereUniqueInput
    create: XOR<UFCreateWithoutMunicipioInput, UFUncheckedCreateWithoutMunicipioInput>
  }

  export type CandidatosEleicaoCreateWithoutMunicipioInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    numero_urna: number
    eleicao: EleicoesCreateNestedOneWithoutCandidatosEleicaoInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutCandidatoEleicaoInput
  }

  export type CandidatosEleicaoUncheckedCreateWithoutMunicipioInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    numero_urna: number
    eleicoesUuid: string
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutCandidatoEleicaoInput
  }

  export type CandidatosEleicaoCreateOrConnectWithoutMunicipioInput = {
    where: CandidatosEleicaoWhereUniqueInput
    create: XOR<CandidatosEleicaoCreateWithoutMunicipioInput, CandidatosEleicaoUncheckedCreateWithoutMunicipioInput>
  }

  export type CandidatosEleicaoCreateManyMunicipioInputEnvelope = {
    data: CandidatosEleicaoCreateManyMunicipioInput | CandidatosEleicaoCreateManyMunicipioInput[]
    skipDuplicates?: boolean
  }

  export type UFUpsertWithoutMunicipioInput = {
    update: XOR<UFUpdateWithoutMunicipioInput, UFUncheckedUpdateWithoutMunicipioInput>
    create: XOR<UFCreateWithoutMunicipioInput, UFUncheckedCreateWithoutMunicipioInput>
    where?: UFWhereInput
  }

  export type UFUpdateToOneWithWhereWithoutMunicipioInput = {
    where?: UFWhereInput
    data: XOR<UFUpdateWithoutMunicipioInput, UFUncheckedUpdateWithoutMunicipioInput>
  }

  export type UFUpdateWithoutMunicipioInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type UFUncheckedUpdateWithoutMunicipioInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type CandidatosEleicaoUpsertWithWhereUniqueWithoutMunicipioInput = {
    where: CandidatosEleicaoWhereUniqueInput
    update: XOR<CandidatosEleicaoUpdateWithoutMunicipioInput, CandidatosEleicaoUncheckedUpdateWithoutMunicipioInput>
    create: XOR<CandidatosEleicaoCreateWithoutMunicipioInput, CandidatosEleicaoUncheckedCreateWithoutMunicipioInput>
  }

  export type CandidatosEleicaoUpdateWithWhereUniqueWithoutMunicipioInput = {
    where: CandidatosEleicaoWhereUniqueInput
    data: XOR<CandidatosEleicaoUpdateWithoutMunicipioInput, CandidatosEleicaoUncheckedUpdateWithoutMunicipioInput>
  }

  export type CandidatosEleicaoUpdateManyWithWhereWithoutMunicipioInput = {
    where: CandidatosEleicaoScalarWhereInput
    data: XOR<CandidatosEleicaoUpdateManyMutationInput, CandidatosEleicaoUncheckedUpdateManyWithoutMunicipioInput>
  }

  export type EleicoesCreateWithoutCandidatosEleicaoInput = {
    uuid?: string
    ano: number
    descricao: string
  }

  export type EleicoesUncheckedCreateWithoutCandidatosEleicaoInput = {
    uuid?: string
    ano: number
    descricao: string
  }

  export type EleicoesCreateOrConnectWithoutCandidatosEleicaoInput = {
    where: EleicoesWhereUniqueInput
    create: XOR<EleicoesCreateWithoutCandidatosEleicaoInput, EleicoesUncheckedCreateWithoutCandidatosEleicaoInput>
  }

  export type MunicipioCreateWithoutCandidatosEleicaoInput = {
    descricao: string
    uf: UFCreateNestedOneWithoutMunicipioInput
  }

  export type MunicipioUncheckedCreateWithoutCandidatosEleicaoInput = {
    id?: number
    uFId: number
    descricao: string
  }

  export type MunicipioCreateOrConnectWithoutCandidatosEleicaoInput = {
    where: MunicipioWhereUniqueInput
    create: XOR<MunicipioCreateWithoutCandidatosEleicaoInput, MunicipioUncheckedCreateWithoutCandidatosEleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput = {
    uuid?: string
    localvontacao: LocalVotacaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoCreateNestedManyWithoutLocalvotacaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput = {
    uuid?: string
    localVotacaoUuid: number
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUncheckedCreateNestedManyWithoutLocalvotacaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutCandidatoEleicaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInputEnvelope = {
    data: LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInput | LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInput[]
    skipDuplicates?: boolean
  }

  export type EleicoesUpsertWithoutCandidatosEleicaoInput = {
    update: XOR<EleicoesUpdateWithoutCandidatosEleicaoInput, EleicoesUncheckedUpdateWithoutCandidatosEleicaoInput>
    create: XOR<EleicoesCreateWithoutCandidatosEleicaoInput, EleicoesUncheckedCreateWithoutCandidatosEleicaoInput>
    where?: EleicoesWhereInput
  }

  export type EleicoesUpdateToOneWithWhereWithoutCandidatosEleicaoInput = {
    where?: EleicoesWhereInput
    data: XOR<EleicoesUpdateWithoutCandidatosEleicaoInput, EleicoesUncheckedUpdateWithoutCandidatosEleicaoInput>
  }

  export type EleicoesUpdateWithoutCandidatosEleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type EleicoesUncheckedUpdateWithoutCandidatosEleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type MunicipioUpsertWithoutCandidatosEleicaoInput = {
    update: XOR<MunicipioUpdateWithoutCandidatosEleicaoInput, MunicipioUncheckedUpdateWithoutCandidatosEleicaoInput>
    create: XOR<MunicipioCreateWithoutCandidatosEleicaoInput, MunicipioUncheckedCreateWithoutCandidatosEleicaoInput>
    where?: MunicipioWhereInput
  }

  export type MunicipioUpdateToOneWithWhereWithoutCandidatosEleicaoInput = {
    where?: MunicipioWhereInput
    data: XOR<MunicipioUpdateWithoutCandidatosEleicaoInput, MunicipioUncheckedUpdateWithoutCandidatosEleicaoInput>
  }

  export type MunicipioUpdateWithoutCandidatosEleicaoInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    uf?: UFUpdateOneRequiredWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateWithoutCandidatosEleicaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    uFId?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type LocalVotacao_has_candidatoEleicaoUpsertWithWhereUniqueWithoutCandidatoEleicaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    update: XOR<LocalVotacao_has_candidatoEleicaoUpdateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutCandidatoEleicaoInput>
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutCandidatoEleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateWithWhereUniqueWithoutCandidatoEleicaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateWithoutCandidatoEleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutCandidatoEleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateManyWithWhereWithoutCandidatoEleicaoInput = {
    where: LocalVotacao_has_candidatoEleicaoScalarWhereInput
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateManyMutationInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutCandidatoEleicaoInput>
  }

  export type LocalVotacaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutLocalInput
  }

  export type LocalVotacaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoUncheckedCreateNestedManyWithoutLocalVotacaoInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutLocalInput
  }

  export type LocalVotacaoCreateOrConnectWithoutLocalVotacao_has_candidatoEleicaoInput = {
    where: LocalVotacaoWhereUniqueInput
    create: XOR<LocalVotacaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
  }

  export type CandidatosEleicaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    numero_urna: number
    eleicao: EleicoesCreateNestedOneWithoutCandidatosEleicaoInput
    municipio: MunicipioCreateNestedOneWithoutCandidatosEleicaoInput
  }

  export type CandidatosEleicaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    municipioId: number
    numero_urna: number
    eleicoesUuid: string
  }

  export type CandidatosEleicaoCreateOrConnectWithoutLocalVotacao_has_candidatoEleicaoInput = {
    where: CandidatosEleicaoWhereUniqueInput
    create: XOR<CandidatosEleicaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
  }

  export type quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput = {
    votos: number
  }

  export type quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput = {
    votos: number
  }

  export type quantidade_votos_eleicaoCreateOrConnectWithoutLocalvotacaoInput = {
    where: quantidade_votos_eleicaoWhereUniqueInput
    create: XOR<quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput>
  }

  export type quantidade_votos_eleicaoCreateManyLocalvotacaoInputEnvelope = {
    data: quantidade_votos_eleicaoCreateManyLocalvotacaoInput | quantidade_votos_eleicaoCreateManyLocalvotacaoInput[]
    skipDuplicates?: boolean
  }

  export type LocalVotacaoUpsertWithoutLocalVotacao_has_candidatoEleicaoInput = {
    update: XOR<LocalVotacaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>
    create: XOR<LocalVotacaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
    where?: LocalVotacaoWhereInput
  }

  export type LocalVotacaoUpdateToOneWithWhereWithoutLocalVotacao_has_candidatoEleicaoInput = {
    where?: LocalVotacaoWhereInput
    data: XOR<LocalVotacaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput, LocalVotacaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>
  }

  export type LocalVotacaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutLocalNestedInput
  }

  export type LocalVotacaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    sessoesEleitorais?: SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalNestedInput
  }

  export type CandidatosEleicaoUpsertWithoutLocalVotacao_has_candidatoEleicaoInput = {
    update: XOR<CandidatosEleicaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>
    create: XOR<CandidatosEleicaoCreateWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUncheckedCreateWithoutLocalVotacao_has_candidatoEleicaoInput>
    where?: CandidatosEleicaoWhereInput
  }

  export type CandidatosEleicaoUpdateToOneWithWhereWithoutLocalVotacao_has_candidatoEleicaoInput = {
    where?: CandidatosEleicaoWhereInput
    data: XOR<CandidatosEleicaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput, CandidatosEleicaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput>
  }

  export type CandidatosEleicaoUpdateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicao?: EleicoesUpdateOneRequiredWithoutCandidatosEleicaoNestedInput
    municipio?: MunicipioUpdateOneRequiredWithoutCandidatosEleicaoNestedInput
  }

  export type CandidatosEleicaoUncheckedUpdateWithoutLocalVotacao_has_candidatoEleicaoInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    municipioId?: IntFieldUpdateOperationsInput | number
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicoesUuid?: StringFieldUpdateOperationsInput | string
  }

  export type quantidade_votos_eleicaoUpsertWithWhereUniqueWithoutLocalvotacaoInput = {
    where: quantidade_votos_eleicaoWhereUniqueInput
    update: XOR<quantidade_votos_eleicaoUpdateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedUpdateWithoutLocalvotacaoInput>
    create: XOR<quantidade_votos_eleicaoCreateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedCreateWithoutLocalvotacaoInput>
  }

  export type quantidade_votos_eleicaoUpdateWithWhereUniqueWithoutLocalvotacaoInput = {
    where: quantidade_votos_eleicaoWhereUniqueInput
    data: XOR<quantidade_votos_eleicaoUpdateWithoutLocalvotacaoInput, quantidade_votos_eleicaoUncheckedUpdateWithoutLocalvotacaoInput>
  }

  export type quantidade_votos_eleicaoUpdateManyWithWhereWithoutLocalvotacaoInput = {
    where: quantidade_votos_eleicaoScalarWhereInput
    data: XOR<quantidade_votos_eleicaoUpdateManyMutationInput, quantidade_votos_eleicaoUncheckedUpdateManyWithoutLocalvotacaoInput>
  }

  export type quantidade_votos_eleicaoScalarWhereInput = {
    AND?: quantidade_votos_eleicaoScalarWhereInput | quantidade_votos_eleicaoScalarWhereInput[]
    OR?: quantidade_votos_eleicaoScalarWhereInput[]
    NOT?: quantidade_votos_eleicaoScalarWhereInput | quantidade_votos_eleicaoScalarWhereInput[]
    uuidLocal?: StringFilter<"quantidade_votos_eleicao"> | string
    votos?: IntFilter<"quantidade_votos_eleicao"> | number
  }

  export type LocalVotacao_has_candidatoEleicaoCreateWithoutQuantidade_votos_eleicaoInput = {
    uuid?: string
    localvontacao: LocalVotacaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput
    candidatoEleicao: CandidatosEleicaoCreateNestedOneWithoutLocalVotacao_has_candidatoEleicaoInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutQuantidade_votos_eleicaoInput = {
    uuid?: string
    localVotacaoUuid: number
    candidatosEleicaoSequencial: bigint | number
  }

  export type LocalVotacao_has_candidatoEleicaoCreateOrConnectWithoutQuantidade_votos_eleicaoInput = {
    where: LocalVotacao_has_candidatoEleicaoWhereUniqueInput
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutQuantidade_votos_eleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpsertWithoutQuantidade_votos_eleicaoInput = {
    update: XOR<LocalVotacao_has_candidatoEleicaoUpdateWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutQuantidade_votos_eleicaoInput>
    create: XOR<LocalVotacao_has_candidatoEleicaoCreateWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedCreateWithoutQuantidade_votos_eleicaoInput>
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateToOneWithWhereWithoutQuantidade_votos_eleicaoInput = {
    where?: LocalVotacao_has_candidatoEleicaoWhereInput
    data: XOR<LocalVotacao_has_candidatoEleicaoUpdateWithoutQuantidade_votos_eleicaoInput, LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutQuantidade_votos_eleicaoInput>
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateWithoutQuantidade_votos_eleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localvontacao?: LocalVotacaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput
    candidatoEleicao?: CandidatosEleicaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutQuantidade_votos_eleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    candidatosEleicaoSequencial?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type LocalVotacaoCreateWithoutSessoesEleitoraisInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoUncheckedCreateWithoutSessoesEleitoraisInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    endereco?: EnderecoLocalVotacaoUncheckedCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoCreateOrConnectWithoutSessoesEleitoraisInput = {
    where: LocalVotacaoWhereUniqueInput
    create: XOR<LocalVotacaoCreateWithoutSessoesEleitoraisInput, LocalVotacaoUncheckedCreateWithoutSessoesEleitoraisInput>
  }

  export type LocalVotacaoUpsertWithoutSessoesEleitoraisInput = {
    update: XOR<LocalVotacaoUpdateWithoutSessoesEleitoraisInput, LocalVotacaoUncheckedUpdateWithoutSessoesEleitoraisInput>
    create: XOR<LocalVotacaoCreateWithoutSessoesEleitoraisInput, LocalVotacaoUncheckedCreateWithoutSessoesEleitoraisInput>
    where?: LocalVotacaoWhereInput
  }

  export type LocalVotacaoUpdateToOneWithWhereWithoutSessoesEleitoraisInput = {
    where?: LocalVotacaoWhereInput
    data: XOR<LocalVotacaoUpdateWithoutSessoesEleitoraisInput, LocalVotacaoUncheckedUpdateWithoutSessoesEleitoraisInput>
  }

  export type LocalVotacaoUpdateWithoutSessoesEleitoraisInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoUncheckedUpdateWithoutSessoesEleitoraisInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    endereco?: EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoCreateWithoutEnderecoInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    sessoesEleitorais?: SessoesEleitoraisCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoUncheckedCreateWithoutEnderecoInput = {
    uuid: number
    localdevotacao: string
    updatedAt?: Date | string
    createdaAt?: Date | string
    totalEleitores?: number
    sessoesEleitorais?: SessoesEleitoraisUncheckedCreateNestedManyWithoutLocalVotacaoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutSessaoeleitoralInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutLocalInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedCreateNestedManyWithoutLocalvontacaoInput
  }

  export type LocalVotacaoCreateOrConnectWithoutEnderecoInput = {
    where: LocalVotacaoWhereUniqueInput
    create: XOR<LocalVotacaoCreateWithoutEnderecoInput, LocalVotacaoUncheckedCreateWithoutEnderecoInput>
  }

  export type LocalVotacaoUpsertWithoutEnderecoInput = {
    update: XOR<LocalVotacaoUpdateWithoutEnderecoInput, LocalVotacaoUncheckedUpdateWithoutEnderecoInput>
    create: XOR<LocalVotacaoCreateWithoutEnderecoInput, LocalVotacaoUncheckedCreateWithoutEnderecoInput>
    where?: LocalVotacaoWhereInput
  }

  export type LocalVotacaoUpdateToOneWithWhereWithoutEnderecoInput = {
    where?: LocalVotacaoWhereInput
    data: XOR<LocalVotacaoUpdateWithoutEnderecoInput, LocalVotacaoUncheckedUpdateWithoutEnderecoInput>
  }

  export type LocalVotacaoUpdateWithoutEnderecoInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    sessoesEleitorais?: SessoesEleitoraisUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type LocalVotacaoUncheckedUpdateWithoutEnderecoInput = {
    uuid?: IntFieldUpdateOperationsInput | number
    localdevotacao?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdaAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalEleitores?: IntFieldUpdateOperationsInput | number
    sessoesEleitorais?: SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutSessaoeleitoralNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoNestedInput
  }

  export type UsuarioCreateWithoutPerfilInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutPerfilInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutPerfilInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPerfilInput, UsuarioUncheckedCreateWithoutPerfilInput>
  }

  export type UsuarioCreateManyPerfilInputEnvelope = {
    data: UsuarioCreateManyPerfilInput | UsuarioCreateManyPerfilInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutPerfilInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutPerfilInput, UsuarioUncheckedUpdateWithoutPerfilInput>
    create: XOR<UsuarioCreateWithoutPerfilInput, UsuarioUncheckedCreateWithoutPerfilInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutPerfilInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutPerfilInput, UsuarioUncheckedUpdateWithoutPerfilInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutPerfilInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutPerfilInput>
  }

  export type EleitorCreateWithoutClassificacaoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    criado_por?: UsuarioCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutClassificacaoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutClassificacaoInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutClassificacaoInput, EleitorUncheckedCreateWithoutClassificacaoInput>
  }

  export type EleitorCreateManyClassificacaoInputEnvelope = {
    data: EleitorCreateManyClassificacaoInput | EleitorCreateManyClassificacaoInput[]
    skipDuplicates?: boolean
  }

  export type EleitorUpsertWithWhereUniqueWithoutClassificacaoInput = {
    where: EleitorWhereUniqueInput
    update: XOR<EleitorUpdateWithoutClassificacaoInput, EleitorUncheckedUpdateWithoutClassificacaoInput>
    create: XOR<EleitorCreateWithoutClassificacaoInput, EleitorUncheckedCreateWithoutClassificacaoInput>
  }

  export type EleitorUpdateWithWhereUniqueWithoutClassificacaoInput = {
    where: EleitorWhereUniqueInput
    data: XOR<EleitorUpdateWithoutClassificacaoInput, EleitorUncheckedUpdateWithoutClassificacaoInput>
  }

  export type EleitorUpdateManyWithWhereWithoutClassificacaoInput = {
    where: EleitorScalarWhereInput
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyWithoutClassificacaoInput>
  }

  export type perfilUsoCreateWithoutUsuarioInput = {
    descricao: string
  }

  export type perfilUsoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    descricao: string
  }

  export type perfilUsoCreateOrConnectWithoutUsuarioInput = {
    where: perfilUsoWhereUniqueInput
    create: XOR<perfilUsoCreateWithoutUsuarioInput, perfilUsoUncheckedCreateWithoutUsuarioInput>
  }

  export type CandidatoCreateWithoutUsuarioInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
    contato?: ContatoCandidatoCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorCreateNestedManyWithoutCandidatoInput
    coligacao?: coligacaoCreateNestedOneWithoutCandidatosInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoUncheckedCreateWithoutUsuarioInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    coligacaoUuid?: string | null
    created_at?: Date | string
    contato?: ContatoCandidatoUncheckedCreateNestedManyWithoutCandidatoInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCandidatoInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedCreateNestedManyWithoutCadandidatoInput
  }

  export type CandidatoCreateOrConnectWithoutUsuarioInput = {
    where: CandidatoWhereUniqueInput
    create: XOR<CandidatoCreateWithoutUsuarioInput, CandidatoUncheckedCreateWithoutUsuarioInput>
  }

  export type loginCreateWithoutUsuarioInput = {
    autorizado: boolean
    email: string
    senha: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type loginUncheckedCreateWithoutUsuarioInput = {
    autorizado: boolean
    email: string
    senha: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type loginCreateOrConnectWithoutUsuarioInput = {
    where: loginWhereUniqueInput
    create: XOR<loginCreateWithoutUsuarioInput, loginUncheckedCreateWithoutUsuarioInput>
  }

  export type loginCreateManyUsuarioInputEnvelope = {
    data: loginCreateManyUsuarioInput | loginCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DadosContatoUsuarioCreateWithoutUsuarioInput = {
    uuid?: string
    whathsapp: string
    email: string
    instagram: string
    twitter: string
    facebook: string
  }

  export type DadosContatoUsuarioUncheckedCreateWithoutUsuarioInput = {
    uuid?: string
    whathsapp: string
    email: string
    instagram: string
    twitter: string
    facebook: string
  }

  export type DadosContatoUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: DadosContatoUsuarioWhereUniqueInput
    create: XOR<DadosContatoUsuarioCreateWithoutUsuarioInput, DadosContatoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type EnderecoUsuarioCreateWithoutUsuarioInput = {
    uuid?: string
    endereco: string
    complemento: string
    bairro: string
    cidade: string
    estado: string
    cep: string
  }

  export type EnderecoUsuarioUncheckedCreateWithoutUsuarioInput = {
    uuid?: string
    endereco: string
    complemento: string
    bairro: string
    cidade: string
    estado: string
    cep: string
  }

  export type EnderecoUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: EnderecoUsuarioWhereUniqueInput
    create: XOR<EnderecoUsuarioCreateWithoutUsuarioInput, EnderecoUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type EleitorCreateWithoutCriado_porInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    created_at?: Date | string
    Formiguinha?: EleitorCreateNestedOneWithoutIndicacoesInput
    sessaoeleitoral?: LocalVotacaoCreateNestedOneWithoutEleitorInput
    candidato: CandidatoCreateNestedOneWithoutEleitorInput
    classificacao?: classificacaoCreateNestedOneWithoutEleitorInput
    coligacao?: coligacaoCreateNestedOneWithoutEleitoresInput
    Indicacoes?: EleitorCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoCreateNestedManyWithoutEleitorInput
  }

  export type EleitorUncheckedCreateWithoutCriado_porInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
    Indicacoes?: EleitorUncheckedCreateNestedManyWithoutFormiguinhaInput
    contatoEleitor?: contatoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedCreateNestedManyWithoutEleitorInput
    EnderecoEleitor?: EnderecoEleitorUncheckedCreateNestedManyWithoutEleitorInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutEleitorInput
  }

  export type EleitorCreateOrConnectWithoutCriado_porInput = {
    where: EleitorWhereUniqueInput
    create: XOR<EleitorCreateWithoutCriado_porInput, EleitorUncheckedCreateWithoutCriado_porInput>
  }

  export type EleitorCreateManyCriado_porInputEnvelope = {
    data: EleitorCreateManyCriado_porInput | EleitorCreateManyCriado_porInput[]
    skipDuplicates?: boolean
  }

  export type coligacaoCreateWithoutUsuarioInput = {
    uuid?: string
    ano: number
    Candidatos?: CandidatoCreateNestedManyWithoutColigacaoInput
    Eleitores?: EleitorCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoUncheckedCreateWithoutUsuarioInput = {
    uuid?: string
    ano: number
    Candidatos?: CandidatoUncheckedCreateNestedManyWithoutColigacaoInput
    Eleitores?: EleitorUncheckedCreateNestedManyWithoutColigacaoInput
  }

  export type coligacaoCreateOrConnectWithoutUsuarioInput = {
    where: coligacaoWhereUniqueInput
    create: XOR<coligacaoCreateWithoutUsuarioInput, coligacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type coligacaoCreateManyUsuarioInputEnvelope = {
    data: coligacaoCreateManyUsuarioInput | coligacaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type atendimentoCreateWithoutCriado_porInput = {
    uuid?: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
    responsavel: UsuarioCreateNestedOneWithoutAtendimentoInput
    eleitor: EleitorCreateNestedOneWithoutAtendimentoInput
    atendimento?: tipoAtendimentoCreateNestedOneWithoutAtendimentoInput
  }

  export type atendimentoUncheckedCreateWithoutCriado_porInput = {
    uuid?: string
    eleitorUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type atendimentoCreateOrConnectWithoutCriado_porInput = {
    where: atendimentoWhereUniqueInput
    create: XOR<atendimentoCreateWithoutCriado_porInput, atendimentoUncheckedCreateWithoutCriado_porInput>
  }

  export type atendimentoCreateManyCriado_porInputEnvelope = {
    data: atendimentoCreateManyCriado_porInput | atendimentoCreateManyCriado_porInput[]
    skipDuplicates?: boolean
  }

  export type atendimentoCreateWithoutResponsavelInput = {
    uuid?: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
    criado_por: UsuarioCreateNestedOneWithoutAtendimentoCriadoInput
    eleitor: EleitorCreateNestedOneWithoutAtendimentoInput
    atendimento?: tipoAtendimentoCreateNestedOneWithoutAtendimentoInput
  }

  export type atendimentoUncheckedCreateWithoutResponsavelInput = {
    uuid?: string
    eleitorUuid: string
    usuarioUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type atendimentoCreateOrConnectWithoutResponsavelInput = {
    where: atendimentoWhereUniqueInput
    create: XOR<atendimentoCreateWithoutResponsavelInput, atendimentoUncheckedCreateWithoutResponsavelInput>
  }

  export type atendimentoCreateManyResponsavelInputEnvelope = {
    data: atendimentoCreateManyResponsavelInput | atendimentoCreateManyResponsavelInput[]
    skipDuplicates?: boolean
  }

  export type perfilUsoUpsertWithoutUsuarioInput = {
    update: XOR<perfilUsoUpdateWithoutUsuarioInput, perfilUsoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<perfilUsoCreateWithoutUsuarioInput, perfilUsoUncheckedCreateWithoutUsuarioInput>
    where?: perfilUsoWhereInput
  }

  export type perfilUsoUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: perfilUsoWhereInput
    data: XOR<perfilUsoUpdateWithoutUsuarioInput, perfilUsoUncheckedUpdateWithoutUsuarioInput>
  }

  export type perfilUsoUpdateWithoutUsuarioInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type perfilUsoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type CandidatoUpsertWithoutUsuarioInput = {
    update: XOR<CandidatoUpdateWithoutUsuarioInput, CandidatoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CandidatoCreateWithoutUsuarioInput, CandidatoUncheckedCreateWithoutUsuarioInput>
    where?: CandidatoWhereInput
  }

  export type CandidatoUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: CandidatoWhereInput
    data: XOR<CandidatoUpdateWithoutUsuarioInput, CandidatoUncheckedUpdateWithoutUsuarioInput>
  }

  export type CandidatoUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contato?: ContatoCandidatoUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUpdateManyWithoutCandidatoNestedInput
    coligacao?: coligacaoUpdateOneWithoutCandidatosNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoUncheckedUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    contato?: ContatoCandidatoUncheckedUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCandidatoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoNestedInput
  }

  export type loginUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: loginWhereUniqueInput
    update: XOR<loginUpdateWithoutUsuarioInput, loginUncheckedUpdateWithoutUsuarioInput>
    create: XOR<loginCreateWithoutUsuarioInput, loginUncheckedCreateWithoutUsuarioInput>
  }

  export type loginUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: loginWhereUniqueInput
    data: XOR<loginUpdateWithoutUsuarioInput, loginUncheckedUpdateWithoutUsuarioInput>
  }

  export type loginUpdateManyWithWhereWithoutUsuarioInput = {
    where: loginScalarWhereInput
    data: XOR<loginUpdateManyMutationInput, loginUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type loginScalarWhereInput = {
    AND?: loginScalarWhereInput | loginScalarWhereInput[]
    OR?: loginScalarWhereInput[]
    NOT?: loginScalarWhereInput | loginScalarWhereInput[]
    Usuario_uuid?: StringFilter<"login"> | string
    autorizado?: BoolFilter<"login"> | boolean
    email?: StringFilter<"login"> | string
    senha?: StringFilter<"login"> | string
    created_at?: DateTimeFilter<"login"> | Date | string
    updated_at?: DateTimeFilter<"login"> | Date | string
  }

  export type DadosContatoUsuarioUpsertWithoutUsuarioInput = {
    update: XOR<DadosContatoUsuarioUpdateWithoutUsuarioInput, DadosContatoUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DadosContatoUsuarioCreateWithoutUsuarioInput, DadosContatoUsuarioUncheckedCreateWithoutUsuarioInput>
    where?: DadosContatoUsuarioWhereInput
  }

  export type DadosContatoUsuarioUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: DadosContatoUsuarioWhereInput
    data: XOR<DadosContatoUsuarioUpdateWithoutUsuarioInput, DadosContatoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type DadosContatoUsuarioUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    whathsapp?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    instagram?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    facebook?: StringFieldUpdateOperationsInput | string
  }

  export type DadosContatoUsuarioUncheckedUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    whathsapp?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    instagram?: StringFieldUpdateOperationsInput | string
    twitter?: StringFieldUpdateOperationsInput | string
    facebook?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoUsuarioUpsertWithoutUsuarioInput = {
    update: XOR<EnderecoUsuarioUpdateWithoutUsuarioInput, EnderecoUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EnderecoUsuarioCreateWithoutUsuarioInput, EnderecoUsuarioUncheckedCreateWithoutUsuarioInput>
    where?: EnderecoUsuarioWhereInput
  }

  export type EnderecoUsuarioUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: EnderecoUsuarioWhereInput
    data: XOR<EnderecoUsuarioUpdateWithoutUsuarioInput, EnderecoUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type EnderecoUsuarioUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    complemento?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoUsuarioUncheckedUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    complemento?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
  }

  export type EleitorUpsertWithWhereUniqueWithoutCriado_porInput = {
    where: EleitorWhereUniqueInput
    update: XOR<EleitorUpdateWithoutCriado_porInput, EleitorUncheckedUpdateWithoutCriado_porInput>
    create: XOR<EleitorCreateWithoutCriado_porInput, EleitorUncheckedCreateWithoutCriado_porInput>
  }

  export type EleitorUpdateWithWhereUniqueWithoutCriado_porInput = {
    where: EleitorWhereUniqueInput
    data: XOR<EleitorUpdateWithoutCriado_porInput, EleitorUncheckedUpdateWithoutCriado_porInput>
  }

  export type EleitorUpdateManyWithWhereWithoutCriado_porInput = {
    where: EleitorScalarWhereInput
    data: XOR<EleitorUpdateManyMutationInput, EleitorUncheckedUpdateManyWithoutCriado_porInput>
  }

  export type coligacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: coligacaoWhereUniqueInput
    update: XOR<coligacaoUpdateWithoutUsuarioInput, coligacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<coligacaoCreateWithoutUsuarioInput, coligacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type coligacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: coligacaoWhereUniqueInput
    data: XOR<coligacaoUpdateWithoutUsuarioInput, coligacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type coligacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: coligacaoScalarWhereInput
    data: XOR<coligacaoUpdateManyMutationInput, coligacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type coligacaoScalarWhereInput = {
    AND?: coligacaoScalarWhereInput | coligacaoScalarWhereInput[]
    OR?: coligacaoScalarWhereInput[]
    NOT?: coligacaoScalarWhereInput | coligacaoScalarWhereInput[]
    uuid?: StringFilter<"coligacao"> | string
    usuarioUuid?: StringFilter<"coligacao"> | string
    ano?: IntFilter<"coligacao"> | number
  }

  export type atendimentoUpsertWithWhereUniqueWithoutCriado_porInput = {
    where: atendimentoWhereUniqueInput
    update: XOR<atendimentoUpdateWithoutCriado_porInput, atendimentoUncheckedUpdateWithoutCriado_porInput>
    create: XOR<atendimentoCreateWithoutCriado_porInput, atendimentoUncheckedCreateWithoutCriado_porInput>
  }

  export type atendimentoUpdateWithWhereUniqueWithoutCriado_porInput = {
    where: atendimentoWhereUniqueInput
    data: XOR<atendimentoUpdateWithoutCriado_porInput, atendimentoUncheckedUpdateWithoutCriado_porInput>
  }

  export type atendimentoUpdateManyWithWhereWithoutCriado_porInput = {
    where: atendimentoScalarWhereInput
    data: XOR<atendimentoUpdateManyMutationInput, atendimentoUncheckedUpdateManyWithoutCriado_porInput>
  }

  export type atendimentoUpsertWithWhereUniqueWithoutResponsavelInput = {
    where: atendimentoWhereUniqueInput
    update: XOR<atendimentoUpdateWithoutResponsavelInput, atendimentoUncheckedUpdateWithoutResponsavelInput>
    create: XOR<atendimentoCreateWithoutResponsavelInput, atendimentoUncheckedCreateWithoutResponsavelInput>
  }

  export type atendimentoUpdateWithWhereUniqueWithoutResponsavelInput = {
    where: atendimentoWhereUniqueInput
    data: XOR<atendimentoUpdateWithoutResponsavelInput, atendimentoUncheckedUpdateWithoutResponsavelInput>
  }

  export type atendimentoUpdateManyWithWhereWithoutResponsavelInput = {
    where: atendimentoScalarWhereInput
    data: XOR<atendimentoUpdateManyMutationInput, atendimentoUncheckedUpdateManyWithoutResponsavelInput>
  }

  export type UsuarioCreateWithoutContatoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutContatoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    enderecoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutContatoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutContatoInput, UsuarioUncheckedCreateWithoutContatoInput>
  }

  export type UsuarioCreateManyContatoInputEnvelope = {
    data: UsuarioCreateManyContatoInput | UsuarioCreateManyContatoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutContatoInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutContatoInput, UsuarioUncheckedUpdateWithoutContatoInput>
    create: XOR<UsuarioCreateWithoutContatoInput, UsuarioUncheckedCreateWithoutContatoInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutContatoInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutContatoInput, UsuarioUncheckedUpdateWithoutContatoInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutContatoInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutContatoInput>
  }

  export type UsuarioCreateWithoutEnderecoUsuarioInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    login?: loginCreateNestedManyWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutEnderecoUsuarioInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    login?: loginUncheckedCreateNestedManyWithoutUsuarioInput
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutEnderecoUsuarioInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEnderecoUsuarioInput, UsuarioUncheckedCreateWithoutEnderecoUsuarioInput>
  }

  export type UsuarioCreateManyEnderecoUsuarioInputEnvelope = {
    data: UsuarioCreateManyEnderecoUsuarioInput | UsuarioCreateManyEnderecoUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutEnderecoUsuarioInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutEnderecoUsuarioInput, UsuarioUncheckedUpdateWithoutEnderecoUsuarioInput>
    create: XOR<UsuarioCreateWithoutEnderecoUsuarioInput, UsuarioUncheckedCreateWithoutEnderecoUsuarioInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutEnderecoUsuarioInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutEnderecoUsuarioInput, UsuarioUncheckedUpdateWithoutEnderecoUsuarioInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutEnderecoUsuarioInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutEnderecoUsuarioInput>
  }

  export type UsuarioCreateWithoutLoginInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Perfil: perfilUsoCreateNestedOneWithoutUsuarioInput
    candidato: CandidatoCreateNestedOneWithoutUsuarioInput
    contato?: DadosContatoUsuarioCreateNestedOneWithoutUsuarioInput
    EnderecoUsuario?: EnderecoUsuarioCreateNestedOneWithoutUsuarioInput
    Eleitor?: EleitorCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioUncheckedCreateWithoutLoginInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
    Eleitor?: EleitorUncheckedCreateNestedManyWithoutCriado_porInput
    coligacao?: coligacaoUncheckedCreateNestedManyWithoutUsuarioInput
    atendimentoCriado?: atendimentoUncheckedCreateNestedManyWithoutCriado_porInput
    atendimento?: atendimentoUncheckedCreateNestedManyWithoutResponsavelInput
  }

  export type UsuarioCreateOrConnectWithoutLoginInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutLoginInput, UsuarioUncheckedCreateWithoutLoginInput>
  }

  export type UsuarioUpsertWithoutLoginInput = {
    update: XOR<UsuarioUpdateWithoutLoginInput, UsuarioUncheckedUpdateWithoutLoginInput>
    create: XOR<UsuarioCreateWithoutLoginInput, UsuarioUncheckedCreateWithoutLoginInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutLoginInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutLoginInput, UsuarioUncheckedUpdateWithoutLoginInput>
  }

  export type UsuarioUpdateWithoutLoginInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutLoginInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type CandidatoCreateManyColigacaoInput = {
    uuid?: string
    nomeCandidato: string
    nomeUrna?: string | null
    partido?: string | null
    created_at?: Date | string
  }

  export type EleitorCreateManyColigacaoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
  }

  export type CandidatoUpdateWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUpdateManyWithoutCandidatoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoUncheckedUpdateWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutCandidatoNestedInput
    contato?: ContatoCandidatoUncheckedUpdateManyWithoutCandidatoNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCandidatoNestedInput
    localdevotacao_has_candidato?: PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoNestedInput
  }

  export type CandidatoUncheckedUpdateManyWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCandidato?: StringFieldUpdateOperationsInput | string
    nomeUrna?: NullableStringFieldUpdateOperationsInput | string | null
    partido?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EleitorUpdateWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateManyWithoutColigacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateManyCandidatoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
  }

  export type ContatoCandidatoCreateManyCandidatoInput = {
    uuidContato?: string
    nomeContato: string
    cargo: string
    telefone: string
    whatsapp?: string | null
    email: string
  }

  export type EleitorCreateManyCandidatoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
  }

  export type PlanejamentoLocalVotacaoCreateManyCadandidatoInput = {
    uuid?: string
    localVotacaoUuid: number
  }

  export type UsuarioUpdateWithoutCandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutCandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContatoCandidatoUpdateWithoutCandidatoInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ContatoCandidatoUncheckedUpdateWithoutCandidatoInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ContatoCandidatoUncheckedUpdateManyWithoutCandidatoInput = {
    uuidContato?: StringFieldUpdateOperationsInput | string
    nomeContato?: StringFieldUpdateOperationsInput | string
    cargo?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type EleitorUpdateWithoutCandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutCandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateManyWithoutCandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlanejamentoLocalVotacaoUpdateWithoutCadandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    Local?: LocalVotacaoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput
    Expectativa?: ExpectativaUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateWithoutCadandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    Expectativa?: ExpectativaUncheckedUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutCadandidatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
  }

  export type atendimentoCreateManyAtendimentoInput = {
    uuid?: string
    eleitorUuid: string
    usuarioUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    descricao?: string | null
  }

  export type atendimentoUpdateWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_por?: UsuarioUpdateOneRequiredWithoutAtendimentoCriadoNestedInput
    responsavel?: UsuarioUpdateOneRequiredWithoutAtendimentoNestedInput
    eleitor?: EleitorUpdateOneRequiredWithoutAtendimentoNestedInput
  }

  export type atendimentoUncheckedUpdateWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUncheckedUpdateManyWithoutAtendimentoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EleitorCreateManyFormiguinhaInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
  }

  export type contatoEleitorCreateManyEleitorInput = {
    uuid?: string
    email: string
    celular: string
  }

  export type MidiasSociaisEleitorCreateManyEleitorInput = {
    uuid?: string
    instagram?: string | null
    facebook?: string | null
    twitter?: string | null
    tiktok?: string | null
  }

  export type DadosPessoaisEleitorCreateManyEleitorInput = {
    uuid?: string
    cpf?: string | null
    rg?: string | null
    sessao: string
    zona: string
    localdevotacao: string
  }

  export type EnderecoEleitorCreateManyEleitorInput = {
    uuid?: string
    latitude: number
    longitude: number
    endereco?: string | null
    nCasa?: string | null
    cep?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    codIbge?: string | null
    uf?: string | null
    pais?: string | null
  }

  export type atendimentoCreateManyEleitorInput = {
    uuid?: string
    usuarioUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type EleitorUpdateWithoutFormiguinhaInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutFormiguinhaInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateManyWithoutFormiguinhaInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type contatoEleitorUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
  }

  export type contatoEleitorUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
  }

  export type contatoEleitorUncheckedUpdateManyWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    celular?: StringFieldUpdateOperationsInput | string
  }

  export type MidiasSociaisEleitorUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MidiasSociaisEleitorUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    tiktok?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DadosPessoaisEleitorUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
  }

  export type DadosPessoaisEleitorUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
  }

  export type DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    localdevotacao?: StringFieldUpdateOperationsInput | string
  }

  export type EnderecoEleitorUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoEleitorUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoEleitorUncheckedUpdateManyWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    nCasa?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    codIbge?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_por?: UsuarioUpdateOneRequiredWithoutAtendimentoCriadoNestedInput
    responsavel?: UsuarioUpdateOneRequiredWithoutAtendimentoNestedInput
    atendimento?: tipoAtendimentoUpdateOneWithoutAtendimentoNestedInput
  }

  export type atendimentoUncheckedUpdateWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUncheckedUpdateManyWithoutEleitorInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ExpectativaCreateManyLocalvotacaoInput = {
    expectativa?: number
  }

  export type ExpectativaUpdateWithoutLocalvotacaoInput = {
    expectativa?: FloatFieldUpdateOperationsInput | number
  }

  export type ExpectativaUncheckedUpdateWithoutLocalvotacaoInput = {
    expectativa?: FloatFieldUpdateOperationsInput | number
  }

  export type ExpectativaUncheckedUpdateManyWithoutLocalvotacaoInput = {
    expectativa?: FloatFieldUpdateOperationsInput | number
  }

  export type EnderecoLocalVotacaoCreateManyLocalVotacaoInput = {
    uuid?: string
    endereco: string
    bairro: string
    cidade: string
    uf: string
    cep: number
    latitude: number
    longitude: number
  }

  export type SessoesEleitoraisCreateManyLocalVotacaoInput = {
    uuid?: string
    sessao: string
    zona: string
    nVotantes: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EleitorCreateManySessaoeleitoralInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    classificacaoId?: number | null
    created_at?: Date | string
  }

  export type PlanejamentoLocalVotacaoCreateManyLocalInput = {
    uuid?: string
    candidatoUuid: string
  }

  export type LocalVotacao_has_candidatoEleicaoCreateManyLocalvontacaoInput = {
    uuid?: string
    candidatosEleicaoSequencial: bigint | number
  }

  export type EnderecoLocalVotacaoUpdateWithoutLocalVotacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type EnderecoLocalVotacaoUncheckedUpdateWithoutLocalVotacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type EnderecoLocalVotacaoUncheckedUpdateManyWithoutLocalVotacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    endereco?: StringFieldUpdateOperationsInput | string
    bairro?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    uf?: StringFieldUpdateOperationsInput | string
    cep?: IntFieldUpdateOperationsInput | number
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type SessoesEleitoraisUpdateWithoutLocalVotacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessoesEleitoraisUncheckedUpdateWithoutLocalVotacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessoesEleitoraisUncheckedUpdateManyWithoutLocalVotacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    sessao?: StringFieldUpdateOperationsInput | string
    zona?: StringFieldUpdateOperationsInput | string
    nVotantes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EleitorUpdateWithoutSessaoeleitoralInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutSessaoeleitoralInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateManyWithoutSessaoeleitoralInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlanejamentoLocalVotacaoUpdateWithoutLocalInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    cadandidato?: CandidatoUpdateOneRequiredWithoutLocaldevotacao_has_candidatoNestedInput
    Expectativa?: ExpectativaUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateWithoutLocalInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    Expectativa?: ExpectativaUncheckedUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type PlanejamentoLocalVotacaoUncheckedUpdateManyWithoutLocalInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    candidatoUuid?: StringFieldUpdateOperationsInput | string
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateWithoutLocalvontacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    candidatoEleicao?: CandidatosEleicaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutLocalvontacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    candidatosEleicaoSequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUncheckedUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutLocalvontacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    candidatosEleicaoSequencial?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type CandidatosEleicaoCreateManyEleicaoInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    municipioId: number
    numero_urna: number
  }

  export type CandidatosEleicaoUpdateWithoutEleicaoInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
    municipio?: MunicipioUpdateOneRequiredWithoutCandidatosEleicaoNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutCandidatoEleicaoNestedInput
  }

  export type CandidatosEleicaoUncheckedUpdateWithoutEleicaoInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    municipioId?: IntFieldUpdateOperationsInput | number
    numero_urna?: IntFieldUpdateOperationsInput | number
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutCandidatoEleicaoNestedInput
  }

  export type CandidatosEleicaoUncheckedUpdateManyWithoutEleicaoInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    municipioId?: IntFieldUpdateOperationsInput | number
    numero_urna?: IntFieldUpdateOperationsInput | number
  }

  export type MunicipioCreateManyUfInput = {
    id?: number
    descricao: string
  }

  export type MunicipioUpdateWithoutUfInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    CandidatosEleicao?: CandidatosEleicaoUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateWithoutUfInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    CandidatosEleicao?: CandidatosEleicaoUncheckedUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateManyWithoutUfInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type CandidatosEleicaoCreateManyMunicipioInput = {
    sequencial: bigint | number
    nomecandidato: string
    cargoCandidato: string
    numero_urna: number
    eleicoesUuid: string
  }

  export type CandidatosEleicaoUpdateWithoutMunicipioInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicao?: EleicoesUpdateOneRequiredWithoutCandidatosEleicaoNestedInput
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUpdateManyWithoutCandidatoEleicaoNestedInput
  }

  export type CandidatosEleicaoUncheckedUpdateWithoutMunicipioInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicoesUuid?: StringFieldUpdateOperationsInput | string
    LocalVotacao_has_candidatoEleicao?: LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutCandidatoEleicaoNestedInput
  }

  export type CandidatosEleicaoUncheckedUpdateManyWithoutMunicipioInput = {
    sequencial?: BigIntFieldUpdateOperationsInput | bigint | number
    nomecandidato?: StringFieldUpdateOperationsInput | string
    cargoCandidato?: StringFieldUpdateOperationsInput | string
    numero_urna?: IntFieldUpdateOperationsInput | number
    eleicoesUuid?: StringFieldUpdateOperationsInput | string
  }

  export type LocalVotacao_has_candidatoEleicaoCreateManyCandidatoEleicaoInput = {
    uuid?: string
    localVotacaoUuid: number
  }

  export type LocalVotacao_has_candidatoEleicaoUpdateWithoutCandidatoEleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localvontacao?: LocalVotacaoUpdateOneRequiredWithoutLocalVotacao_has_candidatoEleicaoNestedInput
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateWithoutCandidatoEleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
    quantidade_votos_eleicao?: quantidade_votos_eleicaoUncheckedUpdateManyWithoutLocalvotacaoNestedInput
  }

  export type LocalVotacao_has_candidatoEleicaoUncheckedUpdateManyWithoutCandidatoEleicaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    localVotacaoUuid?: IntFieldUpdateOperationsInput | number
  }

  export type quantidade_votos_eleicaoCreateManyLocalvotacaoInput = {
    votos: number
  }

  export type quantidade_votos_eleicaoUpdateWithoutLocalvotacaoInput = {
    votos?: IntFieldUpdateOperationsInput | number
  }

  export type quantidade_votos_eleicaoUncheckedUpdateWithoutLocalvotacaoInput = {
    votos?: IntFieldUpdateOperationsInput | number
  }

  export type quantidade_votos_eleicaoUncheckedUpdateManyWithoutLocalvotacaoInput = {
    votos?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioCreateManyPerfilInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    dadosContatoUsuarioUuid?: string | null
    enderecoUsuarioUuid?: string | null
  }

  export type UsuarioUpdateWithoutPerfilInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPerfilInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutPerfilInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EleitorCreateManyClassificacaoInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    usuarioUuid?: string | null
    sessaoEleitoral?: number | null
    created_at?: Date | string
  }

  export type EleitorUpdateWithoutClassificacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    criado_por?: UsuarioUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutClassificacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateManyWithoutClassificacaoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type loginCreateManyUsuarioInput = {
    autorizado: boolean
    email: string
    senha: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type EleitorCreateManyCriado_porInput = {
    uuid?: string
    nomeCompleto: string
    nomeMae?: string
    sexo?: string
    cpf: string
    rg: string
    coligacaoUuid?: string | null
    dataNascimento?: Date | string | null
    indicado_por?: string | null
    candidatoUuid: string
    sessaoEleitoral?: number | null
    classificacaoId?: number | null
    created_at?: Date | string
  }

  export type coligacaoCreateManyUsuarioInput = {
    uuid?: string
    ano: number
  }

  export type atendimentoCreateManyCriado_porInput = {
    uuid?: string
    eleitorUuid: string
    responsavelUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type atendimentoCreateManyResponsavelInput = {
    uuid?: string
    eleitorUuid: string
    usuarioUuid: string
    custo?: number
    dataatendimento?: Date | string
    created_at?: Date | string
    updated_at?: Date | string | null
    tipoAtendimento?: number | null
    descricao?: string | null
  }

  export type loginUpdateWithoutUsuarioInput = {
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type loginUncheckedUpdateWithoutUsuarioInput = {
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type loginUncheckedUpdateManyWithoutUsuarioInput = {
    autorizado?: BoolFieldUpdateOperationsInput | boolean
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EleitorUpdateWithoutCriado_porInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Formiguinha?: EleitorUpdateOneWithoutIndicacoesNestedInput
    sessaoeleitoral?: LocalVotacaoUpdateOneWithoutEleitorNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutEleitorNestedInput
    classificacao?: classificacaoUpdateOneWithoutEleitorNestedInput
    coligacao?: coligacaoUpdateOneWithoutEleitoresNestedInput
    Indicacoes?: EleitorUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateWithoutCriado_porInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Indicacoes?: EleitorUncheckedUpdateManyWithoutFormiguinhaNestedInput
    contatoEleitor?: contatoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    MidiasSociaisEleitor?: MidiasSociaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    DadosPessoaisEleitor?: DadosPessoaisEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    EnderecoEleitor?: EnderecoEleitorUncheckedUpdateManyWithoutEleitorNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutEleitorNestedInput
  }

  export type EleitorUncheckedUpdateManyWithoutCriado_porInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    nomeMae?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    rg?: StringFieldUpdateOperationsInput | string
    coligacaoUuid?: NullableStringFieldUpdateOperationsInput | string | null
    dataNascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    indicado_por?: NullableStringFieldUpdateOperationsInput | string | null
    candidatoUuid?: StringFieldUpdateOperationsInput | string
    sessaoEleitoral?: NullableIntFieldUpdateOperationsInput | number | null
    classificacaoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coligacaoUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Candidatos?: CandidatoUpdateManyWithoutColigacaoNestedInput
    Eleitores?: EleitorUpdateManyWithoutColigacaoNestedInput
  }

  export type coligacaoUncheckedUpdateWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
    Candidatos?: CandidatoUncheckedUpdateManyWithoutColigacaoNestedInput
    Eleitores?: EleitorUncheckedUpdateManyWithoutColigacaoNestedInput
  }

  export type coligacaoUncheckedUpdateManyWithoutUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    ano?: IntFieldUpdateOperationsInput | number
  }

  export type atendimentoUpdateWithoutCriado_porInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    responsavel?: UsuarioUpdateOneRequiredWithoutAtendimentoNestedInput
    eleitor?: EleitorUpdateOneRequiredWithoutAtendimentoNestedInput
    atendimento?: tipoAtendimentoUpdateOneWithoutAtendimentoNestedInput
  }

  export type atendimentoUncheckedUpdateWithoutCriado_porInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUncheckedUpdateManyWithoutCriado_porInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    responsavelUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUpdateWithoutResponsavelInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    criado_por?: UsuarioUpdateOneRequiredWithoutAtendimentoCriadoNestedInput
    eleitor?: EleitorUpdateOneRequiredWithoutAtendimentoNestedInput
    atendimento?: tipoAtendimentoUpdateOneWithoutAtendimentoNestedInput
  }

  export type atendimentoUncheckedUpdateWithoutResponsavelInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type atendimentoUncheckedUpdateManyWithoutResponsavelInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    eleitorUuid?: StringFieldUpdateOperationsInput | string
    usuarioUuid?: StringFieldUpdateOperationsInput | string
    custo?: FloatFieldUpdateOperationsInput | number
    dataatendimento?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipoAtendimento?: NullableIntFieldUpdateOperationsInput | number | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioCreateManyContatoInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    enderecoUsuarioUuid?: string | null
  }

  export type UsuarioUpdateWithoutContatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    EnderecoUsuario?: EnderecoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutContatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutContatoInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    enderecoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioCreateManyEnderecoUsuarioInput = {
    uuid?: string
    nomeCompleto: string
    apelido?: string | null
    isAtivo?: boolean
    uuidCandidato: string
    created_at?: Date | string
    updated_at?: Date | string
    perfil: number
    dadosContatoUsuarioUuid?: string | null
  }

  export type UsuarioUpdateWithoutEnderecoUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Perfil?: perfilUsoUpdateOneRequiredWithoutUsuarioNestedInput
    candidato?: CandidatoUpdateOneRequiredWithoutUsuarioNestedInput
    login?: loginUpdateManyWithoutUsuarioNestedInput
    contato?: DadosContatoUsuarioUpdateOneWithoutUsuarioNestedInput
    Eleitor?: EleitorUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEnderecoUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
    login?: loginUncheckedUpdateManyWithoutUsuarioNestedInput
    Eleitor?: EleitorUncheckedUpdateManyWithoutCriado_porNestedInput
    coligacao?: coligacaoUncheckedUpdateManyWithoutUsuarioNestedInput
    atendimentoCriado?: atendimentoUncheckedUpdateManyWithoutCriado_porNestedInput
    atendimento?: atendimentoUncheckedUpdateManyWithoutResponsavelNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutEnderecoUsuarioInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    nomeCompleto?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    isAtivo?: BoolFieldUpdateOperationsInput | boolean
    uuidCandidato?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    perfil?: IntFieldUpdateOperationsInput | number
    dadosContatoUsuarioUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ColigacaoCountOutputTypeDefaultArgs instead
     */
    export type ColigacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ColigacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CandidatoCountOutputTypeDefaultArgs instead
     */
    export type CandidatoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CandidatoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoAtendimentoCountOutputTypeDefaultArgs instead
     */
    export type TipoAtendimentoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoAtendimentoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EleitorCountOutputTypeDefaultArgs instead
     */
    export type EleitorCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EleitorCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PlanejamentoLocalVotacaoCountOutputTypeDefaultArgs instead
     */
    export type PlanejamentoLocalVotacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PlanejamentoLocalVotacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocalVotacaoCountOutputTypeDefaultArgs instead
     */
    export type LocalVotacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocalVotacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EleicoesCountOutputTypeDefaultArgs instead
     */
    export type EleicoesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EleicoesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UFCountOutputTypeDefaultArgs instead
     */
    export type UFCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UFCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MunicipioCountOutputTypeDefaultArgs instead
     */
    export type MunicipioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MunicipioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CandidatosEleicaoCountOutputTypeDefaultArgs instead
     */
    export type CandidatosEleicaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CandidatosEleicaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocalVotacao_has_candidatoEleicaoCountOutputTypeDefaultArgs instead
     */
    export type LocalVotacao_has_candidatoEleicaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocalVotacao_has_candidatoEleicaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PerfilUsoCountOutputTypeDefaultArgs instead
     */
    export type PerfilUsoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PerfilUsoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClassificacaoCountOutputTypeDefaultArgs instead
     */
    export type ClassificacaoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClassificacaoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DadosContatoUsuarioCountOutputTypeDefaultArgs instead
     */
    export type DadosContatoUsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DadosContatoUsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EnderecoUsuarioCountOutputTypeDefaultArgs instead
     */
    export type EnderecoUsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EnderecoUsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use coligacaoDefaultArgs instead
     */
    export type coligacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = coligacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CandidatoDefaultArgs instead
     */
    export type CandidatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CandidatoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ContatoCandidatoDefaultArgs instead
     */
    export type ContatoCandidatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ContatoCandidatoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tipoAtendimentoDefaultArgs instead
     */
    export type tipoAtendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tipoAtendimentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use atendimentoDefaultArgs instead
     */
    export type atendimentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = atendimentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EleitorDefaultArgs instead
     */
    export type EleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EleitorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use contatoEleitorDefaultArgs instead
     */
    export type contatoEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = contatoEleitorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MidiasSociaisEleitorDefaultArgs instead
     */
    export type MidiasSociaisEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MidiasSociaisEleitorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EnderecoEleitorDefaultArgs instead
     */
    export type EnderecoEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EnderecoEleitorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DadosPessoaisEleitorDefaultArgs instead
     */
    export type DadosPessoaisEleitorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DadosPessoaisEleitorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PlanejamentoLocalVotacaoDefaultArgs instead
     */
    export type PlanejamentoLocalVotacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PlanejamentoLocalVotacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ExpectativaDefaultArgs instead
     */
    export type ExpectativaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ExpectativaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocalVotacaoDefaultArgs instead
     */
    export type LocalVotacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocalVotacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EleicoesDefaultArgs instead
     */
    export type EleicoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EleicoesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UFDefaultArgs instead
     */
    export type UFArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UFDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MunicipioDefaultArgs instead
     */
    export type MunicipioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MunicipioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CandidatosEleicaoDefaultArgs instead
     */
    export type CandidatosEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CandidatosEleicaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocalVotacao_has_candidatoEleicaoDefaultArgs instead
     */
    export type LocalVotacao_has_candidatoEleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocalVotacao_has_candidatoEleicaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use quantidade_votos_eleicaoDefaultArgs instead
     */
    export type quantidade_votos_eleicaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = quantidade_votos_eleicaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SessoesEleitoraisDefaultArgs instead
     */
    export type SessoesEleitoraisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SessoesEleitoraisDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EnderecoLocalVotacaoDefaultArgs instead
     */
    export type EnderecoLocalVotacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EnderecoLocalVotacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use perfilUsoDefaultArgs instead
     */
    export type perfilUsoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = perfilUsoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use classificacaoDefaultArgs instead
     */
    export type classificacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = classificacaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DadosContatoUsuarioDefaultArgs instead
     */
    export type DadosContatoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DadosContatoUsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EnderecoUsuarioDefaultArgs instead
     */
    export type EnderecoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EnderecoUsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use loginDefaultArgs instead
     */
    export type loginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = loginDefaultArgs<ExtArgs>
    /**
     * @deprecated Use blacklistDefaultArgs instead
     */
    export type blacklistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = blacklistDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}