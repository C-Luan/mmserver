
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.19.1
 * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
 */
Prisma.prismaVersion = {
  client: "5.19.1",
  engine: "69d742ee20b815d88e17e54db4a2a7a3b30324e3"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ColigacaoScalarFieldEnum = {
  uuid: 'uuid',
  usuarioUuid: 'usuarioUuid',
  ano: 'ano'
};

exports.Prisma.CandidatoScalarFieldEnum = {
  uuid: 'uuid',
  nomeCandidato: 'nomeCandidato',
  nomeUrna: 'nomeUrna',
  partido: 'partido',
  coligacaoUuid: 'coligacaoUuid',
  created_at: 'created_at'
};

exports.Prisma.ContatoCandidatoScalarFieldEnum = {
  uuidContato: 'uuidContato',
  uuidEmpresa: 'uuidEmpresa',
  nomeContato: 'nomeContato',
  cargo: 'cargo',
  telefone: 'telefone',
  whatsapp: 'whatsapp',
  email: 'email'
};

exports.Prisma.TipoAtendimentoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.AtendimentoScalarFieldEnum = {
  uuid: 'uuid',
  eleitorUuid: 'eleitorUuid',
  usuarioUuid: 'usuarioUuid',
  responsavelUuid: 'responsavelUuid',
  custo: 'custo',
  created_at: 'created_at',
  updated_at: 'updated_at',
  tipoAtendimento: 'tipoAtendimento',
  descricao: 'descricao'
};

exports.Prisma.EleitorScalarFieldEnum = {
  uuid: 'uuid',
  nomeCompleto: 'nomeCompleto',
  nomeMae: 'nomeMae',
  cpf: 'cpf',
  rg: 'rg',
  coligacaoUuid: 'coligacaoUuid',
  dataNascimento: 'dataNascimento',
  indicadopor: 'indicadopor',
  formiguinha: 'formiguinha',
  candidatoUuid: 'candidatoUuid',
  usuarioUuid: 'usuarioUuid',
  sessaoEleitoral: 'sessaoEleitoral',
  classificacaoId: 'classificacaoId',
  created_at: 'created_at'
};

exports.Prisma.ContatoEleitorScalarFieldEnum = {
  uuid: 'uuid',
  email: 'email',
  celular: 'celular',
  eleitorUuid: 'eleitorUuid'
};

exports.Prisma.MidiasSociaisEleitorScalarFieldEnum = {
  uuid: 'uuid',
  instagram: 'instagram',
  facebook: 'facebook',
  twitter: 'twitter',
  tiktok: 'tiktok',
  eleitorUuid: 'eleitorUuid'
};

exports.Prisma.EnderecoEleitorScalarFieldEnum = {
  uuid: 'uuid',
  latitude: 'latitude',
  longitude: 'longitude',
  endereco: 'endereco',
  nCasa: 'nCasa',
  cep: 'cep',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  codIbge: 'codIbge',
  uf: 'uf',
  pais: 'pais',
  eleitorUuid: 'eleitorUuid'
};

exports.Prisma.DadosPessoaisEleitorScalarFieldEnum = {
  uuid: 'uuid',
  cpf: 'cpf',
  rg: 'rg',
  sessao: 'sessao',
  zona: 'zona',
  localdevotacao: 'localdevotacao',
  eleitorUuid: 'eleitorUuid'
};

exports.Prisma.PlanejamentoLocalVotacaoScalarFieldEnum = {
  uuid: 'uuid',
  localVotacaoUuid: 'localVotacaoUuid',
  candidatoUuid: 'candidatoUuid'
};

exports.Prisma.ExpectativaScalarFieldEnum = {
  localdevotacao_has_CandidatoUuid: 'localdevotacao_has_CandidatoUuid',
  expectativa: 'expectativa'
};

exports.Prisma.LocalVotacaoScalarFieldEnum = {
  uuid: 'uuid',
  localdevotacao: 'localdevotacao',
  updatedAt: 'updatedAt',
  createdaAt: 'createdaAt',
  totalEleitores: 'totalEleitores'
};

exports.Prisma.EleicoesScalarFieldEnum = {
  uuid: 'uuid',
  ano: 'ano',
  descricao: 'descricao'
};

exports.Prisma.UFScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.MunicipioScalarFieldEnum = {
  id: 'id',
  uFId: 'uFId',
  descricao: 'descricao'
};

exports.Prisma.CandidatosEleicaoScalarFieldEnum = {
  sequencial: 'sequencial',
  nomecandidato: 'nomecandidato',
  cargoCandidato: 'cargoCandidato',
  municipioId: 'municipioId',
  numero_urna: 'numero_urna',
  eleicoesUuid: 'eleicoesUuid'
};

exports.Prisma.LocalVotacao_has_candidatoEleicaoScalarFieldEnum = {
  uuid: 'uuid',
  localVotacaoUuid: 'localVotacaoUuid',
  candidatosEleicaoSequencial: 'candidatosEleicaoSequencial'
};

exports.Prisma.Quantidade_votos_eleicaoScalarFieldEnum = {
  uuidLocal: 'uuidLocal',
  votos: 'votos'
};

exports.Prisma.SessoesEleitoraisScalarFieldEnum = {
  uuid: 'uuid',
  sessao: 'sessao',
  zona: 'zona',
  nVotantes: 'nVotantes',
  localVotacaoUuid: 'localVotacaoUuid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EnderecoLocalVotacaoScalarFieldEnum = {
  uuid: 'uuid',
  endereco: 'endereco',
  bairro: 'bairro',
  cidade: 'cidade',
  uf: 'uf',
  cep: 'cep',
  latitude: 'latitude',
  longitude: 'longitude',
  localVotacaoUuid: 'localVotacaoUuid'
};

exports.Prisma.PerfilUsoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.ClassificacaoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  hexColor: 'hexColor',
  eleitoruuid: 'eleitoruuid'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  uuid: 'uuid',
  nomeCompleto: 'nomeCompleto',
  apelido: 'apelido',
  isAtivo: 'isAtivo',
  uuidCandidato: 'uuidCandidato',
  created_at: 'created_at',
  updated_at: 'updated_at',
  perfil: 'perfil',
  dadosContatoUsuarioUuid: 'dadosContatoUsuarioUuid',
  enderecoUsuarioUuid: 'enderecoUsuarioUuid'
};

exports.Prisma.DadosContatoUsuarioScalarFieldEnum = {
  uuid: 'uuid',
  whathsapp: 'whathsapp',
  email: 'email',
  instagram: 'instagram',
  twitter: 'twitter',
  facebook: 'facebook'
};

exports.Prisma.EnderecoUsuarioScalarFieldEnum = {
  uuid: 'uuid',
  endereco: 'endereco',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  estado: 'estado',
  cep: 'cep'
};

exports.Prisma.LoginScalarFieldEnum = {
  Usuario_uuid: 'Usuario_uuid',
  autorizado: 'autorizado',
  email: 'email',
  senha: 'senha',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BlacklistScalarFieldEnum = {
  tokenexpirado: 'tokenexpirado',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  coligacao: 'coligacao',
  Candidato: 'Candidato',
  ContatoCandidato: 'ContatoCandidato',
  tipoAtendimento: 'tipoAtendimento',
  atendimento: 'atendimento',
  Eleitor: 'Eleitor',
  contatoEleitor: 'contatoEleitor',
  MidiasSociaisEleitor: 'MidiasSociaisEleitor',
  EnderecoEleitor: 'EnderecoEleitor',
  DadosPessoaisEleitor: 'DadosPessoaisEleitor',
  PlanejamentoLocalVotacao: 'PlanejamentoLocalVotacao',
  Expectativa: 'Expectativa',
  LocalVotacao: 'LocalVotacao',
  Eleicoes: 'Eleicoes',
  UF: 'UF',
  Municipio: 'Municipio',
  CandidatosEleicao: 'CandidatosEleicao',
  LocalVotacao_has_candidatoEleicao: 'LocalVotacao_has_candidatoEleicao',
  quantidade_votos_eleicao: 'quantidade_votos_eleicao',
  SessoesEleitorais: 'SessoesEleitorais',
  EnderecoLocalVotacao: 'EnderecoLocalVotacao',
  perfilUso: 'perfilUso',
  classificacao: 'classificacao',
  Usuario: 'Usuario',
  DadosContatoUsuario: 'DadosContatoUsuario',
  EnderecoUsuario: 'EnderecoUsuario',
  login: 'login',
  blacklist: 'blacklist'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
